//
// File generated by /home/fujigami/retro/root_build/bin/rootcint at Thu Jan 21 14:25:58 2021

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIhomedIfujigamidIretrodIlowedIsourcedImacrodIsrcdImacroRootDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "macroRootDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void Eventdisplay_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Eventdisplay(void *p = 0);
   static void *newArray_Eventdisplay(Long_t size, void *p);
   static void delete_Eventdisplay(void *p);
   static void deleteArray_Eventdisplay(void *p);
   static void destruct_Eventdisplay(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Eventdisplay*)
   {
      ::Eventdisplay *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Eventdisplay >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Eventdisplay", ::Eventdisplay::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/eventdisplay.hh", 10,
                  typeid(::Eventdisplay), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Eventdisplay::Dictionary, isa_proxy, 4,
                  sizeof(::Eventdisplay) );
      instance.SetNew(&new_Eventdisplay);
      instance.SetNewArray(&newArray_Eventdisplay);
      instance.SetDelete(&delete_Eventdisplay);
      instance.SetDeleteArray(&deleteArray_Eventdisplay);
      instance.SetDestructor(&destruct_Eventdisplay);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Eventdisplay*)
   {
      return GenerateInitInstanceLocal((::Eventdisplay*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Eventdisplay*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void goodness_data_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_goodness_data(void *p = 0);
   static void *newArray_goodness_data(Long_t size, void *p);
   static void delete_goodness_data(void *p);
   static void deleteArray_goodness_data(void *p);
   static void destruct_goodness_data(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::goodness_data*)
   {
      ::goodness_data *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::goodness_data >(0);
      static ::ROOT::TGenericClassInfo 
         instance("goodness_data", ::goodness_data::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/goodness_data.hh", 9,
                  typeid(::goodness_data), ::ROOT::DefineBehavior(ptr, ptr),
                  &::goodness_data::Dictionary, isa_proxy, 4,
                  sizeof(::goodness_data) );
      instance.SetNew(&new_goodness_data);
      instance.SetNewArray(&newArray_goodness_data);
      instance.SetDelete(&delete_goodness_data);
      instance.SetDeleteArray(&deleteArray_goodness_data);
      instance.SetDestructor(&destruct_goodness_data);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::goodness_data*)
   {
      return GenerateInitInstanceLocal((::goodness_data*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::goodness_data*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void l_dir_data_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_l_dir_data(void *p = 0);
   static void *newArray_l_dir_data(Long_t size, void *p);
   static void delete_l_dir_data(void *p);
   static void deleteArray_l_dir_data(void *p);
   static void destruct_l_dir_data(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::l_dir_data*)
   {
      ::l_dir_data *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::l_dir_data >(0);
      static ::ROOT::TGenericClassInfo 
         instance("l_dir_data", ::l_dir_data::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/likelihood_direction_data.hh", 7,
                  typeid(::l_dir_data), ::ROOT::DefineBehavior(ptr, ptr),
                  &::l_dir_data::Dictionary, isa_proxy, 4,
                  sizeof(::l_dir_data) );
      instance.SetNew(&new_l_dir_data);
      instance.SetNewArray(&newArray_l_dir_data);
      instance.SetDelete(&delete_l_dir_data);
      instance.SetDeleteArray(&deleteArray_l_dir_data);
      instance.SetDestructor(&destruct_l_dir_data);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::l_dir_data*)
   {
      return GenerateInitInstanceLocal((::l_dir_data*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::l_dir_data*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void AnalizedData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AnalizedData(void *p = 0);
   static void *newArray_AnalizedData(Long_t size, void *p);
   static void delete_AnalizedData(void *p);
   static void deleteArray_AnalizedData(void *p);
   static void destruct_AnalizedData(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AnalizedData*)
   {
      ::AnalizedData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AnalizedData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AnalizedData", ::AnalizedData::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/AnalizedData.hh", 11,
                  typeid(::AnalizedData), ::ROOT::DefineBehavior(ptr, ptr),
                  &::AnalizedData::Dictionary, isa_proxy, 4,
                  sizeof(::AnalizedData) );
      instance.SetNew(&new_AnalizedData);
      instance.SetNewArray(&newArray_AnalizedData);
      instance.SetDelete(&delete_AnalizedData);
      instance.SetDeleteArray(&deleteArray_AnalizedData);
      instance.SetDestructor(&destruct_AnalizedData);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AnalizedData*)
   {
      return GenerateInitInstanceLocal((::AnalizedData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AnalizedData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void C4Number_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_C4Number(void *p = 0);
   static void *newArray_C4Number(Long_t size, void *p);
   static void delete_C4Number(void *p);
   static void deleteArray_C4Number(void *p);
   static void destruct_C4Number(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::C4Number*)
   {
      ::C4Number *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::C4Number >(0);
      static ::ROOT::TGenericClassInfo 
         instance("C4Number", ::C4Number::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/C4Number.hh", 7,
                  typeid(::C4Number), ::ROOT::DefineBehavior(ptr, ptr),
                  &::C4Number::Dictionary, isa_proxy, 4,
                  sizeof(::C4Number) );
      instance.SetNew(&new_C4Number);
      instance.SetNewArray(&newArray_C4Number);
      instance.SetDelete(&delete_C4Number);
      instance.SetDeleteArray(&deleteArray_C4Number);
      instance.SetDestructor(&destruct_C4Number);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::C4Number*)
   {
      return GenerateInitInstanceLocal((::C4Number*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::C4Number*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void CSearch_range_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CSearch_range(void *p = 0);
   static void *newArray_CSearch_range(Long_t size, void *p);
   static void delete_CSearch_range(void *p);
   static void deleteArray_CSearch_range(void *p);
   static void destruct_CSearch_range(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::CSearch_range*)
   {
      ::CSearch_range *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CSearch_range >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CSearch_range", ::CSearch_range::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/CSearch_range.hh", 12,
                  typeid(::CSearch_range), ::ROOT::DefineBehavior(ptr, ptr),
                  &::CSearch_range::Dictionary, isa_proxy, 4,
                  sizeof(::CSearch_range) );
      instance.SetNew(&new_CSearch_range);
      instance.SetNewArray(&newArray_CSearch_range);
      instance.SetDelete(&delete_CSearch_range);
      instance.SetDeleteArray(&deleteArray_CSearch_range);
      instance.SetDestructor(&destruct_CSearch_range);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::CSearch_range*)
   {
      return GenerateInitInstanceLocal((::CSearch_range*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CSearch_range*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void FileList_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FileList(void *p = 0);
   static void *newArray_FileList(Long_t size, void *p);
   static void delete_FileList(void *p);
   static void deleteArray_FileList(void *p);
   static void destruct_FileList(void *p);
   static Long64_t merge_FileList(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::FileList*)
   {
      ::FileList *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FileList >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FileList", ::FileList::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/FileList.hh", 12,
                  typeid(::FileList), ::ROOT::DefineBehavior(ptr, ptr),
                  &::FileList::Dictionary, isa_proxy, 4,
                  sizeof(::FileList) );
      instance.SetNew(&new_FileList);
      instance.SetNewArray(&newArray_FileList);
      instance.SetDelete(&delete_FileList);
      instance.SetDeleteArray(&deleteArray_FileList);
      instance.SetDestructor(&destruct_FileList);
      instance.SetMerge(&merge_FileList);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::FileList*)
   {
      return GenerateInitInstanceLocal((::FileList*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FileList*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void efficiency_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_efficiency(void *p = 0);
   static void *newArray_efficiency(Long_t size, void *p);
   static void delete_efficiency(void *p);
   static void deleteArray_efficiency(void *p);
   static void destruct_efficiency(void *p);
   static void directoryAutoAdd_efficiency(void *obj, TDirectory *dir);
   static Long64_t merge_efficiency(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::efficiency*)
   {
      ::efficiency *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::efficiency >(0);
      static ::ROOT::TGenericClassInfo 
         instance("efficiency", ::efficiency::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/efficiency.hh", 9,
                  typeid(::efficiency), ::ROOT::DefineBehavior(ptr, ptr),
                  &::efficiency::Dictionary, isa_proxy, 4,
                  sizeof(::efficiency) );
      instance.SetNew(&new_efficiency);
      instance.SetNewArray(&newArray_efficiency);
      instance.SetDelete(&delete_efficiency);
      instance.SetDeleteArray(&deleteArray_efficiency);
      instance.SetDestructor(&destruct_efficiency);
      instance.SetDirectoryAutoAdd(&directoryAutoAdd_efficiency);
      instance.SetMerge(&merge_efficiency);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::efficiency*)
   {
      return GenerateInitInstanceLocal((::efficiency*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::efficiency*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TH1DByTree_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TH1DByTree(void *p = 0);
   static void *newArray_TH1DByTree(Long_t size, void *p);
   static void delete_TH1DByTree(void *p);
   static void deleteArray_TH1DByTree(void *p);
   static void destruct_TH1DByTree(void *p);
   static void directoryAutoAdd_TH1DByTree(void *obj, TDirectory *dir);
   static Long64_t merge_TH1DByTree(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TH1DByTree*)
   {
      ::TH1DByTree *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TH1DByTree >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TH1DByTree", ::TH1DByTree::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/HistByTree.hh", 12,
                  typeid(::TH1DByTree), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TH1DByTree::Dictionary, isa_proxy, 4,
                  sizeof(::TH1DByTree) );
      instance.SetNew(&new_TH1DByTree);
      instance.SetNewArray(&newArray_TH1DByTree);
      instance.SetDelete(&delete_TH1DByTree);
      instance.SetDeleteArray(&deleteArray_TH1DByTree);
      instance.SetDestructor(&destruct_TH1DByTree);
      instance.SetDirectoryAutoAdd(&directoryAutoAdd_TH1DByTree);
      instance.SetMerge(&merge_TH1DByTree);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TH1DByTree*)
   {
      return GenerateInitInstanceLocal((::TH1DByTree*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TH1DByTree*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HistError_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HistError(void *p = 0);
   static void *newArray_HistError(Long_t size, void *p);
   static void delete_HistError(void *p);
   static void deleteArray_HistError(void *p);
   static void destruct_HistError(void *p);
   static void directoryAutoAdd_HistError(void *obj, TDirectory *dir);
   static Long64_t merge_HistError(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HistError*)
   {
      ::HistError *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HistError >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HistError", ::HistError::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/HistError.hh", 10,
                  typeid(::HistError), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HistError::Dictionary, isa_proxy, 4,
                  sizeof(::HistError) );
      instance.SetNew(&new_HistError);
      instance.SetNewArray(&newArray_HistError);
      instance.SetDelete(&delete_HistError);
      instance.SetDeleteArray(&deleteArray_HistError);
      instance.SetDestructor(&destruct_HistError);
      instance.SetDirectoryAutoAdd(&directoryAutoAdd_HistError);
      instance.SetMerge(&merge_HistError);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HistError*)
   {
      return GenerateInitInstanceLocal((::HistError*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HistError*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HistBias_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HistBias(void *p = 0);
   static void *newArray_HistBias(Long_t size, void *p);
   static void delete_HistBias(void *p);
   static void deleteArray_HistBias(void *p);
   static void destruct_HistBias(void *p);
   static void directoryAutoAdd_HistBias(void *obj, TDirectory *dir);
   static Long64_t merge_HistBias(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HistBias*)
   {
      ::HistBias *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HistBias >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HistBias", ::HistBias::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/HistBias.hh", 10,
                  typeid(::HistBias), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HistBias::Dictionary, isa_proxy, 4,
                  sizeof(::HistBias) );
      instance.SetNew(&new_HistBias);
      instance.SetNewArray(&newArray_HistBias);
      instance.SetDelete(&delete_HistBias);
      instance.SetDeleteArray(&deleteArray_HistBias);
      instance.SetDestructor(&destruct_HistBias);
      instance.SetDirectoryAutoAdd(&directoryAutoAdd_HistBias);
      instance.SetMerge(&merge_HistBias);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HistBias*)
   {
      return GenerateInitInstanceLocal((::HistBias*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HistBias*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void AngleRange_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AngleRange(void *p = 0);
   static void *newArray_AngleRange(Long_t size, void *p);
   static void delete_AngleRange(void *p);
   static void deleteArray_AngleRange(void *p);
   static void destruct_AngleRange(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AngleRange*)
   {
      ::AngleRange *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AngleRange >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AngleRange", ::AngleRange::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/AngleRange.hh", 8,
                  typeid(::AngleRange), ::ROOT::DefineBehavior(ptr, ptr),
                  &::AngleRange::Dictionary, isa_proxy, 4,
                  sizeof(::AngleRange) );
      instance.SetNew(&new_AngleRange);
      instance.SetNewArray(&newArray_AngleRange);
      instance.SetDelete(&delete_AngleRange);
      instance.SetDeleteArray(&deleteArray_AngleRange);
      instance.SetDestructor(&destruct_AngleRange);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AngleRange*)
   {
      return GenerateInitInstanceLocal((::AngleRange*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AngleRange*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TReconstructhit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TReconstructhit(void *p = 0);
   static void *newArray_TReconstructhit(Long_t size, void *p);
   static void delete_TReconstructhit(void *p);
   static void deleteArray_TReconstructhit(void *p);
   static void destruct_TReconstructhit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TReconstructhit*)
   {
      ::TReconstructhit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TReconstructhit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TReconstructhit", ::TReconstructhit::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/TReconstructdata.hh", 143,
                  typeid(::TReconstructhit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TReconstructhit::Dictionary, isa_proxy, 4,
                  sizeof(::TReconstructhit) );
      instance.SetNew(&new_TReconstructhit);
      instance.SetNewArray(&newArray_TReconstructhit);
      instance.SetDelete(&delete_TReconstructhit);
      instance.SetDeleteArray(&deleteArray_TReconstructhit);
      instance.SetDestructor(&destruct_TReconstructhit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TReconstructhit*)
   {
      return GenerateInitInstanceLocal((::TReconstructhit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TReconstructhit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TReconstructdata_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TReconstructdata(void *p = 0);
   static void *newArray_TReconstructdata(Long_t size, void *p);
   static void delete_TReconstructdata(void *p);
   static void deleteArray_TReconstructdata(void *p);
   static void destruct_TReconstructdata(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TReconstructdata*)
   {
      ::TReconstructdata *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TReconstructdata >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TReconstructdata", ::TReconstructdata::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/TReconstructdata.hh", 14,
                  typeid(::TReconstructdata), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TReconstructdata::Dictionary, isa_proxy, 4,
                  sizeof(::TReconstructdata) );
      instance.SetNew(&new_TReconstructdata);
      instance.SetNewArray(&newArray_TReconstructdata);
      instance.SetDelete(&delete_TReconstructdata);
      instance.SetDeleteArray(&deleteArray_TReconstructdata);
      instance.SetDestructor(&destruct_TReconstructdata);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TReconstructdata*)
   {
      return GenerateInitInstanceLocal((::TReconstructdata*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TReconstructdata*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TReconstructdata_minimize_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TReconstructdata_minimize(void *p = 0);
   static void *newArray_TReconstructdata_minimize(Long_t size, void *p);
   static void delete_TReconstructdata_minimize(void *p);
   static void deleteArray_TReconstructdata_minimize(void *p);
   static void destruct_TReconstructdata_minimize(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TReconstructdata_minimize*)
   {
      ::TReconstructdata_minimize *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TReconstructdata_minimize >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TReconstructdata_minimize", ::TReconstructdata_minimize::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/TReconstructdata.hh", 99,
                  typeid(::TReconstructdata_minimize), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TReconstructdata_minimize::Dictionary, isa_proxy, 4,
                  sizeof(::TReconstructdata_minimize) );
      instance.SetNew(&new_TReconstructdata_minimize);
      instance.SetNewArray(&newArray_TReconstructdata_minimize);
      instance.SetDelete(&delete_TReconstructdata_minimize);
      instance.SetDeleteArray(&deleteArray_TReconstructdata_minimize);
      instance.SetDestructor(&destruct_TReconstructdata_minimize);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TReconstructdata_minimize*)
   {
      return GenerateInitInstanceLocal((::TReconstructdata_minimize*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TReconstructdata_minimize*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Thitinfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Thitinfo(void *p = 0);
   static void *newArray_Thitinfo(Long_t size, void *p);
   static void delete_Thitinfo(void *p);
   static void deleteArray_Thitinfo(void *p);
   static void destruct_Thitinfo(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Thitinfo*)
   {
      ::Thitinfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Thitinfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Thitinfo", ::Thitinfo::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/Thitinfo.hh", 11,
                  typeid(::Thitinfo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Thitinfo::Dictionary, isa_proxy, 4,
                  sizeof(::Thitinfo) );
      instance.SetNew(&new_Thitinfo);
      instance.SetNewArray(&newArray_Thitinfo);
      instance.SetDelete(&delete_Thitinfo);
      instance.SetDeleteArray(&deleteArray_Thitinfo);
      instance.SetDestructor(&destruct_Thitinfo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Thitinfo*)
   {
      return GenerateInitInstanceLocal((::Thitinfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Thitinfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void OneDataParameters_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_OneDataParameters(void *p = 0);
   static void *newArray_OneDataParameters(Long_t size, void *p);
   static void delete_OneDataParameters(void *p);
   static void deleteArray_OneDataParameters(void *p);
   static void destruct_OneDataParameters(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::OneDataParameters*)
   {
      ::OneDataParameters *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::OneDataParameters >(0);
      static ::ROOT::TGenericClassInfo 
         instance("OneDataParameters", ::OneDataParameters::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/OneDataParameters.hh", 12,
                  typeid(::OneDataParameters), ::ROOT::DefineBehavior(ptr, ptr),
                  &::OneDataParameters::Dictionary, isa_proxy, 4,
                  sizeof(::OneDataParameters) );
      instance.SetNew(&new_OneDataParameters);
      instance.SetNewArray(&newArray_OneDataParameters);
      instance.SetDelete(&delete_OneDataParameters);
      instance.SetDeleteArray(&deleteArray_OneDataParameters);
      instance.SetDestructor(&destruct_OneDataParameters);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::OneDataParameters*)
   {
      return GenerateInitInstanceLocal((::OneDataParameters*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::OneDataParameters*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void OneRunDataAnalizeManager_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_OneRunDataAnalizeManager(void *p = 0);
   static void *newArray_OneRunDataAnalizeManager(Long_t size, void *p);
   static void delete_OneRunDataAnalizeManager(void *p);
   static void deleteArray_OneRunDataAnalizeManager(void *p);
   static void destruct_OneRunDataAnalizeManager(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::OneRunDataAnalizeManager*)
   {
      ::OneRunDataAnalizeManager *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::OneRunDataAnalizeManager >(0);
      static ::ROOT::TGenericClassInfo 
         instance("OneRunDataAnalizeManager", ::OneRunDataAnalizeManager::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/OneRunDataAnalizeManager.hh", 20,
                  typeid(::OneRunDataAnalizeManager), ::ROOT::DefineBehavior(ptr, ptr),
                  &::OneRunDataAnalizeManager::Dictionary, isa_proxy, 4,
                  sizeof(::OneRunDataAnalizeManager) );
      instance.SetNew(&new_OneRunDataAnalizeManager);
      instance.SetNewArray(&newArray_OneRunDataAnalizeManager);
      instance.SetDelete(&delete_OneRunDataAnalizeManager);
      instance.SetDeleteArray(&deleteArray_OneRunDataAnalizeManager);
      instance.SetDestructor(&destruct_OneRunDataAnalizeManager);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::OneRunDataAnalizeManager*)
   {
      return GenerateInitInstanceLocal((::OneRunDataAnalizeManager*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::OneRunDataAnalizeManager*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void OneGoodnessParameters_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_OneGoodnessParameters(void *p = 0);
   static void *newArray_OneGoodnessParameters(Long_t size, void *p);
   static void delete_OneGoodnessParameters(void *p);
   static void deleteArray_OneGoodnessParameters(void *p);
   static void destruct_OneGoodnessParameters(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::OneGoodnessParameters*)
   {
      ::OneGoodnessParameters *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::OneGoodnessParameters >(0);
      static ::ROOT::TGenericClassInfo 
         instance("OneGoodnessParameters", ::OneGoodnessParameters::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/OneGoodnessParameters.hh", 14,
                  typeid(::OneGoodnessParameters), ::ROOT::DefineBehavior(ptr, ptr),
                  &::OneGoodnessParameters::Dictionary, isa_proxy, 4,
                  sizeof(::OneGoodnessParameters) );
      instance.SetNew(&new_OneGoodnessParameters);
      instance.SetNewArray(&newArray_OneGoodnessParameters);
      instance.SetDelete(&delete_OneGoodnessParameters);
      instance.SetDeleteArray(&deleteArray_OneGoodnessParameters);
      instance.SetDestructor(&destruct_OneGoodnessParameters);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::OneGoodnessParameters*)
   {
      return GenerateInitInstanceLocal((::OneGoodnessParameters*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::OneGoodnessParameters*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void OneRunGoodnessAnalizeManager_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_OneRunGoodnessAnalizeManager(void *p = 0);
   static void *newArray_OneRunGoodnessAnalizeManager(Long_t size, void *p);
   static void delete_OneRunGoodnessAnalizeManager(void *p);
   static void deleteArray_OneRunGoodnessAnalizeManager(void *p);
   static void destruct_OneRunGoodnessAnalizeManager(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::OneRunGoodnessAnalizeManager*)
   {
      ::OneRunGoodnessAnalizeManager *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::OneRunGoodnessAnalizeManager >(0);
      static ::ROOT::TGenericClassInfo 
         instance("OneRunGoodnessAnalizeManager", ::OneRunGoodnessAnalizeManager::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/OneRunGoodnessAnalizeManager.hh", 15,
                  typeid(::OneRunGoodnessAnalizeManager), ::ROOT::DefineBehavior(ptr, ptr),
                  &::OneRunGoodnessAnalizeManager::Dictionary, isa_proxy, 4,
                  sizeof(::OneRunGoodnessAnalizeManager) );
      instance.SetNew(&new_OneRunGoodnessAnalizeManager);
      instance.SetNewArray(&newArray_OneRunGoodnessAnalizeManager);
      instance.SetDelete(&delete_OneRunGoodnessAnalizeManager);
      instance.SetDeleteArray(&deleteArray_OneRunGoodnessAnalizeManager);
      instance.SetDestructor(&destruct_OneRunGoodnessAnalizeManager);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::OneRunGoodnessAnalizeManager*)
   {
      return GenerateInitInstanceLocal((::OneRunGoodnessAnalizeManager*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::OneRunGoodnessAnalizeManager*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void OneLikelihoodParameters_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_OneLikelihoodParameters(void *p = 0);
   static void *newArray_OneLikelihoodParameters(Long_t size, void *p);
   static void delete_OneLikelihoodParameters(void *p);
   static void deleteArray_OneLikelihoodParameters(void *p);
   static void destruct_OneLikelihoodParameters(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::OneLikelihoodParameters*)
   {
      ::OneLikelihoodParameters *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::OneLikelihoodParameters >(0);
      static ::ROOT::TGenericClassInfo 
         instance("OneLikelihoodParameters", ::OneLikelihoodParameters::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/OneLikelihoodParameters.hh", 12,
                  typeid(::OneLikelihoodParameters), ::ROOT::DefineBehavior(ptr, ptr),
                  &::OneLikelihoodParameters::Dictionary, isa_proxy, 4,
                  sizeof(::OneLikelihoodParameters) );
      instance.SetNew(&new_OneLikelihoodParameters);
      instance.SetNewArray(&newArray_OneLikelihoodParameters);
      instance.SetDelete(&delete_OneLikelihoodParameters);
      instance.SetDeleteArray(&deleteArray_OneLikelihoodParameters);
      instance.SetDestructor(&destruct_OneLikelihoodParameters);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::OneLikelihoodParameters*)
   {
      return GenerateInitInstanceLocal((::OneLikelihoodParameters*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::OneLikelihoodParameters*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void OneRunLikelihoodAnalizeManager_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_OneRunLikelihoodAnalizeManager(void *p = 0);
   static void *newArray_OneRunLikelihoodAnalizeManager(Long_t size, void *p);
   static void delete_OneRunLikelihoodAnalizeManager(void *p);
   static void deleteArray_OneRunLikelihoodAnalizeManager(void *p);
   static void destruct_OneRunLikelihoodAnalizeManager(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::OneRunLikelihoodAnalizeManager*)
   {
      ::OneRunLikelihoodAnalizeManager *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::OneRunLikelihoodAnalizeManager >(0);
      static ::ROOT::TGenericClassInfo 
         instance("OneRunLikelihoodAnalizeManager", ::OneRunLikelihoodAnalizeManager::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/OneRunLikelihoodAnalizeManager.hh", 16,
                  typeid(::OneRunLikelihoodAnalizeManager), ::ROOT::DefineBehavior(ptr, ptr),
                  &::OneRunLikelihoodAnalizeManager::Dictionary, isa_proxy, 4,
                  sizeof(::OneRunLikelihoodAnalizeManager) );
      instance.SetNew(&new_OneRunLikelihoodAnalizeManager);
      instance.SetNewArray(&newArray_OneRunLikelihoodAnalizeManager);
      instance.SetDelete(&delete_OneRunLikelihoodAnalizeManager);
      instance.SetDeleteArray(&deleteArray_OneRunLikelihoodAnalizeManager);
      instance.SetDestructor(&destruct_OneRunLikelihoodAnalizeManager);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::OneRunLikelihoodAnalizeManager*)
   {
      return GenerateInitInstanceLocal((::OneRunLikelihoodAnalizeManager*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::OneRunLikelihoodAnalizeManager*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TOption_minimize_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TOption_minimize(void *p = 0);
   static void *newArray_TOption_minimize(Long_t size, void *p);
   static void delete_TOption_minimize(void *p);
   static void deleteArray_TOption_minimize(void *p);
   static void destruct_TOption_minimize(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TOption_minimize*)
   {
      ::TOption_minimize *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TOption_minimize >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TOption_minimize", ::TOption_minimize::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/TOption_minimize.hh", 8,
                  typeid(::TOption_minimize), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TOption_minimize::Dictionary, isa_proxy, 4,
                  sizeof(::TOption_minimize) );
      instance.SetNew(&new_TOption_minimize);
      instance.SetNewArray(&newArray_TOption_minimize);
      instance.SetDelete(&delete_TOption_minimize);
      instance.SetDeleteArray(&deleteArray_TOption_minimize);
      instance.SetDestructor(&destruct_TOption_minimize);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TOption_minimize*)
   {
      return GenerateInitInstanceLocal((::TOption_minimize*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TOption_minimize*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void OneGoodnessMinimizeParameters_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_OneGoodnessMinimizeParameters(void *p = 0);
   static void *newArray_OneGoodnessMinimizeParameters(Long_t size, void *p);
   static void delete_OneGoodnessMinimizeParameters(void *p);
   static void deleteArray_OneGoodnessMinimizeParameters(void *p);
   static void destruct_OneGoodnessMinimizeParameters(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::OneGoodnessMinimizeParameters*)
   {
      ::OneGoodnessMinimizeParameters *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::OneGoodnessMinimizeParameters >(0);
      static ::ROOT::TGenericClassInfo 
         instance("OneGoodnessMinimizeParameters", ::OneGoodnessMinimizeParameters::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/OneGoodnessMinimizeParameters.hh", 12,
                  typeid(::OneGoodnessMinimizeParameters), ::ROOT::DefineBehavior(ptr, ptr),
                  &::OneGoodnessMinimizeParameters::Dictionary, isa_proxy, 4,
                  sizeof(::OneGoodnessMinimizeParameters) );
      instance.SetNew(&new_OneGoodnessMinimizeParameters);
      instance.SetNewArray(&newArray_OneGoodnessMinimizeParameters);
      instance.SetDelete(&delete_OneGoodnessMinimizeParameters);
      instance.SetDeleteArray(&deleteArray_OneGoodnessMinimizeParameters);
      instance.SetDestructor(&destruct_OneGoodnessMinimizeParameters);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::OneGoodnessMinimizeParameters*)
   {
      return GenerateInitInstanceLocal((::OneGoodnessMinimizeParameters*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::OneGoodnessMinimizeParameters*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void OneRunGoodnessMinimizeAnalizeManager_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_OneRunGoodnessMinimizeAnalizeManager(void *p = 0);
   static void *newArray_OneRunGoodnessMinimizeAnalizeManager(Long_t size, void *p);
   static void delete_OneRunGoodnessMinimizeAnalizeManager(void *p);
   static void deleteArray_OneRunGoodnessMinimizeAnalizeManager(void *p);
   static void destruct_OneRunGoodnessMinimizeAnalizeManager(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::OneRunGoodnessMinimizeAnalizeManager*)
   {
      ::OneRunGoodnessMinimizeAnalizeManager *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::OneRunGoodnessMinimizeAnalizeManager >(0);
      static ::ROOT::TGenericClassInfo 
         instance("OneRunGoodnessMinimizeAnalizeManager", ::OneRunGoodnessMinimizeAnalizeManager::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/OneRunGoodnessMinimizeAnalizeManager.hh", 16,
                  typeid(::OneRunGoodnessMinimizeAnalizeManager), ::ROOT::DefineBehavior(ptr, ptr),
                  &::OneRunGoodnessMinimizeAnalizeManager::Dictionary, isa_proxy, 4,
                  sizeof(::OneRunGoodnessMinimizeAnalizeManager) );
      instance.SetNew(&new_OneRunGoodnessMinimizeAnalizeManager);
      instance.SetNewArray(&newArray_OneRunGoodnessMinimizeAnalizeManager);
      instance.SetDelete(&delete_OneRunGoodnessMinimizeAnalizeManager);
      instance.SetDeleteArray(&deleteArray_OneRunGoodnessMinimizeAnalizeManager);
      instance.SetDestructor(&destruct_OneRunGoodnessMinimizeAnalizeManager);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::OneRunGoodnessMinimizeAnalizeManager*)
   {
      return GenerateInitInstanceLocal((::OneRunGoodnessMinimizeAnalizeManager*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::OneRunGoodnessMinimizeAnalizeManager*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void BiasError_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_BiasError(void *p = 0);
   static void *newArray_BiasError(Long_t size, void *p);
   static void delete_BiasError(void *p);
   static void deleteArray_BiasError(void *p);
   static void destruct_BiasError(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::BiasError*)
   {
      ::BiasError *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BiasError >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BiasError", ::BiasError::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/BiasError.hh", 7,
                  typeid(::BiasError), ::ROOT::DefineBehavior(ptr, ptr),
                  &::BiasError::Dictionary, isa_proxy, 4,
                  sizeof(::BiasError) );
      instance.SetNew(&new_BiasError);
      instance.SetNewArray(&newArray_BiasError);
      instance.SetDelete(&delete_BiasError);
      instance.SetDeleteArray(&deleteArray_BiasError);
      instance.SetDestructor(&destruct_BiasError);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::BiasError*)
   {
      return GenerateInitInstanceLocal((::BiasError*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BiasError*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void OneRunAnalizeManager_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_OneRunAnalizeManager(void *p = 0);
   static void *newArray_OneRunAnalizeManager(Long_t size, void *p);
   static void delete_OneRunAnalizeManager(void *p);
   static void deleteArray_OneRunAnalizeManager(void *p);
   static void destruct_OneRunAnalizeManager(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::OneRunAnalizeManager*)
   {
      ::OneRunAnalizeManager *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::OneRunAnalizeManager >(0);
      static ::ROOT::TGenericClassInfo 
         instance("OneRunAnalizeManager", ::OneRunAnalizeManager::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/OneRunAnalizeManager.hh", 28,
                  typeid(::OneRunAnalizeManager), ::ROOT::DefineBehavior(ptr, ptr),
                  &::OneRunAnalizeManager::Dictionary, isa_proxy, 4,
                  sizeof(::OneRunAnalizeManager) );
      instance.SetNew(&new_OneRunAnalizeManager);
      instance.SetNewArray(&newArray_OneRunAnalizeManager);
      instance.SetDelete(&delete_OneRunAnalizeManager);
      instance.SetDeleteArray(&deleteArray_OneRunAnalizeManager);
      instance.SetDestructor(&destruct_OneRunAnalizeManager);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::OneRunAnalizeManager*)
   {
      return GenerateInitInstanceLocal((::OneRunAnalizeManager*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::OneRunAnalizeManager*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Tfunction_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_Tfunction(void *p);
   static void deleteArray_Tfunction(void *p);
   static void destruct_Tfunction(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Tfunction*)
   {
      ::Tfunction *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Tfunction >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Tfunction", ::Tfunction::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/Tfunction.hh", 7,
                  typeid(::Tfunction), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Tfunction::Dictionary, isa_proxy, 4,
                  sizeof(::Tfunction) );
      instance.SetDelete(&delete_Tfunction);
      instance.SetDeleteArray(&deleteArray_Tfunction);
      instance.SetDestructor(&destruct_Tfunction);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Tfunction*)
   {
      return GenerateInitInstanceLocal((::Tfunction*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Tfunction*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Tafunction_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_Tafunction(void *p);
   static void deleteArray_Tafunction(void *p);
   static void destruct_Tafunction(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Tafunction*)
   {
      ::Tafunction *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Tafunction >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Tafunction", ::Tafunction::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/Tafunction.hh", 9,
                  typeid(::Tafunction), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Tafunction::Dictionary, isa_proxy, 4,
                  sizeof(::Tafunction) );
      instance.SetDelete(&delete_Tafunction);
      instance.SetDeleteArray(&deleteArray_Tafunction);
      instance.SetDestructor(&destruct_Tafunction);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Tafunction*)
   {
      return GenerateInitInstanceLocal((::Tafunction*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Tafunction*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Tafuncprototype_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Tafuncprototype(void *p = 0);
   static void *newArray_Tafuncprototype(Long_t size, void *p);
   static void delete_Tafuncprototype(void *p);
   static void deleteArray_Tafuncprototype(void *p);
   static void destruct_Tafuncprototype(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Tafuncprototype*)
   {
      ::Tafuncprototype *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Tafuncprototype >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Tafuncprototype", ::Tafuncprototype::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/Tafunction.hh", 35,
                  typeid(::Tafuncprototype), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Tafuncprototype::Dictionary, isa_proxy, 4,
                  sizeof(::Tafuncprototype) );
      instance.SetNew(&new_Tafuncprototype);
      instance.SetNewArray(&newArray_Tafuncprototype);
      instance.SetDelete(&delete_Tafuncprototype);
      instance.SetDeleteArray(&deleteArray_Tafuncprototype);
      instance.SetDestructor(&destruct_Tafuncprototype);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Tafuncprototype*)
   {
      return GenerateInitInstanceLocal((::Tafuncprototype*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Tafuncprototype*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Tdistance_function_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_Tdistance_function(void *p);
   static void deleteArray_Tdistance_function(void *p);
   static void destruct_Tdistance_function(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Tdistance_function*)
   {
      ::Tdistance_function *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Tdistance_function >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Tdistance_function", ::Tdistance_function::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/Tdistance_function.hh", 10,
                  typeid(::Tdistance_function), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Tdistance_function::Dictionary, isa_proxy, 4,
                  sizeof(::Tdistance_function) );
      instance.SetDelete(&delete_Tdistance_function);
      instance.SetDeleteArray(&deleteArray_Tdistance_function);
      instance.SetDestructor(&destruct_Tdistance_function);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Tdistance_function*)
   {
      return GenerateInitInstanceLocal((::Tdistance_function*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Tdistance_function*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Tdistance_position_pmt_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Tdistance_position_pmt(void *p = 0);
   static void *newArray_Tdistance_position_pmt(Long_t size, void *p);
   static void delete_Tdistance_position_pmt(void *p);
   static void deleteArray_Tdistance_position_pmt(void *p);
   static void destruct_Tdistance_position_pmt(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Tdistance_position_pmt*)
   {
      ::Tdistance_position_pmt *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Tdistance_position_pmt >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Tdistance_position_pmt", ::Tdistance_position_pmt::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/Tdistance_function.hh", 35,
                  typeid(::Tdistance_position_pmt), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Tdistance_position_pmt::Dictionary, isa_proxy, 4,
                  sizeof(::Tdistance_position_pmt) );
      instance.SetNew(&new_Tdistance_position_pmt);
      instance.SetNewArray(&newArray_Tdistance_position_pmt);
      instance.SetDelete(&delete_Tdistance_position_pmt);
      instance.SetDeleteArray(&deleteArray_Tdistance_position_pmt);
      instance.SetDestructor(&destruct_Tdistance_position_pmt);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Tdistance_position_pmt*)
   {
      return GenerateInitInstanceLocal((::Tdistance_position_pmt*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Tdistance_position_pmt*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Tdistance_position_retro_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Tdistance_position_retro(void *p = 0);
   static void *newArray_Tdistance_position_retro(Long_t size, void *p);
   static void delete_Tdistance_position_retro(void *p);
   static void deleteArray_Tdistance_position_retro(void *p);
   static void destruct_Tdistance_position_retro(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Tdistance_position_retro*)
   {
      ::Tdistance_position_retro *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Tdistance_position_retro >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Tdistance_position_retro", ::Tdistance_position_retro::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/Tdistance_function.hh", 47,
                  typeid(::Tdistance_position_retro), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Tdistance_position_retro::Dictionary, isa_proxy, 4,
                  sizeof(::Tdistance_position_retro) );
      instance.SetNew(&new_Tdistance_position_retro);
      instance.SetNewArray(&newArray_Tdistance_position_retro);
      instance.SetDelete(&delete_Tdistance_position_retro);
      instance.SetDeleteArray(&deleteArray_Tdistance_position_retro);
      instance.SetDestructor(&destruct_Tdistance_position_retro);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Tdistance_position_retro*)
   {
      return GenerateInitInstanceLocal((::Tdistance_position_retro*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Tdistance_position_retro*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Tdistance_fly_retro_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Tdistance_fly_retro(void *p = 0);
   static void *newArray_Tdistance_fly_retro(Long_t size, void *p);
   static void delete_Tdistance_fly_retro(void *p);
   static void deleteArray_Tdistance_fly_retro(void *p);
   static void destruct_Tdistance_fly_retro(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Tdistance_fly_retro*)
   {
      ::Tdistance_fly_retro *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Tdistance_fly_retro >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Tdistance_fly_retro", ::Tdistance_fly_retro::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/Tdistance_function.hh", 63,
                  typeid(::Tdistance_fly_retro), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Tdistance_fly_retro::Dictionary, isa_proxy, 4,
                  sizeof(::Tdistance_fly_retro) );
      instance.SetNew(&new_Tdistance_fly_retro);
      instance.SetNewArray(&newArray_Tdistance_fly_retro);
      instance.SetDelete(&delete_Tdistance_fly_retro);
      instance.SetDeleteArray(&deleteArray_Tdistance_fly_retro);
      instance.SetDestructor(&destruct_Tdistance_fly_retro);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Tdistance_fly_retro*)
   {
      return GenerateInitInstanceLocal((::Tdistance_fly_retro*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Tdistance_fly_retro*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Tfdirection_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_Tfdirection(void *p);
   static void deleteArray_Tfdirection(void *p);
   static void destruct_Tfdirection(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Tfdirection*)
   {
      ::Tfdirection *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Tfdirection >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Tfdirection", ::Tfdirection::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/Tfdirection.hh", 9,
                  typeid(::Tfdirection), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Tfdirection::Dictionary, isa_proxy, 4,
                  sizeof(::Tfdirection) );
      instance.SetDelete(&delete_Tfdirection);
      instance.SetDeleteArray(&deleteArray_Tfdirection);
      instance.SetDestructor(&destruct_Tfdirection);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Tfdirection*)
   {
      return GenerateInitInstanceLocal((::Tfdirection*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Tfdirection*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Tfdirprototypenoretro_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Tfdirprototypenoretro(void *p = 0);
   static void *newArray_Tfdirprototypenoretro(Long_t size, void *p);
   static void delete_Tfdirprototypenoretro(void *p);
   static void deleteArray_Tfdirprototypenoretro(void *p);
   static void destruct_Tfdirprototypenoretro(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Tfdirprototypenoretro*)
   {
      ::Tfdirprototypenoretro *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Tfdirprototypenoretro >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Tfdirprototypenoretro", ::Tfdirprototypenoretro::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/Tfdirection.hh", 36,
                  typeid(::Tfdirprototypenoretro), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Tfdirprototypenoretro::Dictionary, isa_proxy, 4,
                  sizeof(::Tfdirprototypenoretro) );
      instance.SetNew(&new_Tfdirprototypenoretro);
      instance.SetNewArray(&newArray_Tfdirprototypenoretro);
      instance.SetDelete(&delete_Tfdirprototypenoretro);
      instance.SetDeleteArray(&deleteArray_Tfdirprototypenoretro);
      instance.SetDestructor(&destruct_Tfdirprototypenoretro);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Tfdirprototypenoretro*)
   {
      return GenerateInitInstanceLocal((::Tfdirprototypenoretro*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Tfdirprototypenoretro*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Tfdirprototypeonretro_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Tfdirprototypeonretro(void *p = 0);
   static void *newArray_Tfdirprototypeonretro(Long_t size, void *p);
   static void delete_Tfdirprototypeonretro(void *p);
   static void deleteArray_Tfdirprototypeonretro(void *p);
   static void destruct_Tfdirprototypeonretro(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Tfdirprototypeonretro*)
   {
      ::Tfdirprototypeonretro *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Tfdirprototypeonretro >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Tfdirprototypeonretro", ::Tfdirprototypeonretro::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/Tfdirection.hh", 45,
                  typeid(::Tfdirprototypeonretro), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Tfdirprototypeonretro::Dictionary, isa_proxy, 4,
                  sizeof(::Tfdirprototypeonretro) );
      instance.SetNew(&new_Tfdirprototypeonretro);
      instance.SetNewArray(&newArray_Tfdirprototypeonretro);
      instance.SetDelete(&delete_Tfdirprototypeonretro);
      instance.SetDeleteArray(&deleteArray_Tfdirprototypeonretro);
      instance.SetDestructor(&destruct_Tfdirprototypeonretro);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Tfdirprototypeonretro*)
   {
      return GenerateInitInstanceLocal((::Tfdirprototypeonretro*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Tfdirprototypeonretro*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Tfdirbydatanoretro_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Tfdirbydatanoretro(void *p = 0);
   static void *newArray_Tfdirbydatanoretro(Long_t size, void *p);
   static void delete_Tfdirbydatanoretro(void *p);
   static void deleteArray_Tfdirbydatanoretro(void *p);
   static void destruct_Tfdirbydatanoretro(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Tfdirbydatanoretro*)
   {
      ::Tfdirbydatanoretro *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Tfdirbydatanoretro >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Tfdirbydatanoretro", ::Tfdirbydatanoretro::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/Tfdirection.hh", 54,
                  typeid(::Tfdirbydatanoretro), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Tfdirbydatanoretro::Dictionary, isa_proxy, 4,
                  sizeof(::Tfdirbydatanoretro) );
      instance.SetNew(&new_Tfdirbydatanoretro);
      instance.SetNewArray(&newArray_Tfdirbydatanoretro);
      instance.SetDelete(&delete_Tfdirbydatanoretro);
      instance.SetDeleteArray(&deleteArray_Tfdirbydatanoretro);
      instance.SetDestructor(&destruct_Tfdirbydatanoretro);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Tfdirbydatanoretro*)
   {
      return GenerateInitInstanceLocal((::Tfdirbydatanoretro*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Tfdirbydatanoretro*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Tfdirbydataonretro_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Tfdirbydataonretro(void *p = 0);
   static void *newArray_Tfdirbydataonretro(Long_t size, void *p);
   static void delete_Tfdirbydataonretro(void *p);
   static void deleteArray_Tfdirbydataonretro(void *p);
   static void destruct_Tfdirbydataonretro(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Tfdirbydataonretro*)
   {
      ::Tfdirbydataonretro *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Tfdirbydataonretro >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Tfdirbydataonretro", ::Tfdirbydataonretro::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/Tfdirection.hh", 64,
                  typeid(::Tfdirbydataonretro), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Tfdirbydataonretro::Dictionary, isa_proxy, 4,
                  sizeof(::Tfdirbydataonretro) );
      instance.SetNew(&new_Tfdirbydataonretro);
      instance.SetNewArray(&newArray_Tfdirbydataonretro);
      instance.SetDelete(&delete_Tfdirbydataonretro);
      instance.SetDeleteArray(&deleteArray_Tfdirbydataonretro);
      instance.SetDestructor(&destruct_Tfdirbydataonretro);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Tfdirbydataonretro*)
   {
      return GenerateInitInstanceLocal((::Tfdirbydataonretro*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Tfdirbydataonretro*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Tlikelihood_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_Tlikelihood(void *p);
   static void deleteArray_Tlikelihood(void *p);
   static void destruct_Tlikelihood(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Tlikelihood*)
   {
      ::Tlikelihood *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Tlikelihood >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Tlikelihood", ::Tlikelihood::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/Tlikelihood.hh", 14,
                  typeid(::Tlikelihood), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Tlikelihood::Dictionary, isa_proxy, 4,
                  sizeof(::Tlikelihood) );
      instance.SetDelete(&delete_Tlikelihood);
      instance.SetDeleteArray(&deleteArray_Tlikelihood);
      instance.SetDestructor(&destruct_Tlikelihood);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Tlikelihood*)
   {
      return GenerateInitInstanceLocal((::Tlikelihood*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Tlikelihood*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Tlikelihoodnoretro_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Tlikelihoodnoretro(void *p = 0);
   static void *newArray_Tlikelihoodnoretro(Long_t size, void *p);
   static void delete_Tlikelihoodnoretro(void *p);
   static void deleteArray_Tlikelihoodnoretro(void *p);
   static void destruct_Tlikelihoodnoretro(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Tlikelihoodnoretro*)
   {
      ::Tlikelihoodnoretro *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Tlikelihoodnoretro >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Tlikelihoodnoretro", ::Tlikelihoodnoretro::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/Tlikelihood.hh", 61,
                  typeid(::Tlikelihoodnoretro), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Tlikelihoodnoretro::Dictionary, isa_proxy, 4,
                  sizeof(::Tlikelihoodnoretro) );
      instance.SetNew(&new_Tlikelihoodnoretro);
      instance.SetNewArray(&newArray_Tlikelihoodnoretro);
      instance.SetDelete(&delete_Tlikelihoodnoretro);
      instance.SetDeleteArray(&deleteArray_Tlikelihoodnoretro);
      instance.SetDestructor(&destruct_Tlikelihoodnoretro);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Tlikelihoodnoretro*)
   {
      return GenerateInitInstanceLocal((::Tlikelihoodnoretro*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Tlikelihoodnoretro*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Tlikelihoodonretro_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Tlikelihoodonretro(void *p = 0);
   static void *newArray_Tlikelihoodonretro(Long_t size, void *p);
   static void delete_Tlikelihoodonretro(void *p);
   static void deleteArray_Tlikelihoodonretro(void *p);
   static void destruct_Tlikelihoodonretro(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Tlikelihoodonretro*)
   {
      ::Tlikelihoodonretro *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Tlikelihoodonretro >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Tlikelihoodonretro", ::Tlikelihoodonretro::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/Tlikelihood.hh", 71,
                  typeid(::Tlikelihoodonretro), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Tlikelihoodonretro::Dictionary, isa_proxy, 4,
                  sizeof(::Tlikelihoodonretro) );
      instance.SetNew(&new_Tlikelihoodonretro);
      instance.SetNewArray(&newArray_Tlikelihoodonretro);
      instance.SetDelete(&delete_Tlikelihoodonretro);
      instance.SetDeleteArray(&deleteArray_Tlikelihoodonretro);
      instance.SetDestructor(&destruct_Tlikelihoodonretro);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Tlikelihoodonretro*)
   {
      return GenerateInitInstanceLocal((::Tlikelihoodonretro*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Tlikelihoodonretro*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Tlikelihoodsum_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Tlikelihoodsum(void *p = 0);
   static void *newArray_Tlikelihoodsum(Long_t size, void *p);
   static void delete_Tlikelihoodsum(void *p);
   static void deleteArray_Tlikelihoodsum(void *p);
   static void destruct_Tlikelihoodsum(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Tlikelihoodsum*)
   {
      ::Tlikelihoodsum *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Tlikelihoodsum >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Tlikelihoodsum", ::Tlikelihoodsum::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/Tlikelihood.hh", 81,
                  typeid(::Tlikelihoodsum), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Tlikelihoodsum::Dictionary, isa_proxy, 4,
                  sizeof(::Tlikelihoodsum) );
      instance.SetNew(&new_Tlikelihoodsum);
      instance.SetNewArray(&newArray_Tlikelihoodsum);
      instance.SetDelete(&delete_Tlikelihoodsum);
      instance.SetDeleteArray(&deleteArray_Tlikelihoodsum);
      instance.SetDestructor(&destruct_Tlikelihoodsum);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Tlikelihoodsum*)
   {
      return GenerateInitInstanceLocal((::Tlikelihoodsum*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Tlikelihoodsum*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Ttheta_dir_i_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Ttheta_dir_i(void *p = 0);
   static void *newArray_Ttheta_dir_i(Long_t size, void *p);
   static void delete_Ttheta_dir_i(void *p);
   static void deleteArray_Ttheta_dir_i(void *p);
   static void destruct_Ttheta_dir_i(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Ttheta_dir_i*)
   {
      ::Ttheta_dir_i *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Ttheta_dir_i >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Ttheta_dir_i", ::Ttheta_dir_i::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/Ttheta_dir_i.hh", 10,
                  typeid(::Ttheta_dir_i), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Ttheta_dir_i::Dictionary, isa_proxy, 4,
                  sizeof(::Ttheta_dir_i) );
      instance.SetNew(&new_Ttheta_dir_i);
      instance.SetNewArray(&newArray_Ttheta_dir_i);
      instance.SetDelete(&delete_Ttheta_dir_i);
      instance.SetDeleteArray(&deleteArray_Ttheta_dir_i);
      instance.SetDestructor(&destruct_Ttheta_dir_i);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Ttheta_dir_i*)
   {
      return GenerateInitInstanceLocal((::Ttheta_dir_i*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Ttheta_dir_i*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Ttheta_i_func_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Ttheta_i_func(void *p = 0);
   static void *newArray_Ttheta_i_func(Long_t size, void *p);
   static void delete_Ttheta_i_func(void *p);
   static void deleteArray_Ttheta_i_func(void *p);
   static void destruct_Ttheta_i_func(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Ttheta_i_func*)
   {
      ::Ttheta_i_func *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Ttheta_i_func >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Ttheta_i_func", ::Ttheta_i_func::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/Ttheta_i_func.hh", 12,
                  typeid(::Ttheta_i_func), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Ttheta_i_func::Dictionary, isa_proxy, 4,
                  sizeof(::Ttheta_i_func) );
      instance.SetNew(&new_Ttheta_i_func);
      instance.SetNewArray(&newArray_Ttheta_i_func);
      instance.SetDelete(&delete_Ttheta_i_func);
      instance.SetDeleteArray(&deleteArray_Ttheta_i_func);
      instance.SetDestructor(&destruct_Ttheta_i_func);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Ttheta_i_func*)
   {
      return GenerateInitInstanceLocal((::Ttheta_i_func*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Ttheta_i_func*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Ttof_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Ttof(void *p = 0);
   static void *newArray_Ttof(Long_t size, void *p);
   static void delete_Ttof(void *p);
   static void deleteArray_Ttof(void *p);
   static void destruct_Ttof(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Ttof*)
   {
      ::Ttof *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Ttof >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Ttof", ::Ttof::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/Ttof.hh", 14,
                  typeid(::Ttof), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Ttof::Dictionary, isa_proxy, 4,
                  sizeof(::Ttof) );
      instance.SetNew(&new_Ttof);
      instance.SetNewArray(&newArray_Ttof);
      instance.SetDelete(&delete_Ttof);
      instance.SetDeleteArray(&deleteArray_Ttof);
      instance.SetDestructor(&destruct_Ttof);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Ttof*)
   {
      return GenerateInitInstanceLocal((::Ttof*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Ttof*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MyString_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MyString(void *p = 0);
   static void *newArray_MyString(Long_t size, void *p);
   static void delete_MyString(void *p);
   static void deleteArray_MyString(void *p);
   static void destruct_MyString(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MyString*)
   {
      ::MyString *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MyString >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MyString", ::MyString::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/MyString.hh", 8,
                  typeid(::MyString), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MyString::Dictionary, isa_proxy, 4,
                  sizeof(::MyString) );
      instance.SetNew(&new_MyString);
      instance.SetNewArray(&newArray_MyString);
      instance.SetDelete(&delete_MyString);
      instance.SetDeleteArray(&deleteArray_MyString);
      instance.SetDestructor(&destruct_MyString);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MyString*)
   {
      return GenerateInitInstanceLocal((::MyString*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MyString*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MultiRunAnalizeManager_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MultiRunAnalizeManager(void *p = 0);
   static void *newArray_MultiRunAnalizeManager(Long_t size, void *p);
   static void delete_MultiRunAnalizeManager(void *p);
   static void deleteArray_MultiRunAnalizeManager(void *p);
   static void destruct_MultiRunAnalizeManager(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MultiRunAnalizeManager*)
   {
      ::MultiRunAnalizeManager *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MultiRunAnalizeManager >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MultiRunAnalizeManager", ::MultiRunAnalizeManager::Class_Version(), "/home/fujigami/retro/lowe/source/macro/include/MultiRunAnalizeManager.hh", 17,
                  typeid(::MultiRunAnalizeManager), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MultiRunAnalizeManager::Dictionary, isa_proxy, 4,
                  sizeof(::MultiRunAnalizeManager) );
      instance.SetNew(&new_MultiRunAnalizeManager);
      instance.SetNewArray(&newArray_MultiRunAnalizeManager);
      instance.SetDelete(&delete_MultiRunAnalizeManager);
      instance.SetDeleteArray(&deleteArray_MultiRunAnalizeManager);
      instance.SetDestructor(&destruct_MultiRunAnalizeManager);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MultiRunAnalizeManager*)
   {
      return GenerateInitInstanceLocal((::MultiRunAnalizeManager*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MultiRunAnalizeManager*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr Eventdisplay::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Eventdisplay::Class_Name()
{
   return "Eventdisplay";
}

//______________________________________________________________________________
const char *Eventdisplay::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Eventdisplay*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Eventdisplay::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Eventdisplay*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Eventdisplay::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Eventdisplay*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Eventdisplay::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Eventdisplay*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr goodness_data::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *goodness_data::Class_Name()
{
   return "goodness_data";
}

//______________________________________________________________________________
const char *goodness_data::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::goodness_data*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int goodness_data::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::goodness_data*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void goodness_data::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::goodness_data*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *goodness_data::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::goodness_data*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr l_dir_data::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *l_dir_data::Class_Name()
{
   return "l_dir_data";
}

//______________________________________________________________________________
const char *l_dir_data::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::l_dir_data*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int l_dir_data::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::l_dir_data*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void l_dir_data::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::l_dir_data*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *l_dir_data::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::l_dir_data*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr AnalizedData::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *AnalizedData::Class_Name()
{
   return "AnalizedData";
}

//______________________________________________________________________________
const char *AnalizedData::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AnalizedData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AnalizedData::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AnalizedData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AnalizedData::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AnalizedData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AnalizedData::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AnalizedData*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr C4Number::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *C4Number::Class_Name()
{
   return "C4Number";
}

//______________________________________________________________________________
const char *C4Number::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::C4Number*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int C4Number::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::C4Number*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void C4Number::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::C4Number*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *C4Number::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::C4Number*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr CSearch_range::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *CSearch_range::Class_Name()
{
   return "CSearch_range";
}

//______________________________________________________________________________
const char *CSearch_range::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CSearch_range*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CSearch_range::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CSearch_range*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CSearch_range::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CSearch_range*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CSearch_range::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CSearch_range*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr FileList::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *FileList::Class_Name()
{
   return "FileList";
}

//______________________________________________________________________________
const char *FileList::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FileList*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FileList::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FileList*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FileList::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FileList*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FileList::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FileList*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr efficiency::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *efficiency::Class_Name()
{
   return "efficiency";
}

//______________________________________________________________________________
const char *efficiency::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::efficiency*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int efficiency::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::efficiency*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void efficiency::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::efficiency*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *efficiency::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::efficiency*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TH1DByTree::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TH1DByTree::Class_Name()
{
   return "TH1DByTree";
}

//______________________________________________________________________________
const char *TH1DByTree::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TH1DByTree*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TH1DByTree::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TH1DByTree*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TH1DByTree::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TH1DByTree*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TH1DByTree::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TH1DByTree*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HistError::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HistError::Class_Name()
{
   return "HistError";
}

//______________________________________________________________________________
const char *HistError::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HistError*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HistError::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HistError*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HistError::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HistError*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HistError::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HistError*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HistBias::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HistBias::Class_Name()
{
   return "HistBias";
}

//______________________________________________________________________________
const char *HistBias::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HistBias*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HistBias::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HistBias*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HistBias::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HistBias*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HistBias::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HistBias*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr AngleRange::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *AngleRange::Class_Name()
{
   return "AngleRange";
}

//______________________________________________________________________________
const char *AngleRange::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AngleRange*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AngleRange::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AngleRange*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AngleRange::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AngleRange*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AngleRange::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AngleRange*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TReconstructhit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TReconstructhit::Class_Name()
{
   return "TReconstructhit";
}

//______________________________________________________________________________
const char *TReconstructhit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TReconstructhit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TReconstructhit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TReconstructhit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TReconstructhit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TReconstructhit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TReconstructhit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TReconstructhit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TReconstructdata::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TReconstructdata::Class_Name()
{
   return "TReconstructdata";
}

//______________________________________________________________________________
const char *TReconstructdata::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TReconstructdata*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TReconstructdata::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TReconstructdata*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TReconstructdata::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TReconstructdata*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TReconstructdata::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TReconstructdata*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TReconstructdata_minimize::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TReconstructdata_minimize::Class_Name()
{
   return "TReconstructdata_minimize";
}

//______________________________________________________________________________
const char *TReconstructdata_minimize::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TReconstructdata_minimize*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TReconstructdata_minimize::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TReconstructdata_minimize*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TReconstructdata_minimize::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TReconstructdata_minimize*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TReconstructdata_minimize::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TReconstructdata_minimize*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Thitinfo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Thitinfo::Class_Name()
{
   return "Thitinfo";
}

//______________________________________________________________________________
const char *Thitinfo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Thitinfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Thitinfo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Thitinfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Thitinfo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Thitinfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Thitinfo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Thitinfo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr OneDataParameters::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *OneDataParameters::Class_Name()
{
   return "OneDataParameters";
}

//______________________________________________________________________________
const char *OneDataParameters::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::OneDataParameters*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int OneDataParameters::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::OneDataParameters*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void OneDataParameters::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::OneDataParameters*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *OneDataParameters::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::OneDataParameters*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr OneRunDataAnalizeManager::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *OneRunDataAnalizeManager::Class_Name()
{
   return "OneRunDataAnalizeManager";
}

//______________________________________________________________________________
const char *OneRunDataAnalizeManager::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::OneRunDataAnalizeManager*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int OneRunDataAnalizeManager::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::OneRunDataAnalizeManager*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void OneRunDataAnalizeManager::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::OneRunDataAnalizeManager*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *OneRunDataAnalizeManager::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::OneRunDataAnalizeManager*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr OneGoodnessParameters::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *OneGoodnessParameters::Class_Name()
{
   return "OneGoodnessParameters";
}

//______________________________________________________________________________
const char *OneGoodnessParameters::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::OneGoodnessParameters*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int OneGoodnessParameters::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::OneGoodnessParameters*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void OneGoodnessParameters::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::OneGoodnessParameters*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *OneGoodnessParameters::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::OneGoodnessParameters*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr OneRunGoodnessAnalizeManager::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *OneRunGoodnessAnalizeManager::Class_Name()
{
   return "OneRunGoodnessAnalizeManager";
}

//______________________________________________________________________________
const char *OneRunGoodnessAnalizeManager::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::OneRunGoodnessAnalizeManager*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int OneRunGoodnessAnalizeManager::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::OneRunGoodnessAnalizeManager*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void OneRunGoodnessAnalizeManager::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::OneRunGoodnessAnalizeManager*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *OneRunGoodnessAnalizeManager::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::OneRunGoodnessAnalizeManager*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr OneLikelihoodParameters::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *OneLikelihoodParameters::Class_Name()
{
   return "OneLikelihoodParameters";
}

//______________________________________________________________________________
const char *OneLikelihoodParameters::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::OneLikelihoodParameters*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int OneLikelihoodParameters::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::OneLikelihoodParameters*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void OneLikelihoodParameters::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::OneLikelihoodParameters*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *OneLikelihoodParameters::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::OneLikelihoodParameters*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr OneRunLikelihoodAnalizeManager::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *OneRunLikelihoodAnalizeManager::Class_Name()
{
   return "OneRunLikelihoodAnalizeManager";
}

//______________________________________________________________________________
const char *OneRunLikelihoodAnalizeManager::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::OneRunLikelihoodAnalizeManager*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int OneRunLikelihoodAnalizeManager::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::OneRunLikelihoodAnalizeManager*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void OneRunLikelihoodAnalizeManager::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::OneRunLikelihoodAnalizeManager*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *OneRunLikelihoodAnalizeManager::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::OneRunLikelihoodAnalizeManager*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TOption_minimize::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TOption_minimize::Class_Name()
{
   return "TOption_minimize";
}

//______________________________________________________________________________
const char *TOption_minimize::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TOption_minimize*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TOption_minimize::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TOption_minimize*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TOption_minimize::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TOption_minimize*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TOption_minimize::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TOption_minimize*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr OneGoodnessMinimizeParameters::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *OneGoodnessMinimizeParameters::Class_Name()
{
   return "OneGoodnessMinimizeParameters";
}

//______________________________________________________________________________
const char *OneGoodnessMinimizeParameters::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::OneGoodnessMinimizeParameters*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int OneGoodnessMinimizeParameters::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::OneGoodnessMinimizeParameters*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void OneGoodnessMinimizeParameters::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::OneGoodnessMinimizeParameters*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *OneGoodnessMinimizeParameters::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::OneGoodnessMinimizeParameters*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr OneRunGoodnessMinimizeAnalizeManager::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *OneRunGoodnessMinimizeAnalizeManager::Class_Name()
{
   return "OneRunGoodnessMinimizeAnalizeManager";
}

//______________________________________________________________________________
const char *OneRunGoodnessMinimizeAnalizeManager::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::OneRunGoodnessMinimizeAnalizeManager*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int OneRunGoodnessMinimizeAnalizeManager::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::OneRunGoodnessMinimizeAnalizeManager*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void OneRunGoodnessMinimizeAnalizeManager::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::OneRunGoodnessMinimizeAnalizeManager*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *OneRunGoodnessMinimizeAnalizeManager::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::OneRunGoodnessMinimizeAnalizeManager*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr BiasError::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *BiasError::Class_Name()
{
   return "BiasError";
}

//______________________________________________________________________________
const char *BiasError::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BiasError*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BiasError::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BiasError*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BiasError::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BiasError*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BiasError::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BiasError*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr OneRunAnalizeManager::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *OneRunAnalizeManager::Class_Name()
{
   return "OneRunAnalizeManager";
}

//______________________________________________________________________________
const char *OneRunAnalizeManager::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::OneRunAnalizeManager*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int OneRunAnalizeManager::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::OneRunAnalizeManager*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void OneRunAnalizeManager::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::OneRunAnalizeManager*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *OneRunAnalizeManager::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::OneRunAnalizeManager*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Tfunction::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Tfunction::Class_Name()
{
   return "Tfunction";
}

//______________________________________________________________________________
const char *Tfunction::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Tfunction*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Tfunction::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Tfunction*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Tfunction::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Tfunction*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Tfunction::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Tfunction*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Tafunction::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Tafunction::Class_Name()
{
   return "Tafunction";
}

//______________________________________________________________________________
const char *Tafunction::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Tafunction*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Tafunction::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Tafunction*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Tafunction::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Tafunction*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Tafunction::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Tafunction*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Tafuncprototype::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Tafuncprototype::Class_Name()
{
   return "Tafuncprototype";
}

//______________________________________________________________________________
const char *Tafuncprototype::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Tafuncprototype*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Tafuncprototype::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Tafuncprototype*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Tafuncprototype::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Tafuncprototype*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Tafuncprototype::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Tafuncprototype*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Tdistance_function::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Tdistance_function::Class_Name()
{
   return "Tdistance_function";
}

//______________________________________________________________________________
const char *Tdistance_function::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Tdistance_function*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Tdistance_function::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Tdistance_function*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Tdistance_function::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Tdistance_function*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Tdistance_function::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Tdistance_function*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Tdistance_position_pmt::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Tdistance_position_pmt::Class_Name()
{
   return "Tdistance_position_pmt";
}

//______________________________________________________________________________
const char *Tdistance_position_pmt::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Tdistance_position_pmt*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Tdistance_position_pmt::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Tdistance_position_pmt*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Tdistance_position_pmt::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Tdistance_position_pmt*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Tdistance_position_pmt::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Tdistance_position_pmt*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Tdistance_position_retro::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Tdistance_position_retro::Class_Name()
{
   return "Tdistance_position_retro";
}

//______________________________________________________________________________
const char *Tdistance_position_retro::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Tdistance_position_retro*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Tdistance_position_retro::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Tdistance_position_retro*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Tdistance_position_retro::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Tdistance_position_retro*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Tdistance_position_retro::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Tdistance_position_retro*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Tdistance_fly_retro::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Tdistance_fly_retro::Class_Name()
{
   return "Tdistance_fly_retro";
}

//______________________________________________________________________________
const char *Tdistance_fly_retro::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Tdistance_fly_retro*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Tdistance_fly_retro::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Tdistance_fly_retro*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Tdistance_fly_retro::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Tdistance_fly_retro*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Tdistance_fly_retro::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Tdistance_fly_retro*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Tfdirection::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Tfdirection::Class_Name()
{
   return "Tfdirection";
}

//______________________________________________________________________________
const char *Tfdirection::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Tfdirection*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Tfdirection::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Tfdirection*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Tfdirection::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Tfdirection*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Tfdirection::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Tfdirection*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Tfdirprototypenoretro::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Tfdirprototypenoretro::Class_Name()
{
   return "Tfdirprototypenoretro";
}

//______________________________________________________________________________
const char *Tfdirprototypenoretro::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Tfdirprototypenoretro*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Tfdirprototypenoretro::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Tfdirprototypenoretro*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Tfdirprototypenoretro::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Tfdirprototypenoretro*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Tfdirprototypenoretro::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Tfdirprototypenoretro*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Tfdirprototypeonretro::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Tfdirprototypeonretro::Class_Name()
{
   return "Tfdirprototypeonretro";
}

//______________________________________________________________________________
const char *Tfdirprototypeonretro::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Tfdirprototypeonretro*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Tfdirprototypeonretro::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Tfdirprototypeonretro*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Tfdirprototypeonretro::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Tfdirprototypeonretro*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Tfdirprototypeonretro::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Tfdirprototypeonretro*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Tfdirbydatanoretro::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Tfdirbydatanoretro::Class_Name()
{
   return "Tfdirbydatanoretro";
}

//______________________________________________________________________________
const char *Tfdirbydatanoretro::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Tfdirbydatanoretro*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Tfdirbydatanoretro::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Tfdirbydatanoretro*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Tfdirbydatanoretro::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Tfdirbydatanoretro*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Tfdirbydatanoretro::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Tfdirbydatanoretro*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Tfdirbydataonretro::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Tfdirbydataonretro::Class_Name()
{
   return "Tfdirbydataonretro";
}

//______________________________________________________________________________
const char *Tfdirbydataonretro::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Tfdirbydataonretro*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Tfdirbydataonretro::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Tfdirbydataonretro*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Tfdirbydataonretro::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Tfdirbydataonretro*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Tfdirbydataonretro::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Tfdirbydataonretro*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Tlikelihood::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Tlikelihood::Class_Name()
{
   return "Tlikelihood";
}

//______________________________________________________________________________
const char *Tlikelihood::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Tlikelihood*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Tlikelihood::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Tlikelihood*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Tlikelihood::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Tlikelihood*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Tlikelihood::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Tlikelihood*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Tlikelihoodnoretro::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Tlikelihoodnoretro::Class_Name()
{
   return "Tlikelihoodnoretro";
}

//______________________________________________________________________________
const char *Tlikelihoodnoretro::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Tlikelihoodnoretro*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Tlikelihoodnoretro::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Tlikelihoodnoretro*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Tlikelihoodnoretro::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Tlikelihoodnoretro*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Tlikelihoodnoretro::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Tlikelihoodnoretro*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Tlikelihoodonretro::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Tlikelihoodonretro::Class_Name()
{
   return "Tlikelihoodonretro";
}

//______________________________________________________________________________
const char *Tlikelihoodonretro::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Tlikelihoodonretro*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Tlikelihoodonretro::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Tlikelihoodonretro*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Tlikelihoodonretro::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Tlikelihoodonretro*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Tlikelihoodonretro::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Tlikelihoodonretro*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Tlikelihoodsum::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Tlikelihoodsum::Class_Name()
{
   return "Tlikelihoodsum";
}

//______________________________________________________________________________
const char *Tlikelihoodsum::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Tlikelihoodsum*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Tlikelihoodsum::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Tlikelihoodsum*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Tlikelihoodsum::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Tlikelihoodsum*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Tlikelihoodsum::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Tlikelihoodsum*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Ttheta_dir_i::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Ttheta_dir_i::Class_Name()
{
   return "Ttheta_dir_i";
}

//______________________________________________________________________________
const char *Ttheta_dir_i::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Ttheta_dir_i*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Ttheta_dir_i::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Ttheta_dir_i*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Ttheta_dir_i::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Ttheta_dir_i*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Ttheta_dir_i::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Ttheta_dir_i*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Ttheta_i_func::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Ttheta_i_func::Class_Name()
{
   return "Ttheta_i_func";
}

//______________________________________________________________________________
const char *Ttheta_i_func::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Ttheta_i_func*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Ttheta_i_func::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Ttheta_i_func*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Ttheta_i_func::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Ttheta_i_func*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Ttheta_i_func::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Ttheta_i_func*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Ttof::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Ttof::Class_Name()
{
   return "Ttof";
}

//______________________________________________________________________________
const char *Ttof::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Ttof*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Ttof::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Ttof*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Ttof::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Ttof*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Ttof::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Ttof*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MyString::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MyString::Class_Name()
{
   return "MyString";
}

//______________________________________________________________________________
const char *MyString::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyString*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MyString::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyString*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MyString::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyString*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MyString::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyString*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MultiRunAnalizeManager::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MultiRunAnalizeManager::Class_Name()
{
   return "MultiRunAnalizeManager";
}

//______________________________________________________________________________
const char *MultiRunAnalizeManager::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MultiRunAnalizeManager*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MultiRunAnalizeManager::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MultiRunAnalizeManager*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MultiRunAnalizeManager::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MultiRunAnalizeManager*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MultiRunAnalizeManager::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MultiRunAnalizeManager*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void MyString::Streamer(TBuffer &R__b)
{
   // Stream an object of class MyString.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MyString::Class(),this);
   } else {
      R__b.WriteClassBuffer(MyString::Class(),this);
   }
}

//______________________________________________________________________________
void MyString::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MyString.
      TClass *R__cl = ::MyString::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "name", (void*)&name);
      R__insp.InspectMember("string", (void*)&name, "name.", false);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MyString(void *p) {
      return  p ? new(p) ::MyString : new ::MyString;
   }
   static void *newArray_MyString(Long_t nElements, void *p) {
      return p ? new(p) ::MyString[nElements] : new ::MyString[nElements];
   }
   // Wrapper around operator delete
   static void delete_MyString(void *p) {
      delete ((::MyString*)p);
   }
   static void deleteArray_MyString(void *p) {
      delete [] ((::MyString*)p);
   }
   static void destruct_MyString(void *p) {
      typedef ::MyString current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MyString

//______________________________________________________________________________
void Eventdisplay::Streamer(TBuffer &R__b)
{
   // Stream an object of class Eventdisplay.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Eventdisplay::Class(),this);
   } else {
      R__b.WriteClassBuffer(Eventdisplay::Class(),this);
   }
}

//______________________________________________________________________________
void Eventdisplay::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Eventdisplay.
      TClass *R__cl = ::Eventdisplay::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hall", &hall);
      R__insp.InspectMember(hall, "hall.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hcharge", &hcharge);
      R__insp.InspectMember(hcharge, "hcharge.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "htime", &htime);
      R__insp.InspectMember(htime, "htime.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hhit", &hhit);
      R__insp.InspectMember(hhit, "hhit.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1", &a1);
      R__insp.InspectMember(a1, "a1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a2", &a2);
      R__insp.InspectMember(a2, "a2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p1", &p1);
      R__insp.InspectMember(p1, "p1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "WCradius", &WCradius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "WClength", &WClength);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Eventdisplay(void *p) {
      return  p ? new(p) ::Eventdisplay : new ::Eventdisplay;
   }
   static void *newArray_Eventdisplay(Long_t nElements, void *p) {
      return p ? new(p) ::Eventdisplay[nElements] : new ::Eventdisplay[nElements];
   }
   // Wrapper around operator delete
   static void delete_Eventdisplay(void *p) {
      delete ((::Eventdisplay*)p);
   }
   static void deleteArray_Eventdisplay(void *p) {
      delete [] ((::Eventdisplay*)p);
   }
   static void destruct_Eventdisplay(void *p) {
      typedef ::Eventdisplay current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Eventdisplay

//______________________________________________________________________________
void goodness_data::Streamer(TBuffer &R__b)
{
   // Stream an object of class goodness_data.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(goodness_data::Class(),this);
   } else {
      R__b.WriteClassBuffer(goodness_data::Class(),this);
   }
}

//______________________________________________________________________________
void goodness_data::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class goodness_data.
      TClass *R__cl = ::goodness_data::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vector", &vector);
      R__insp.InspectMember(vector, "vector.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "goodness", &goodness);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_goodness_data(void *p) {
      return  p ? new(p) ::goodness_data : new ::goodness_data;
   }
   static void *newArray_goodness_data(Long_t nElements, void *p) {
      return p ? new(p) ::goodness_data[nElements] : new ::goodness_data[nElements];
   }
   // Wrapper around operator delete
   static void delete_goodness_data(void *p) {
      delete ((::goodness_data*)p);
   }
   static void deleteArray_goodness_data(void *p) {
      delete [] ((::goodness_data*)p);
   }
   static void destruct_goodness_data(void *p) {
      typedef ::goodness_data current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::goodness_data

//______________________________________________________________________________
void l_dir_data::Streamer(TBuffer &R__b)
{
   // Stream an object of class l_dir_data.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(l_dir_data::Class(),this);
   } else {
      R__b.WriteClassBuffer(l_dir_data::Class(),this);
   }
}

//______________________________________________________________________________
void l_dir_data::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class l_dir_data.
      TClass *R__cl = ::l_dir_data::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "likelihood", &likelihood);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "costheta", &costheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_l_dir_data(void *p) {
      return  p ? new(p) ::l_dir_data : new ::l_dir_data;
   }
   static void *newArray_l_dir_data(Long_t nElements, void *p) {
      return p ? new(p) ::l_dir_data[nElements] : new ::l_dir_data[nElements];
   }
   // Wrapper around operator delete
   static void delete_l_dir_data(void *p) {
      delete ((::l_dir_data*)p);
   }
   static void deleteArray_l_dir_data(void *p) {
      delete [] ((::l_dir_data*)p);
   }
   static void destruct_l_dir_data(void *p) {
      typedef ::l_dir_data current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::l_dir_data

//______________________________________________________________________________
void AnalizedData::Streamer(TBuffer &R__b)
{
   // Stream an object of class AnalizedData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(AnalizedData::Class(),this);
   } else {
      R__b.WriteClassBuffer(AnalizedData::Class(),this);
   }
}

//______________________________________________________________________________
void AnalizedData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AnalizedData.
      TClass *R__cl = ::AnalizedData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gdatagridsearch", &gdatagridsearch);
      R__insp.InspectMember(gdatagridsearch, "gdatagridsearch.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ldatagridsearch", &ldatagridsearch);
      R__insp.InspectMember(ldatagridsearch, "ldatagridsearch.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gdataminimized", &gdataminimized);
      R__insp.InspectMember(gdataminimized, "gdataminimized.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ldataminimized", &ldataminimized);
      R__insp.InspectMember(ldataminimized, "ldataminimized.");
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AnalizedData(void *p) {
      return  p ? new(p) ::AnalizedData : new ::AnalizedData;
   }
   static void *newArray_AnalizedData(Long_t nElements, void *p) {
      return p ? new(p) ::AnalizedData[nElements] : new ::AnalizedData[nElements];
   }
   // Wrapper around operator delete
   static void delete_AnalizedData(void *p) {
      delete ((::AnalizedData*)p);
   }
   static void deleteArray_AnalizedData(void *p) {
      delete [] ((::AnalizedData*)p);
   }
   static void destruct_AnalizedData(void *p) {
      typedef ::AnalizedData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::AnalizedData

//______________________________________________________________________________
void CSearch_range::Streamer(TBuffer &R__b)
{
   // Stream an object of class CSearch_range.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CSearch_range::Class(),this);
   } else {
      R__b.WriteClassBuffer(CSearch_range::Class(),this);
   }
}

//______________________________________________________________________________
void CSearch_range::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CSearch_range.
      TClass *R__cl = ::CSearch_range::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "search_min", &search_min);
      R__insp.InspectMember(search_min, "search_min.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "search_width", &search_width);
      R__insp.InspectMember(search_width, "search_width.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "search_number", &search_number);
      R__insp.InspectMember(search_number, "search_number.");
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_CSearch_range(void *p) {
      return  p ? new(p) ::CSearch_range : new ::CSearch_range;
   }
   static void *newArray_CSearch_range(Long_t nElements, void *p) {
      return p ? new(p) ::CSearch_range[nElements] : new ::CSearch_range[nElements];
   }
   // Wrapper around operator delete
   static void delete_CSearch_range(void *p) {
      delete ((::CSearch_range*)p);
   }
   static void deleteArray_CSearch_range(void *p) {
      delete [] ((::CSearch_range*)p);
   }
   static void destruct_CSearch_range(void *p) {
      typedef ::CSearch_range current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::CSearch_range

//______________________________________________________________________________
void C4Number::Streamer(TBuffer &R__b)
{
   // Stream an object of class C4Number.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(C4Number::Class(),this);
   } else {
      R__b.WriteClassBuffer(C4Number::Class(),this);
   }
}

//______________________________________________________________________________
void C4Number::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class C4Number.
      TClass *R__cl = ::C4Number::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x", &x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y", &y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z", &z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t", &t);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_C4Number(void *p) {
      return  p ? new(p) ::C4Number : new ::C4Number;
   }
   static void *newArray_C4Number(Long_t nElements, void *p) {
      return p ? new(p) ::C4Number[nElements] : new ::C4Number[nElements];
   }
   // Wrapper around operator delete
   static void delete_C4Number(void *p) {
      delete ((::C4Number*)p);
   }
   static void deleteArray_C4Number(void *p) {
      delete [] ((::C4Number*)p);
   }
   static void destruct_C4Number(void *p) {
      typedef ::C4Number current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::C4Number

//______________________________________________________________________________
void FileList::Streamer(TBuffer &R__b)
{
   // Stream an object of class FileList.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FileList::Class(),this);
   } else {
      R__b.WriteClassBuffer(FileList::Class(),this);
   }
}

//______________________________________________________________________________
void FileList::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FileList.
      TClass *R__cl = ::FileList::IsA();
      if (R__cl || R__insp.IsA()) { }
      TClonesArray::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_FileList(void *p) {
      return  p ? new(p) ::FileList : new ::FileList;
   }
   static void *newArray_FileList(Long_t nElements, void *p) {
      return p ? new(p) ::FileList[nElements] : new ::FileList[nElements];
   }
   // Wrapper around operator delete
   static void delete_FileList(void *p) {
      delete ((::FileList*)p);
   }
   static void deleteArray_FileList(void *p) {
      delete [] ((::FileList*)p);
   }
   static void destruct_FileList(void *p) {
      typedef ::FileList current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around the merge function.
   static Long64_t  merge_FileList(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::FileList*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::FileList

//______________________________________________________________________________
void efficiency::Streamer(TBuffer &R__b)
{
   // Stream an object of class efficiency.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(efficiency::Class(),this);
   } else {
      R__b.WriteClassBuffer(efficiency::Class(),this);
   }
}

//______________________________________________________________________________
void efficiency::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class efficiency.
      TClass *R__cl = ::efficiency::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "filelist", &filelist);
      R__insp.InspectMember(filelist, "filelist.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nevent", &Nevent);
      TH1D::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_efficiency(void *p) {
      return  p ? new(p) ::efficiency : new ::efficiency;
   }
   static void *newArray_efficiency(Long_t nElements, void *p) {
      return p ? new(p) ::efficiency[nElements] : new ::efficiency[nElements];
   }
   // Wrapper around operator delete
   static void delete_efficiency(void *p) {
      delete ((::efficiency*)p);
   }
   static void deleteArray_efficiency(void *p) {
      delete [] ((::efficiency*)p);
   }
   static void destruct_efficiency(void *p) {
      typedef ::efficiency current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around the directory auto add.
   static void directoryAutoAdd_efficiency(void *p, TDirectory *dir) {
      ((::efficiency*)p)->DirectoryAutoAdd(dir);
   }
   // Wrapper around the merge function.
   static Long64_t  merge_efficiency(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::efficiency*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::efficiency

//______________________________________________________________________________
void TH1DByTree::Streamer(TBuffer &R__b)
{
   // Stream an object of class TH1DByTree.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TH1DByTree::Class(),this);
   } else {
      R__b.WriteClassBuffer(TH1DByTree::Class(),this);
   }
}

//______________________________________________________________________________
void TH1DByTree::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TH1DByTree.
      TClass *R__cl = ::TH1DByTree::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fgaussian", &fgaussian);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nevent", &Nevent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "central", &central);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "axis", &axis);
      TH1D::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TH1DByTree(void *p) {
      return  p ? new(p) ::TH1DByTree : new ::TH1DByTree;
   }
   static void *newArray_TH1DByTree(Long_t nElements, void *p) {
      return p ? new(p) ::TH1DByTree[nElements] : new ::TH1DByTree[nElements];
   }
   // Wrapper around operator delete
   static void delete_TH1DByTree(void *p) {
      delete ((::TH1DByTree*)p);
   }
   static void deleteArray_TH1DByTree(void *p) {
      delete [] ((::TH1DByTree*)p);
   }
   static void destruct_TH1DByTree(void *p) {
      typedef ::TH1DByTree current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around the directory auto add.
   static void directoryAutoAdd_TH1DByTree(void *p, TDirectory *dir) {
      ((::TH1DByTree*)p)->DirectoryAutoAdd(dir);
   }
   // Wrapper around the merge function.
   static Long64_t  merge_TH1DByTree(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::TH1DByTree*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::TH1DByTree

//______________________________________________________________________________
void HistError::Streamer(TBuffer &R__b)
{
   // Stream an object of class HistError.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(HistError::Class(),this);
   } else {
      R__b.WriteClassBuffer(HistError::Class(),this);
   }
}

//______________________________________________________________________________
void HistError::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HistError.
      TClass *R__cl = ::HistError::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "filelist", &filelist);
      R__insp.InspectMember(filelist, "filelist.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*paraname", &paraname);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numorig", &numorig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "minorig", &minorig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxorig", &maxorig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "widthorig", &widthorig);
      TH1D::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HistError(void *p) {
      return  p ? new(p) ::HistError : new ::HistError;
   }
   static void *newArray_HistError(Long_t nElements, void *p) {
      return p ? new(p) ::HistError[nElements] : new ::HistError[nElements];
   }
   // Wrapper around operator delete
   static void delete_HistError(void *p) {
      delete ((::HistError*)p);
   }
   static void deleteArray_HistError(void *p) {
      delete [] ((::HistError*)p);
   }
   static void destruct_HistError(void *p) {
      typedef ::HistError current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around the directory auto add.
   static void directoryAutoAdd_HistError(void *p, TDirectory *dir) {
      ((::HistError*)p)->DirectoryAutoAdd(dir);
   }
   // Wrapper around the merge function.
   static Long64_t  merge_HistError(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::HistError*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::HistError

//______________________________________________________________________________
void HistBias::Streamer(TBuffer &R__b)
{
   // Stream an object of class HistBias.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(HistBias::Class(),this);
   } else {
      R__b.WriteClassBuffer(HistBias::Class(),this);
   }
}

//______________________________________________________________________________
void HistBias::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HistBias.
      TClass *R__cl = ::HistBias::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "filelist", &filelist);
      R__insp.InspectMember(filelist, "filelist.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*paraname", &paraname);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numorig", &numorig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "minorig", &minorig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxorig", &maxorig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "widthorig", &widthorig);
      TH1D::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HistBias(void *p) {
      return  p ? new(p) ::HistBias : new ::HistBias;
   }
   static void *newArray_HistBias(Long_t nElements, void *p) {
      return p ? new(p) ::HistBias[nElements] : new ::HistBias[nElements];
   }
   // Wrapper around operator delete
   static void delete_HistBias(void *p) {
      delete ((::HistBias*)p);
   }
   static void deleteArray_HistBias(void *p) {
      delete [] ((::HistBias*)p);
   }
   static void destruct_HistBias(void *p) {
      typedef ::HistBias current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around the directory auto add.
   static void directoryAutoAdd_HistBias(void *p, TDirectory *dir) {
      ((::HistBias*)p)->DirectoryAutoAdd(dir);
   }
   // Wrapper around the merge function.
   static Long64_t  merge_HistBias(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::HistBias*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::HistBias

//______________________________________________________________________________
void OneRunAnalizeManager::Streamer(TBuffer &R__b)
{
   // Stream an object of class OneRunAnalizeManager.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(OneRunAnalizeManager::Class(),this);
   } else {
      R__b.WriteClassBuffer(OneRunAnalizeManager::Class(),this);
   }
}

//______________________________________________________________________________
void OneRunAnalizeManager::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class OneRunAnalizeManager.
      TClass *R__cl = ::OneRunAnalizeManager::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*datamanager", &datamanager);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*goodnessmanager", &goodnessmanager);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*likelihoodmanager", &likelihoodmanager);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*goodnessminimizemanager", &goodnessminimizemanager);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_OneRunAnalizeManager(void *p) {
      return  p ? new(p) ::OneRunAnalizeManager : new ::OneRunAnalizeManager;
   }
   static void *newArray_OneRunAnalizeManager(Long_t nElements, void *p) {
      return p ? new(p) ::OneRunAnalizeManager[nElements] : new ::OneRunAnalizeManager[nElements];
   }
   // Wrapper around operator delete
   static void delete_OneRunAnalizeManager(void *p) {
      delete ((::OneRunAnalizeManager*)p);
   }
   static void deleteArray_OneRunAnalizeManager(void *p) {
      delete [] ((::OneRunAnalizeManager*)p);
   }
   static void destruct_OneRunAnalizeManager(void *p) {
      typedef ::OneRunAnalizeManager current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::OneRunAnalizeManager

//______________________________________________________________________________
void MultiRunAnalizeManager::Streamer(TBuffer &R__b)
{
   // Stream an object of class MultiRunAnalizeManager.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MultiRunAnalizeManager::Class(),this);
   } else {
      R__b.WriteClassBuffer(MultiRunAnalizeManager::Class(),this);
   }
}

//______________________________________________________________________________
void MultiRunAnalizeManager::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MultiRunAnalizeManager.
      TClass *R__cl = ::MultiRunAnalizeManager::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "basefileparameters", &basefileparameters);
      R__insp.InspectMember(basefileparameters, "basefileparameters.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "basegoodnessparameters", &basegoodnessparameters);
      R__insp.InspectMember(basegoodnessparameters, "basegoodnessparameters.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "baselikelihoodparameters", &baselikelihoodparameters);
      R__insp.InspectMember(baselikelihoodparameters, "baselikelihoodparameters.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "basegoodnessminimizeparameters", &basegoodnessminimizeparameters);
      R__insp.InspectMember(basegoodnessminimizeparameters, "basegoodnessminimizeparameters.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vdataparameters", (void*)&vdataparameters);
      R__insp.InspectMember("vector<OneDataParameters>", (void*)&vdataparameters, "vdataparameters.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vgoodnessparameters", (void*)&vgoodnessparameters);
      R__insp.InspectMember("vector<OneGoodnessParameters>", (void*)&vgoodnessparameters, "vgoodnessparameters.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vlikelihoodparameters", (void*)&vlikelihoodparameters);
      R__insp.InspectMember("vector<OneLikelihoodParameters>", (void*)&vlikelihoodparameters, "vlikelihoodparameters.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vgoodnessminimizeparameters", (void*)&vgoodnessminimizeparameters);
      R__insp.InspectMember("vector<OneGoodnessMinimizeParameters>", (void*)&vgoodnessminimizeparameters, "vgoodnessminimizeparameters.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vrunanalizemanager", (void*)&vrunanalizemanager);
      R__insp.InspectMember("vector<OneRunAnalizeManager*>", (void*)&vrunanalizemanager, "vrunanalizemanager.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sbasefile", (void*)&sbasefile);
      R__insp.InspectMember("string", (void*)&sbasefile, "sbasefile.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mode", &mode);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MultiRunAnalizeManager(void *p) {
      return  p ? new(p) ::MultiRunAnalizeManager : new ::MultiRunAnalizeManager;
   }
   static void *newArray_MultiRunAnalizeManager(Long_t nElements, void *p) {
      return p ? new(p) ::MultiRunAnalizeManager[nElements] : new ::MultiRunAnalizeManager[nElements];
   }
   // Wrapper around operator delete
   static void delete_MultiRunAnalizeManager(void *p) {
      delete ((::MultiRunAnalizeManager*)p);
   }
   static void deleteArray_MultiRunAnalizeManager(void *p) {
      delete [] ((::MultiRunAnalizeManager*)p);
   }
   static void destruct_MultiRunAnalizeManager(void *p) {
      typedef ::MultiRunAnalizeManager current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MultiRunAnalizeManager

//______________________________________________________________________________
void OneRunDataAnalizeManager::Streamer(TBuffer &R__b)
{
   // Stream an object of class OneRunDataAnalizeManager.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(OneRunDataAnalizeManager::Class(),this);
   } else {
      R__b.WriteClassBuffer(OneRunDataAnalizeManager::Class(),this);
   }
}

//______________________________________________________________________________
void OneRunDataAnalizeManager::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class OneRunDataAnalizeManager.
      TClass *R__cl = ::OneRunDataAnalizeManager::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ncherenkovdigihits", &ncherenkovdigihits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "reconstructdatatrue", &reconstructdatatrue);
      R__insp.InspectMember(reconstructdatatrue, "reconstructdatatrue.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vhitinfo", (void*)&vhitinfo);
      R__insp.InspectMember("vector<Thitinfo>", (void*)&vhitinfo, "vhitinfo.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vncherenkovdigihits", (void*)&vncherenkovdigihits);
      R__insp.InspectMember("vector<int>", (void*)&vncherenkovdigihits, "vncherenkovdigihits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dfile", &dfile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wcsimT", &wcsimT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wcsimGeoT", &wcsimGeoT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wcsimrootevent", &wcsimrootevent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wcsimrootgeom", &wcsimrootgeom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "neventdata", &neventdata);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*onedataparameters", &onedataparameters);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_OneRunDataAnalizeManager(void *p) {
      return  p ? new(p) ::OneRunDataAnalizeManager : new ::OneRunDataAnalizeManager;
   }
   static void *newArray_OneRunDataAnalizeManager(Long_t nElements, void *p) {
      return p ? new(p) ::OneRunDataAnalizeManager[nElements] : new ::OneRunDataAnalizeManager[nElements];
   }
   // Wrapper around operator delete
   static void delete_OneRunDataAnalizeManager(void *p) {
      delete ((::OneRunDataAnalizeManager*)p);
   }
   static void deleteArray_OneRunDataAnalizeManager(void *p) {
      delete [] ((::OneRunDataAnalizeManager*)p);
   }
   static void destruct_OneRunDataAnalizeManager(void *p) {
      typedef ::OneRunDataAnalizeManager current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::OneRunDataAnalizeManager

//______________________________________________________________________________
void OneRunGoodnessAnalizeManager::Streamer(TBuffer &R__b)
{
   // Stream an object of class OneRunGoodnessAnalizeManager.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(OneRunGoodnessAnalizeManager::Class(),this);
   } else {
      R__b.WriteClassBuffer(OneRunGoodnessAnalizeManager::Class(),this);
   }
}

//______________________________________________________________________________
void OneRunGoodnessAnalizeManager::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class OneRunGoodnessAnalizeManager.
      TClass *R__cl = ::OneRunGoodnessAnalizeManager::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gfile", &gfile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*goodnessT", &goodnessT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*optionT", &optionT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*data", &data);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*range", &range);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "neventgoodness", &neventgoodness);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*onegoodnessparameters", &onegoodnessparameters);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_OneRunGoodnessAnalizeManager(void *p) {
      return  p ? new(p) ::OneRunGoodnessAnalizeManager : new ::OneRunGoodnessAnalizeManager;
   }
   static void *newArray_OneRunGoodnessAnalizeManager(Long_t nElements, void *p) {
      return p ? new(p) ::OneRunGoodnessAnalizeManager[nElements] : new ::OneRunGoodnessAnalizeManager[nElements];
   }
   // Wrapper around operator delete
   static void delete_OneRunGoodnessAnalizeManager(void *p) {
      delete ((::OneRunGoodnessAnalizeManager*)p);
   }
   static void deleteArray_OneRunGoodnessAnalizeManager(void *p) {
      delete [] ((::OneRunGoodnessAnalizeManager*)p);
   }
   static void destruct_OneRunGoodnessAnalizeManager(void *p) {
      typedef ::OneRunGoodnessAnalizeManager current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::OneRunGoodnessAnalizeManager

//______________________________________________________________________________
void OneRunLikelihoodAnalizeManager::Streamer(TBuffer &R__b)
{
   // Stream an object of class OneRunLikelihoodAnalizeManager.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(OneRunLikelihoodAnalizeManager::Class(),this);
   } else {
      R__b.WriteClassBuffer(OneRunLikelihoodAnalizeManager::Class(),this);
   }
}

//______________________________________________________________________________
void OneRunLikelihoodAnalizeManager::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class OneRunLikelihoodAnalizeManager.
      TClass *R__cl = ::OneRunLikelihoodAnalizeManager::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*lfile", &lfile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*likelihoodT", &likelihoodT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*loptionT", &loptionT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*data", &data);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*range", &range);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "neventlikelihood", &neventlikelihood);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*onelikelihoodparameters", &onelikelihoodparameters);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_OneRunLikelihoodAnalizeManager(void *p) {
      return  p ? new(p) ::OneRunLikelihoodAnalizeManager : new ::OneRunLikelihoodAnalizeManager;
   }
   static void *newArray_OneRunLikelihoodAnalizeManager(Long_t nElements, void *p) {
      return p ? new(p) ::OneRunLikelihoodAnalizeManager[nElements] : new ::OneRunLikelihoodAnalizeManager[nElements];
   }
   // Wrapper around operator delete
   static void delete_OneRunLikelihoodAnalizeManager(void *p) {
      delete ((::OneRunLikelihoodAnalizeManager*)p);
   }
   static void deleteArray_OneRunLikelihoodAnalizeManager(void *p) {
      delete [] ((::OneRunLikelihoodAnalizeManager*)p);
   }
   static void destruct_OneRunLikelihoodAnalizeManager(void *p) {
      typedef ::OneRunLikelihoodAnalizeManager current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::OneRunLikelihoodAnalizeManager

//______________________________________________________________________________
void OneRunGoodnessMinimizeAnalizeManager::Streamer(TBuffer &R__b)
{
   // Stream an object of class OneRunGoodnessMinimizeAnalizeManager.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(OneRunGoodnessMinimizeAnalizeManager::Class(),this);
   } else {
      R__b.WriteClassBuffer(OneRunGoodnessMinimizeAnalizeManager::Class(),this);
   }
}

//______________________________________________________________________________
void OneRunGoodnessMinimizeAnalizeManager::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class OneRunGoodnessMinimizeAnalizeManager.
      TClass *R__cl = ::OneRunGoodnessMinimizeAnalizeManager::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gfile", &gfile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*goodnessminimizeT", &goodnessminimizeT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gmoptionT", &gmoptionT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*data", &data);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*option", &option);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "neventgoodnessminimize", &neventgoodnessminimize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*onegoodnessminimizeparameters", &onegoodnessminimizeparameters);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_OneRunGoodnessMinimizeAnalizeManager(void *p) {
      return  p ? new(p) ::OneRunGoodnessMinimizeAnalizeManager : new ::OneRunGoodnessMinimizeAnalizeManager;
   }
   static void *newArray_OneRunGoodnessMinimizeAnalizeManager(Long_t nElements, void *p) {
      return p ? new(p) ::OneRunGoodnessMinimizeAnalizeManager[nElements] : new ::OneRunGoodnessMinimizeAnalizeManager[nElements];
   }
   // Wrapper around operator delete
   static void delete_OneRunGoodnessMinimizeAnalizeManager(void *p) {
      delete ((::OneRunGoodnessMinimizeAnalizeManager*)p);
   }
   static void deleteArray_OneRunGoodnessMinimizeAnalizeManager(void *p) {
      delete [] ((::OneRunGoodnessMinimizeAnalizeManager*)p);
   }
   static void destruct_OneRunGoodnessMinimizeAnalizeManager(void *p) {
      typedef ::OneRunGoodnessMinimizeAnalizeManager current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::OneRunGoodnessMinimizeAnalizeManager

//______________________________________________________________________________
void AngleRange::Streamer(TBuffer &R__b)
{
   // Stream an object of class AngleRange.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(AngleRange::Class(),this);
   } else {
      R__b.WriteClassBuffer(AngleRange::Class(),this);
   }
}

//______________________________________________________________________________
void AngleRange::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AngleRange.
      TClass *R__cl = ::AngleRange::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "costhetamin", &costhetamin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "costhetawidth", &costhetawidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "costhetanum", &costhetanum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phimin", &phimin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phiwidth", &phiwidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phinum", &phinum);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AngleRange(void *p) {
      return  p ? new(p) ::AngleRange : new ::AngleRange;
   }
   static void *newArray_AngleRange(Long_t nElements, void *p) {
      return p ? new(p) ::AngleRange[nElements] : new ::AngleRange[nElements];
   }
   // Wrapper around operator delete
   static void delete_AngleRange(void *p) {
      delete ((::AngleRange*)p);
   }
   static void deleteArray_AngleRange(void *p) {
      delete [] ((::AngleRange*)p);
   }
   static void destruct_AngleRange(void *p) {
      typedef ::AngleRange current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::AngleRange

//______________________________________________________________________________
void TReconstructdata::Streamer(TBuffer &R__b)
{
   // Stream an object of class TReconstructdata.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TReconstructdata::Class(),this);
   } else {
      R__b.WriteClassBuffer(TReconstructdata::Class(),this);
   }
}

//______________________________________________________________________________
void TReconstructdata::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TReconstructdata.
      TClass *R__cl = ::TReconstructdata::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vector", &vector);
      R__insp.InspectMember(vector, "vector.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "direction", &direction);
      R__insp.InspectMember(direction, "direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy", &energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "goodness", &goodness);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "likelihood", &likelihood);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "likelihoodonretro", &likelihoodonretro);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "likelihoodnoretro", &likelihoodnoretro);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fhit", (void*)&fhit);
      R__insp.InspectMember("vector<TReconstructhit>", (void*)&fhit, "fhit.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TReconstructdata(void *p) {
      return  p ? new(p) ::TReconstructdata : new ::TReconstructdata;
   }
   static void *newArray_TReconstructdata(Long_t nElements, void *p) {
      return p ? new(p) ::TReconstructdata[nElements] : new ::TReconstructdata[nElements];
   }
   // Wrapper around operator delete
   static void delete_TReconstructdata(void *p) {
      delete ((::TReconstructdata*)p);
   }
   static void deleteArray_TReconstructdata(void *p) {
      delete [] ((::TReconstructdata*)p);
   }
   static void destruct_TReconstructdata(void *p) {
      typedef ::TReconstructdata current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TReconstructdata

//______________________________________________________________________________
void TReconstructdata_minimize::Streamer(TBuffer &R__b)
{
   // Stream an object of class TReconstructdata_minimize.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TReconstructdata_minimize::Class(),this);
   } else {
      R__b.WriteClassBuffer(TReconstructdata_minimize::Class(),this);
   }
}

//______________________________________________________________________________
void TReconstructdata_minimize::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TReconstructdata_minimize.
      TClass *R__cl = ::TReconstructdata_minimize::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "status", &status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ncalls", &ncalls);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nIterations", &nIterations);
      TReconstructdata::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TReconstructdata_minimize(void *p) {
      return  p ? new(p) ::TReconstructdata_minimize : new ::TReconstructdata_minimize;
   }
   static void *newArray_TReconstructdata_minimize(Long_t nElements, void *p) {
      return p ? new(p) ::TReconstructdata_minimize[nElements] : new ::TReconstructdata_minimize[nElements];
   }
   // Wrapper around operator delete
   static void delete_TReconstructdata_minimize(void *p) {
      delete ((::TReconstructdata_minimize*)p);
   }
   static void deleteArray_TReconstructdata_minimize(void *p) {
      delete [] ((::TReconstructdata_minimize*)p);
   }
   static void destruct_TReconstructdata_minimize(void *p) {
      typedef ::TReconstructdata_minimize current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TReconstructdata_minimize

//______________________________________________________________________________
void TReconstructhit::Streamer(TBuffer &R__b)
{
   // Stream an object of class TReconstructhit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TReconstructhit::Class(),this);
   } else {
      R__b.WriteClassBuffer(TReconstructhit::Class(),this);
   }
}

//______________________________________________________________________________
void TReconstructhit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TReconstructhit.
      TClass *R__cl = ::TReconstructhit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hittype", &hittype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "onegoodnessnoretro", &onegoodnessnoretro);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "onegoodnessonretro", &onegoodnessonretro);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "onelikelihoodnoretro", &onelikelihoodnoretro);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "onelikelihoodonretro", &onelikelihoodonretro);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TReconstructhit(void *p) {
      return  p ? new(p) ::TReconstructhit : new ::TReconstructhit;
   }
   static void *newArray_TReconstructhit(Long_t nElements, void *p) {
      return p ? new(p) ::TReconstructhit[nElements] : new ::TReconstructhit[nElements];
   }
   // Wrapper around operator delete
   static void delete_TReconstructhit(void *p) {
      delete ((::TReconstructhit*)p);
   }
   static void deleteArray_TReconstructhit(void *p) {
      delete [] ((::TReconstructhit*)p);
   }
   static void destruct_TReconstructhit(void *p) {
      typedef ::TReconstructhit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TReconstructhit

//______________________________________________________________________________
void Thitinfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class Thitinfo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Thitinfo::Class(),this);
   } else {
      R__b.WriteClassBuffer(Thitinfo::Class(),this);
   }
}

//______________________________________________________________________________
void Thitinfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Thitinfo.
      TClass *R__cl = ::Thitinfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmt", &pmt);
      R__insp.InspectMember(pmt, "pmt.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "WCradius", &WCradius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "WClength", &WClength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hittime", &hittime);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Thitinfo(void *p) {
      return  p ? new(p) ::Thitinfo : new ::Thitinfo;
   }
   static void *newArray_Thitinfo(Long_t nElements, void *p) {
      return p ? new(p) ::Thitinfo[nElements] : new ::Thitinfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_Thitinfo(void *p) {
      delete ((::Thitinfo*)p);
   }
   static void deleteArray_Thitinfo(void *p) {
      delete [] ((::Thitinfo*)p);
   }
   static void destruct_Thitinfo(void *p) {
      typedef ::Thitinfo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Thitinfo

//______________________________________________________________________________
void Tfunction::Streamer(TBuffer &R__b)
{
   // Stream an object of class Tfunction.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Tfunction::Class(),this);
   } else {
      R__b.WriteClassBuffer(Tfunction::Class(),this);
   }
}

//______________________________________________________________________________
void Tfunction::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Tfunction.
      TClass *R__cl = ::Tfunction::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Tfunction(void *p) {
      delete ((::Tfunction*)p);
   }
   static void deleteArray_Tfunction(void *p) {
      delete [] ((::Tfunction*)p);
   }
   static void destruct_Tfunction(void *p) {
      typedef ::Tfunction current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Tfunction

//______________________________________________________________________________
void Tafunction::Streamer(TBuffer &R__b)
{
   // Stream an object of class Tafunction.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Tafunction::Class(),this);
   } else {
      R__b.WriteClassBuffer(Tafunction::Class(),this);
   }
}

//______________________________________________________________________________
void Tafunction::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Tafunction.
      TClass *R__cl = ::Tafunction::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "info", &info);
      R__insp.InspectMember(info, "info.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "data", &data);
      R__insp.InspectMember(data, "data.");
      Tfunction::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Tafunction(void *p) {
      delete ((::Tafunction*)p);
   }
   static void deleteArray_Tafunction(void *p) {
      delete [] ((::Tafunction*)p);
   }
   static void destruct_Tafunction(void *p) {
      typedef ::Tafunction current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Tafunction

//______________________________________________________________________________
void Tafuncprototype::Streamer(TBuffer &R__b)
{
   // Stream an object of class Tafuncprototype.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Tafuncprototype::Class(),this);
   } else {
      R__b.WriteClassBuffer(Tafuncprototype::Class(),this);
   }
}

//______________________________________________________________________________
void Tafuncprototype::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Tafuncprototype.
      TClass *R__cl = ::Tafuncprototype::IsA();
      if (R__cl || R__insp.IsA()) { }
      Tafunction::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Tafuncprototype(void *p) {
      return  p ? new(p) ::Tafuncprototype : new ::Tafuncprototype;
   }
   static void *newArray_Tafuncprototype(Long_t nElements, void *p) {
      return p ? new(p) ::Tafuncprototype[nElements] : new ::Tafuncprototype[nElements];
   }
   // Wrapper around operator delete
   static void delete_Tafuncprototype(void *p) {
      delete ((::Tafuncprototype*)p);
   }
   static void deleteArray_Tafuncprototype(void *p) {
      delete [] ((::Tafuncprototype*)p);
   }
   static void destruct_Tafuncprototype(void *p) {
      typedef ::Tafuncprototype current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Tafuncprototype

//______________________________________________________________________________
void Tdistance_function::Streamer(TBuffer &R__b)
{
   // Stream an object of class Tdistance_function.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Tdistance_function::Class(),this);
   } else {
      R__b.WriteClassBuffer(Tdistance_function::Class(),this);
   }
}

//______________________________________________________________________________
void Tdistance_function::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Tdistance_function.
      TClass *R__cl = ::Tdistance_function::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "info", &info);
      R__insp.InspectMember(info, "info.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "data", &data);
      R__insp.InspectMember(data, "data.");
      Tfunction::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Tdistance_function(void *p) {
      delete ((::Tdistance_function*)p);
   }
   static void deleteArray_Tdistance_function(void *p) {
      delete [] ((::Tdistance_function*)p);
   }
   static void destruct_Tdistance_function(void *p) {
      typedef ::Tdistance_function current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Tdistance_function

//______________________________________________________________________________
void Tdistance_position_pmt::Streamer(TBuffer &R__b)
{
   // Stream an object of class Tdistance_position_pmt.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Tdistance_position_pmt::Class(),this);
   } else {
      R__b.WriteClassBuffer(Tdistance_position_pmt::Class(),this);
   }
}

//______________________________________________________________________________
void Tdistance_position_pmt::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Tdistance_position_pmt.
      TClass *R__cl = ::Tdistance_position_pmt::IsA();
      if (R__cl || R__insp.IsA()) { }
      Tdistance_function::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Tdistance_position_pmt(void *p) {
      return  p ? new(p) ::Tdistance_position_pmt : new ::Tdistance_position_pmt;
   }
   static void *newArray_Tdistance_position_pmt(Long_t nElements, void *p) {
      return p ? new(p) ::Tdistance_position_pmt[nElements] : new ::Tdistance_position_pmt[nElements];
   }
   // Wrapper around operator delete
   static void delete_Tdistance_position_pmt(void *p) {
      delete ((::Tdistance_position_pmt*)p);
   }
   static void deleteArray_Tdistance_position_pmt(void *p) {
      delete [] ((::Tdistance_position_pmt*)p);
   }
   static void destruct_Tdistance_position_pmt(void *p) {
      typedef ::Tdistance_position_pmt current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Tdistance_position_pmt

//______________________________________________________________________________
void Tdistance_position_retro::Streamer(TBuffer &R__b)
{
   // Stream an object of class Tdistance_position_retro.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Tdistance_position_retro::Class(),this);
   } else {
      R__b.WriteClassBuffer(Tdistance_position_retro::Class(),this);
   }
}

//______________________________________________________________________________
void Tdistance_position_retro::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Tdistance_position_retro.
      TClass *R__cl = ::Tdistance_position_retro::IsA();
      if (R__cl || R__insp.IsA()) { }
      Tdistance_function::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Tdistance_position_retro(void *p) {
      return  p ? new(p) ::Tdistance_position_retro : new ::Tdistance_position_retro;
   }
   static void *newArray_Tdistance_position_retro(Long_t nElements, void *p) {
      return p ? new(p) ::Tdistance_position_retro[nElements] : new ::Tdistance_position_retro[nElements];
   }
   // Wrapper around operator delete
   static void delete_Tdistance_position_retro(void *p) {
      delete ((::Tdistance_position_retro*)p);
   }
   static void deleteArray_Tdistance_position_retro(void *p) {
      delete [] ((::Tdistance_position_retro*)p);
   }
   static void destruct_Tdistance_position_retro(void *p) {
      typedef ::Tdistance_position_retro current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Tdistance_position_retro

//______________________________________________________________________________
void Tdistance_fly_retro::Streamer(TBuffer &R__b)
{
   // Stream an object of class Tdistance_fly_retro.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Tdistance_fly_retro::Class(),this);
   } else {
      R__b.WriteClassBuffer(Tdistance_fly_retro::Class(),this);
   }
}

//______________________________________________________________________________
void Tdistance_fly_retro::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Tdistance_fly_retro.
      TClass *R__cl = ::Tdistance_fly_retro::IsA();
      if (R__cl || R__insp.IsA()) { }
      Tdistance_function::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Tdistance_fly_retro(void *p) {
      return  p ? new(p) ::Tdistance_fly_retro : new ::Tdistance_fly_retro;
   }
   static void *newArray_Tdistance_fly_retro(Long_t nElements, void *p) {
      return p ? new(p) ::Tdistance_fly_retro[nElements] : new ::Tdistance_fly_retro[nElements];
   }
   // Wrapper around operator delete
   static void delete_Tdistance_fly_retro(void *p) {
      delete ((::Tdistance_fly_retro*)p);
   }
   static void deleteArray_Tdistance_fly_retro(void *p) {
      delete [] ((::Tdistance_fly_retro*)p);
   }
   static void destruct_Tdistance_fly_retro(void *p) {
      typedef ::Tdistance_fly_retro current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Tdistance_fly_retro

//______________________________________________________________________________
void Tfdirection::Streamer(TBuffer &R__b)
{
   // Stream an object of class Tfdirection.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Tfdirection::Class(),this);
   } else {
      R__b.WriteClassBuffer(Tfdirection::Class(),this);
   }
}

//______________________________________________________________________________
void Tfdirection::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Tfdirection.
      TClass *R__cl = ::Tfdirection::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "info", &info);
      R__insp.InspectMember(info, "info.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "data", &data);
      R__insp.InspectMember(data, "data.");
      Tfunction::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Tfdirection(void *p) {
      delete ((::Tfdirection*)p);
   }
   static void deleteArray_Tfdirection(void *p) {
      delete [] ((::Tfdirection*)p);
   }
   static void destruct_Tfdirection(void *p) {
      typedef ::Tfdirection current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Tfdirection

//______________________________________________________________________________
void Tfdirprototypenoretro::Streamer(TBuffer &R__b)
{
   // Stream an object of class Tfdirprototypenoretro.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Tfdirprototypenoretro::Class(),this);
   } else {
      R__b.WriteClassBuffer(Tfdirprototypenoretro::Class(),this);
   }
}

//______________________________________________________________________________
void Tfdirprototypenoretro::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Tfdirprototypenoretro.
      TClass *R__cl = ::Tfdirprototypenoretro::IsA();
      if (R__cl || R__insp.IsA()) { }
      Tfdirection::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Tfdirprototypenoretro(void *p) {
      return  p ? new(p) ::Tfdirprototypenoretro : new ::Tfdirprototypenoretro;
   }
   static void *newArray_Tfdirprototypenoretro(Long_t nElements, void *p) {
      return p ? new(p) ::Tfdirprototypenoretro[nElements] : new ::Tfdirprototypenoretro[nElements];
   }
   // Wrapper around operator delete
   static void delete_Tfdirprototypenoretro(void *p) {
      delete ((::Tfdirprototypenoretro*)p);
   }
   static void deleteArray_Tfdirprototypenoretro(void *p) {
      delete [] ((::Tfdirprototypenoretro*)p);
   }
   static void destruct_Tfdirprototypenoretro(void *p) {
      typedef ::Tfdirprototypenoretro current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Tfdirprototypenoretro

//______________________________________________________________________________
void Tfdirprototypeonretro::Streamer(TBuffer &R__b)
{
   // Stream an object of class Tfdirprototypeonretro.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Tfdirprototypeonretro::Class(),this);
   } else {
      R__b.WriteClassBuffer(Tfdirprototypeonretro::Class(),this);
   }
}

//______________________________________________________________________________
void Tfdirprototypeonretro::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Tfdirprototypeonretro.
      TClass *R__cl = ::Tfdirprototypeonretro::IsA();
      if (R__cl || R__insp.IsA()) { }
      Tfdirection::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Tfdirprototypeonretro(void *p) {
      return  p ? new(p) ::Tfdirprototypeonretro : new ::Tfdirprototypeonretro;
   }
   static void *newArray_Tfdirprototypeonretro(Long_t nElements, void *p) {
      return p ? new(p) ::Tfdirprototypeonretro[nElements] : new ::Tfdirprototypeonretro[nElements];
   }
   // Wrapper around operator delete
   static void delete_Tfdirprototypeonretro(void *p) {
      delete ((::Tfdirprototypeonretro*)p);
   }
   static void deleteArray_Tfdirprototypeonretro(void *p) {
      delete [] ((::Tfdirprototypeonretro*)p);
   }
   static void destruct_Tfdirprototypeonretro(void *p) {
      typedef ::Tfdirprototypeonretro current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Tfdirprototypeonretro

//______________________________________________________________________________
void Tfdirbydatanoretro::Streamer(TBuffer &R__b)
{
   // Stream an object of class Tfdirbydatanoretro.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Tfdirbydatanoretro::Class(),this);
   } else {
      R__b.WriteClassBuffer(Tfdirbydatanoretro::Class(),this);
   }
}

//______________________________________________________________________________
void Tfdirbydatanoretro::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Tfdirbydatanoretro.
      TClass *R__cl = ::Tfdirbydatanoretro::IsA();
      if (R__cl || R__insp.IsA()) { }
      Tfdirection::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Tfdirbydatanoretro(void *p) {
      return  p ? new(p) ::Tfdirbydatanoretro : new ::Tfdirbydatanoretro;
   }
   static void *newArray_Tfdirbydatanoretro(Long_t nElements, void *p) {
      return p ? new(p) ::Tfdirbydatanoretro[nElements] : new ::Tfdirbydatanoretro[nElements];
   }
   // Wrapper around operator delete
   static void delete_Tfdirbydatanoretro(void *p) {
      delete ((::Tfdirbydatanoretro*)p);
   }
   static void deleteArray_Tfdirbydatanoretro(void *p) {
      delete [] ((::Tfdirbydatanoretro*)p);
   }
   static void destruct_Tfdirbydatanoretro(void *p) {
      typedef ::Tfdirbydatanoretro current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Tfdirbydatanoretro

//______________________________________________________________________________
void Tfdirbydataonretro::Streamer(TBuffer &R__b)
{
   // Stream an object of class Tfdirbydataonretro.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Tfdirbydataonretro::Class(),this);
   } else {
      R__b.WriteClassBuffer(Tfdirbydataonretro::Class(),this);
   }
}

//______________________________________________________________________________
void Tfdirbydataonretro::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Tfdirbydataonretro.
      TClass *R__cl = ::Tfdirbydataonretro::IsA();
      if (R__cl || R__insp.IsA()) { }
      Tfdirection::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Tfdirbydataonretro(void *p) {
      return  p ? new(p) ::Tfdirbydataonretro : new ::Tfdirbydataonretro;
   }
   static void *newArray_Tfdirbydataonretro(Long_t nElements, void *p) {
      return p ? new(p) ::Tfdirbydataonretro[nElements] : new ::Tfdirbydataonretro[nElements];
   }
   // Wrapper around operator delete
   static void delete_Tfdirbydataonretro(void *p) {
      delete ((::Tfdirbydataonretro*)p);
   }
   static void deleteArray_Tfdirbydataonretro(void *p) {
      delete [] ((::Tfdirbydataonretro*)p);
   }
   static void destruct_Tfdirbydataonretro(void *p) {
      typedef ::Tfdirbydataonretro current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Tfdirbydataonretro

//______________________________________________________________________________
void Tlikelihood::Streamer(TBuffer &R__b)
{
   // Stream an object of class Tlikelihood.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Tlikelihood::Class(),this);
   } else {
      R__b.WriteClassBuffer(Tlikelihood::Class(),this);
   }
}

//______________________________________________________________________________
void Tlikelihood::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Tlikelihood.
      TClass *R__cl = ::Tlikelihood::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "info", &info);
      R__insp.InspectMember(info, "info.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "data", &data);
      R__insp.InspectMember(data, "data.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fdirnoretro", &fdirnoretro);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*afuncnoretro", &afuncnoretro);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fdironretro", &fdironretro);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*afunconretro", &afunconretro);
      Tfunction::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Tlikelihood(void *p) {
      delete ((::Tlikelihood*)p);
   }
   static void deleteArray_Tlikelihood(void *p) {
      delete [] ((::Tlikelihood*)p);
   }
   static void destruct_Tlikelihood(void *p) {
      typedef ::Tlikelihood current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Tlikelihood

//______________________________________________________________________________
void Tlikelihoodnoretro::Streamer(TBuffer &R__b)
{
   // Stream an object of class Tlikelihoodnoretro.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Tlikelihoodnoretro::Class(),this);
   } else {
      R__b.WriteClassBuffer(Tlikelihoodnoretro::Class(),this);
   }
}

//______________________________________________________________________________
void Tlikelihoodnoretro::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Tlikelihoodnoretro.
      TClass *R__cl = ::Tlikelihoodnoretro::IsA();
      if (R__cl || R__insp.IsA()) { }
      Tlikelihood::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Tlikelihoodnoretro(void *p) {
      return  p ? new(p) ::Tlikelihoodnoretro : new ::Tlikelihoodnoretro;
   }
   static void *newArray_Tlikelihoodnoretro(Long_t nElements, void *p) {
      return p ? new(p) ::Tlikelihoodnoretro[nElements] : new ::Tlikelihoodnoretro[nElements];
   }
   // Wrapper around operator delete
   static void delete_Tlikelihoodnoretro(void *p) {
      delete ((::Tlikelihoodnoretro*)p);
   }
   static void deleteArray_Tlikelihoodnoretro(void *p) {
      delete [] ((::Tlikelihoodnoretro*)p);
   }
   static void destruct_Tlikelihoodnoretro(void *p) {
      typedef ::Tlikelihoodnoretro current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Tlikelihoodnoretro

//______________________________________________________________________________
void Tlikelihoodonretro::Streamer(TBuffer &R__b)
{
   // Stream an object of class Tlikelihoodonretro.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Tlikelihoodonretro::Class(),this);
   } else {
      R__b.WriteClassBuffer(Tlikelihoodonretro::Class(),this);
   }
}

//______________________________________________________________________________
void Tlikelihoodonretro::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Tlikelihoodonretro.
      TClass *R__cl = ::Tlikelihoodonretro::IsA();
      if (R__cl || R__insp.IsA()) { }
      Tlikelihood::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Tlikelihoodonretro(void *p) {
      return  p ? new(p) ::Tlikelihoodonretro : new ::Tlikelihoodonretro;
   }
   static void *newArray_Tlikelihoodonretro(Long_t nElements, void *p) {
      return p ? new(p) ::Tlikelihoodonretro[nElements] : new ::Tlikelihoodonretro[nElements];
   }
   // Wrapper around operator delete
   static void delete_Tlikelihoodonretro(void *p) {
      delete ((::Tlikelihoodonretro*)p);
   }
   static void deleteArray_Tlikelihoodonretro(void *p) {
      delete [] ((::Tlikelihoodonretro*)p);
   }
   static void destruct_Tlikelihoodonretro(void *p) {
      typedef ::Tlikelihoodonretro current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Tlikelihoodonretro

//______________________________________________________________________________
void Tlikelihoodsum::Streamer(TBuffer &R__b)
{
   // Stream an object of class Tlikelihoodsum.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Tlikelihoodsum::Class(),this);
   } else {
      R__b.WriteClassBuffer(Tlikelihoodsum::Class(),this);
   }
}

//______________________________________________________________________________
void Tlikelihoodsum::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Tlikelihoodsum.
      TClass *R__cl = ::Tlikelihoodsum::IsA();
      if (R__cl || R__insp.IsA()) { }
      Tlikelihood::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Tlikelihoodsum(void *p) {
      return  p ? new(p) ::Tlikelihoodsum : new ::Tlikelihoodsum;
   }
   static void *newArray_Tlikelihoodsum(Long_t nElements, void *p) {
      return p ? new(p) ::Tlikelihoodsum[nElements] : new ::Tlikelihoodsum[nElements];
   }
   // Wrapper around operator delete
   static void delete_Tlikelihoodsum(void *p) {
      delete ((::Tlikelihoodsum*)p);
   }
   static void deleteArray_Tlikelihoodsum(void *p) {
      delete [] ((::Tlikelihoodsum*)p);
   }
   static void destruct_Tlikelihoodsum(void *p) {
      typedef ::Tlikelihoodsum current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Tlikelihoodsum

//______________________________________________________________________________
void Ttheta_dir_i::Streamer(TBuffer &R__b)
{
   // Stream an object of class Ttheta_dir_i.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Ttheta_dir_i::Class(),this);
   } else {
      R__b.WriteClassBuffer(Ttheta_dir_i::Class(),this);
   }
}

//______________________________________________________________________________
void Ttheta_dir_i::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Ttheta_dir_i.
      TClass *R__cl = ::Ttheta_dir_i::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "info", &info);
      R__insp.InspectMember(info, "info.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "data", &data);
      R__insp.InspectMember(data, "data.");
      Tfunction::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Ttheta_dir_i(void *p) {
      return  p ? new(p) ::Ttheta_dir_i : new ::Ttheta_dir_i;
   }
   static void *newArray_Ttheta_dir_i(Long_t nElements, void *p) {
      return p ? new(p) ::Ttheta_dir_i[nElements] : new ::Ttheta_dir_i[nElements];
   }
   // Wrapper around operator delete
   static void delete_Ttheta_dir_i(void *p) {
      delete ((::Ttheta_dir_i*)p);
   }
   static void deleteArray_Ttheta_dir_i(void *p) {
      delete [] ((::Ttheta_dir_i*)p);
   }
   static void destruct_Ttheta_dir_i(void *p) {
      typedef ::Ttheta_dir_i current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Ttheta_dir_i

//______________________________________________________________________________
void Ttheta_i_func::Streamer(TBuffer &R__b)
{
   // Stream an object of class Ttheta_i_func.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Ttheta_i_func::Class(),this);
   } else {
      R__b.WriteClassBuffer(Ttheta_i_func::Class(),this);
   }
}

//______________________________________________________________________________
void Ttheta_i_func::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Ttheta_i_func.
      TClass *R__cl = ::Ttheta_i_func::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "info", &info);
      R__insp.InspectMember(info, "info.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "data", &data);
      R__insp.InspectMember(data, "data.");
      Tfunction::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Ttheta_i_func(void *p) {
      return  p ? new(p) ::Ttheta_i_func : new ::Ttheta_i_func;
   }
   static void *newArray_Ttheta_i_func(Long_t nElements, void *p) {
      return p ? new(p) ::Ttheta_i_func[nElements] : new ::Ttheta_i_func[nElements];
   }
   // Wrapper around operator delete
   static void delete_Ttheta_i_func(void *p) {
      delete ((::Ttheta_i_func*)p);
   }
   static void deleteArray_Ttheta_i_func(void *p) {
      delete [] ((::Ttheta_i_func*)p);
   }
   static void destruct_Ttheta_i_func(void *p) {
      typedef ::Ttheta_i_func current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Ttheta_i_func

//______________________________________________________________________________
void Ttof::Streamer(TBuffer &R__b)
{
   // Stream an object of class Ttof.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Ttof::Class(),this);
   } else {
      R__b.WriteClassBuffer(Ttof::Class(),this);
   }
}

//______________________________________________________________________________
void Ttof::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Ttof.
      TClass *R__cl = ::Ttof::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "info", &info);
      R__insp.InspectMember(info, "info.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "data", &data);
      R__insp.InspectMember(data, "data.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dfunc", &dfunc);
      Tfunction::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Ttof(void *p) {
      return  p ? new(p) ::Ttof : new ::Ttof;
   }
   static void *newArray_Ttof(Long_t nElements, void *p) {
      return p ? new(p) ::Ttof[nElements] : new ::Ttof[nElements];
   }
   // Wrapper around operator delete
   static void delete_Ttof(void *p) {
      delete ((::Ttof*)p);
   }
   static void deleteArray_Ttof(void *p) {
      delete [] ((::Ttof*)p);
   }
   static void destruct_Ttof(void *p) {
      typedef ::Ttof current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Ttof

//______________________________________________________________________________
void OneDataParameters::Streamer(TBuffer &R__b)
{
   // Stream an object of class OneDataParameters.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(OneDataParameters::Class(),this);
   } else {
      R__b.WriteClassBuffer(OneDataParameters::Class(),this);
   }
}

//______________________________________________________________________________
void OneDataParameters::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class OneDataParameters.
      TClass *R__cl = ::OneDataParameters::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detector", &detector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particle", &particle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "postype", &postype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fixedPosition", &fixedPosition);
      R__insp.InspectMember(fixedPosition, "fixedPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uniformPositionmin", &uniformPositionmin);
      R__insp.InspectMember(uniformPositionmin, "uniformPositionmin.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uniformPositionmax", &uniformPositionmax);
      R__insp.InspectMember(uniformPositionmax, "uniformPositionmax.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dirtype", &dirtype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fixedcostheta", &fixedcostheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fixedphi", &fixedphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uniformcosthetamin", &uniformcosthetamin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uniformcosthetamax", &uniformcosthetamax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uniformphimin", &uniformphimin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uniformphimax", &uniformphimax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "etype", &etype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fixedenergy", &fixedenergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uniformenergymin", &uniformenergymin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uniformenergymax", &uniformenergymax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inforeflectivity", &inforeflectivity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trapezoidreflectivity", &trapezoidreflectivity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trapezoidanglemin", &trapezoidanglemin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trapezoidanglemax", &trapezoidanglemax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "reflectspread", &reflectspread);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "triggerthereshold", &triggerthereshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "triggerwindow", &triggerwindow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "triggerprewindow", &triggerprewindow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "triggerpostwindow", &triggerpostwindow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "darkrate", &darkrate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adjustfornoise", &adjustfornoise);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventnumber", &eventnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vp", (void*)&vp);
      R__insp.InspectMember("vector<std::pair<std::string,std::string> >", (void*)&vp, "vp.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "file", (void*)&file);
      R__insp.InspectMember("string", (void*)&file, "file.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_OneDataParameters(void *p) {
      return  p ? new(p) ::OneDataParameters : new ::OneDataParameters;
   }
   static void *newArray_OneDataParameters(Long_t nElements, void *p) {
      return p ? new(p) ::OneDataParameters[nElements] : new ::OneDataParameters[nElements];
   }
   // Wrapper around operator delete
   static void delete_OneDataParameters(void *p) {
      delete ((::OneDataParameters*)p);
   }
   static void deleteArray_OneDataParameters(void *p) {
      delete [] ((::OneDataParameters*)p);
   }
   static void destruct_OneDataParameters(void *p) {
      typedef ::OneDataParameters current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::OneDataParameters

//______________________________________________________________________________
void OneGoodnessParameters::Streamer(TBuffer &R__b)
{
   // Stream an object of class OneGoodnessParameters.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(OneGoodnessParameters::Class(),this);
   } else {
      R__b.WriteClassBuffer(OneGoodnessParameters::Class(),this);
   }
}

//______________________________________________________________________________
void OneGoodnessParameters::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class OneGoodnessParameters.
      TClass *R__cl = ::OneGoodnessParameters::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detector", &detector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particle", &particle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "postype", &postype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fixedPosition", &fixedPosition);
      R__insp.InspectMember(fixedPosition, "fixedPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uniformPositionmin", &uniformPositionmin);
      R__insp.InspectMember(uniformPositionmin, "uniformPositionmin.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uniformPositionmax", &uniformPositionmax);
      R__insp.InspectMember(uniformPositionmax, "uniformPositionmax.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dirtype", &dirtype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fixedcostheta", &fixedcostheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fixedphi", &fixedphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uniformcosthetamin", &uniformcosthetamin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uniformcosthetamax", &uniformcosthetamax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uniformphimin", &uniformphimin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uniformphimax", &uniformphimax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "etype", &etype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fixedenergy", &fixedenergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uniformenergymin", &uniformenergymin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uniformenergymax", &uniformenergymax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inforeflectivity", &inforeflectivity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trapezoidreflectivity", &trapezoidreflectivity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trapezoidanglemin", &trapezoidanglemin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trapezoidanglemax", &trapezoidanglemax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "reflectspread", &reflectspread);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "triggerthereshold", &triggerthereshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "triggerwindow", &triggerwindow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "triggerprewindow", &triggerprewindow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "triggerpostwindow", &triggerpostwindow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "darkrate", &darkrate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adjustfornoise", &adjustfornoise);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventnumber", &eventnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigma", &sigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "goodnesstype", &goodnesstype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "goodnesssearchrangetype", &goodnesssearchrangetype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "searchrange", &searchrange);
      R__insp.InspectMember(searchrange, "searchrange.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "goodnesseventnumber", &goodnesseventnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vp", (void*)&vp);
      R__insp.InspectMember("vector<std::pair<std::string,std::string> >", (void*)&vp, "vp.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "file", (void*)&file);
      R__insp.InspectMember("string", (void*)&file, "file.", false);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_OneGoodnessParameters(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::OneGoodnessParameters : new ::OneGoodnessParameters;
   }
   static void *newArray_OneGoodnessParameters(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::OneGoodnessParameters[nElements] : new ::OneGoodnessParameters[nElements];
   }
   // Wrapper around operator delete
   static void delete_OneGoodnessParameters(void *p) {
      delete ((::OneGoodnessParameters*)p);
   }
   static void deleteArray_OneGoodnessParameters(void *p) {
      delete [] ((::OneGoodnessParameters*)p);
   }
   static void destruct_OneGoodnessParameters(void *p) {
      typedef ::OneGoodnessParameters current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::OneGoodnessParameters

//______________________________________________________________________________
void OneLikelihoodParameters::Streamer(TBuffer &R__b)
{
   // Stream an object of class OneLikelihoodParameters.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(OneLikelihoodParameters::Class(),this);
   } else {
      R__b.WriteClassBuffer(OneLikelihoodParameters::Class(),this);
   }
}

//______________________________________________________________________________
void OneLikelihoodParameters::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class OneLikelihoodParameters.
      TClass *R__cl = ::OneLikelihoodParameters::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detector", &detector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particle", &particle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "postype", &postype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fixedPosition", &fixedPosition);
      R__insp.InspectMember(fixedPosition, "fixedPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uniformPositionmin", &uniformPositionmin);
      R__insp.InspectMember(uniformPositionmin, "uniformPositionmin.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uniformPositionmax", &uniformPositionmax);
      R__insp.InspectMember(uniformPositionmax, "uniformPositionmax.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dirtype", &dirtype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fixedcostheta", &fixedcostheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fixedphi", &fixedphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uniformcosthetamin", &uniformcosthetamin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uniformcosthetamax", &uniformcosthetamax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uniformphimin", &uniformphimin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uniformphimax", &uniformphimax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "etype", &etype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fixedenergy", &fixedenergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uniformenergymin", &uniformenergymin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uniformenergymax", &uniformenergymax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inforeflectivity", &inforeflectivity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trapezoidreflectivity", &trapezoidreflectivity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trapezoidanglemin", &trapezoidanglemin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trapezoidanglemax", &trapezoidanglemax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "reflectspread", &reflectspread);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "triggerthereshold", &triggerthereshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "triggerwindow", &triggerwindow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "triggerprewindow", &triggerprewindow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "triggerpostwindow", &triggerpostwindow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "darkrate", &darkrate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adjustfornoise", &adjustfornoise);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventnumber", &eventnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigma", &sigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "goodnesstype", &goodnesstype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "goodnesssearchrangetype", &goodnesssearchrangetype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "searchrange", &searchrange);
      R__insp.InspectMember(searchrange, "searchrange.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "goodnesseventnumber", &goodnesseventnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "likelihoodtype", &likelihoodtype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "noretrofdirection", &noretrofdirection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "onretrofdirection", &onretrofdirection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "noretroafunction", &noretroafunction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "onretroafunction", &onretroafunction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "likelihoodsearchrangetype", &likelihoodsearchrangetype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "costhetanum", &costhetanum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phinum", &phinum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timewindownoretro", &timewindownoretro);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timewindowonretro", &timewindowonretro);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vp", (void*)&vp);
      R__insp.InspectMember("vector<std::pair<std::string,std::string> >", (void*)&vp, "vp.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "file", (void*)&file);
      R__insp.InspectMember("string", (void*)&file, "file.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_OneLikelihoodParameters(void *p) {
      return  p ? new(p) ::OneLikelihoodParameters : new ::OneLikelihoodParameters;
   }
   static void *newArray_OneLikelihoodParameters(Long_t nElements, void *p) {
      return p ? new(p) ::OneLikelihoodParameters[nElements] : new ::OneLikelihoodParameters[nElements];
   }
   // Wrapper around operator delete
   static void delete_OneLikelihoodParameters(void *p) {
      delete ((::OneLikelihoodParameters*)p);
   }
   static void deleteArray_OneLikelihoodParameters(void *p) {
      delete [] ((::OneLikelihoodParameters*)p);
   }
   static void destruct_OneLikelihoodParameters(void *p) {
      typedef ::OneLikelihoodParameters current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::OneLikelihoodParameters

//______________________________________________________________________________
void OneGoodnessMinimizeParameters::Streamer(TBuffer &R__b)
{
   // Stream an object of class OneGoodnessMinimizeParameters.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(OneGoodnessMinimizeParameters::Class(),this);
   } else {
      R__b.WriteClassBuffer(OneGoodnessMinimizeParameters::Class(),this);
   }
}

//______________________________________________________________________________
void OneGoodnessMinimizeParameters::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class OneGoodnessMinimizeParameters.
      TClass *R__cl = ::OneGoodnessMinimizeParameters::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detector", &detector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particle", &particle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "postype", &postype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fixedPosition", &fixedPosition);
      R__insp.InspectMember(fixedPosition, "fixedPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uniformPositionmin", &uniformPositionmin);
      R__insp.InspectMember(uniformPositionmin, "uniformPositionmin.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uniformPositionmax", &uniformPositionmax);
      R__insp.InspectMember(uniformPositionmax, "uniformPositionmax.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dirtype", &dirtype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fixedcostheta", &fixedcostheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fixedphi", &fixedphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uniformcosthetamin", &uniformcosthetamin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uniformcosthetamax", &uniformcosthetamax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uniformphimin", &uniformphimin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uniformphimax", &uniformphimax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "etype", &etype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fixedenergy", &fixedenergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uniformenergymin", &uniformenergymin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uniformenergymax", &uniformenergymax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inforeflectivity", &inforeflectivity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trapezoidreflectivity", &trapezoidreflectivity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trapezoidanglemin", &trapezoidanglemin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trapezoidanglemax", &trapezoidanglemax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "reflectspread", &reflectspread);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "triggerthereshold", &triggerthereshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "triggerwindow", &triggerwindow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "triggerprewindow", &triggerprewindow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "triggerpostwindow", &triggerpostwindow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "darkrate", &darkrate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adjustfornoise", &adjustfornoise);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventnumber", &eventnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigma", &sigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "goodnesstype", &goodnesstype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "goodnesssearchrangetype", &goodnesssearchrangetype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "searchrange", &searchrange);
      R__insp.InspectMember(searchrange, "searchrange.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "goodnesseventnumber", &goodnesseventnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "likelihoodtype", &likelihoodtype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "noretrofdirection", &noretrofdirection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "onretrofdirection", &onretrofdirection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "noretroafunction", &noretroafunction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "onretroafunction", &onretroafunction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "likelihoodsearchrangetype", &likelihoodsearchrangetype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "costhetanum", &costhetanum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phinum", &phinum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timewindownoretro", &timewindownoretro);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timewindowonretro", &timewindowonretro);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "goodnessminimizetype", &goodnessminimizetype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxfunctioncalls", &maxfunctioncalls);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxiterations", &maxiterations);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tolerance", &tolerance);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stepx", &stepx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stepy", &stepy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stepz", &stepz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stept", &stept);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stepcostheta", &stepcostheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stepphi", &stepphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "goodnessminimizesigma", &goodnessminimizesigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigmaangle", &sigmaangle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "onretrocorrectiontype", &onretrocorrectiontype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "onretrocorrection", &onretrocorrection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vp", (void*)&vp);
      R__insp.InspectMember("vector<std::pair<std::string,std::string> >", (void*)&vp, "vp.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "file", (void*)&file);
      R__insp.InspectMember("string", (void*)&file, "file.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_OneGoodnessMinimizeParameters(void *p) {
      return  p ? new(p) ::OneGoodnessMinimizeParameters : new ::OneGoodnessMinimizeParameters;
   }
   static void *newArray_OneGoodnessMinimizeParameters(Long_t nElements, void *p) {
      return p ? new(p) ::OneGoodnessMinimizeParameters[nElements] : new ::OneGoodnessMinimizeParameters[nElements];
   }
   // Wrapper around operator delete
   static void delete_OneGoodnessMinimizeParameters(void *p) {
      delete ((::OneGoodnessMinimizeParameters*)p);
   }
   static void deleteArray_OneGoodnessMinimizeParameters(void *p) {
      delete [] ((::OneGoodnessMinimizeParameters*)p);
   }
   static void destruct_OneGoodnessMinimizeParameters(void *p) {
      typedef ::OneGoodnessMinimizeParameters current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::OneGoodnessMinimizeParameters

//______________________________________________________________________________
void TOption_minimize::Streamer(TBuffer &R__b)
{
   // Stream an object of class TOption_minimize.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TOption_minimize::Class(),this);
   } else {
      R__b.WriteClassBuffer(TOption_minimize::Class(),this);
   }
}

//______________________________________________________________________________
void TOption_minimize::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TOption_minimize.
      TClass *R__cl = ::TOption_minimize::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stepvec", &stepvec);
      R__insp.InspectMember(stepvec, "stepvec.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stepcostheta", &stepcostheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stepphi", &stepphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lowervec", &lowervec);
      R__insp.InspectMember(lowervec, "lowervec.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lowercostheta", &lowercostheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lowerphi", &lowerphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uppervec", &uppervec);
      R__insp.InspectMember(uppervec, "uppervec.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uppercostheta", &uppercostheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "upperphi", &upperphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxfunctioncalls", &maxfunctioncalls);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxiterations", &maxiterations);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tolerance", &tolerance);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TOption_minimize(void *p) {
      return  p ? new(p) ::TOption_minimize : new ::TOption_minimize;
   }
   static void *newArray_TOption_minimize(Long_t nElements, void *p) {
      return p ? new(p) ::TOption_minimize[nElements] : new ::TOption_minimize[nElements];
   }
   // Wrapper around operator delete
   static void delete_TOption_minimize(void *p) {
      delete ((::TOption_minimize*)p);
   }
   static void deleteArray_TOption_minimize(void *p) {
      delete [] ((::TOption_minimize*)p);
   }
   static void destruct_TOption_minimize(void *p) {
      typedef ::TOption_minimize current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TOption_minimize

//______________________________________________________________________________
void BiasError::Streamer(TBuffer &R__b)
{
   // Stream an object of class BiasError.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(BiasError::Class(),this);
   } else {
      R__b.WriteClassBuffer(BiasError::Class(),this);
   }
}

//______________________________________________________________________________
void BiasError::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BiasError.
      TClass *R__cl = ::BiasError::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bias", &bias);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "biaserror", &biaserror);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "error", &error);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "errorerror", &errorerror);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_BiasError(void *p) {
      return  p ? new(p) ::BiasError : new ::BiasError;
   }
   static void *newArray_BiasError(Long_t nElements, void *p) {
      return p ? new(p) ::BiasError[nElements] : new ::BiasError[nElements];
   }
   // Wrapper around operator delete
   static void delete_BiasError(void *p) {
      delete ((::BiasError*)p);
   }
   static void deleteArray_BiasError(void *p) {
      delete [] ((::BiasError*)p);
   }
   static void destruct_BiasError(void *p) {
      typedef ::BiasError current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::BiasError

namespace ROOTDict {
   void vectorlEOneDataParametersgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEOneDataParametersgR_Dictionary();
   static void *new_vectorlEOneDataParametersgR(void *p = 0);
   static void *newArray_vectorlEOneDataParametersgR(Long_t size, void *p);
   static void delete_vectorlEOneDataParametersgR(void *p);
   static void deleteArray_vectorlEOneDataParametersgR(void *p);
   static void destruct_vectorlEOneDataParametersgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<OneDataParameters>*)
   {
      vector<OneDataParameters> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<OneDataParameters>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<OneDataParameters>", -2, "prec_stl/vector", 49,
                  typeid(vector<OneDataParameters>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEOneDataParametersgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<OneDataParameters>) );
      instance.SetNew(&new_vectorlEOneDataParametersgR);
      instance.SetNewArray(&newArray_vectorlEOneDataParametersgR);
      instance.SetDelete(&delete_vectorlEOneDataParametersgR);
      instance.SetDeleteArray(&deleteArray_vectorlEOneDataParametersgR);
      instance.SetDestructor(&destruct_vectorlEOneDataParametersgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<OneDataParameters> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<OneDataParameters>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEOneDataParametersgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<OneDataParameters>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEOneDataParametersgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<OneDataParameters> : new vector<OneDataParameters>;
   }
   static void *newArray_vectorlEOneDataParametersgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<OneDataParameters>[nElements] : new vector<OneDataParameters>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEOneDataParametersgR(void *p) {
      delete ((vector<OneDataParameters>*)p);
   }
   static void deleteArray_vectorlEOneDataParametersgR(void *p) {
      delete [] ((vector<OneDataParameters>*)p);
   }
   static void destruct_vectorlEOneDataParametersgR(void *p) {
      typedef vector<OneDataParameters> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<OneDataParameters>

namespace ROOTDict {
   void vectorlEOneGoodnessMinimizeParametersgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEOneGoodnessMinimizeParametersgR_Dictionary();
   static void *new_vectorlEOneGoodnessMinimizeParametersgR(void *p = 0);
   static void *newArray_vectorlEOneGoodnessMinimizeParametersgR(Long_t size, void *p);
   static void delete_vectorlEOneGoodnessMinimizeParametersgR(void *p);
   static void deleteArray_vectorlEOneGoodnessMinimizeParametersgR(void *p);
   static void destruct_vectorlEOneGoodnessMinimizeParametersgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<OneGoodnessMinimizeParameters>*)
   {
      vector<OneGoodnessMinimizeParameters> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<OneGoodnessMinimizeParameters>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<OneGoodnessMinimizeParameters>", -2, "prec_stl/vector", 49,
                  typeid(vector<OneGoodnessMinimizeParameters>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEOneGoodnessMinimizeParametersgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<OneGoodnessMinimizeParameters>) );
      instance.SetNew(&new_vectorlEOneGoodnessMinimizeParametersgR);
      instance.SetNewArray(&newArray_vectorlEOneGoodnessMinimizeParametersgR);
      instance.SetDelete(&delete_vectorlEOneGoodnessMinimizeParametersgR);
      instance.SetDeleteArray(&deleteArray_vectorlEOneGoodnessMinimizeParametersgR);
      instance.SetDestructor(&destruct_vectorlEOneGoodnessMinimizeParametersgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<OneGoodnessMinimizeParameters> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<OneGoodnessMinimizeParameters>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEOneGoodnessMinimizeParametersgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<OneGoodnessMinimizeParameters>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEOneGoodnessMinimizeParametersgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<OneGoodnessMinimizeParameters> : new vector<OneGoodnessMinimizeParameters>;
   }
   static void *newArray_vectorlEOneGoodnessMinimizeParametersgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<OneGoodnessMinimizeParameters>[nElements] : new vector<OneGoodnessMinimizeParameters>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEOneGoodnessMinimizeParametersgR(void *p) {
      delete ((vector<OneGoodnessMinimizeParameters>*)p);
   }
   static void deleteArray_vectorlEOneGoodnessMinimizeParametersgR(void *p) {
      delete [] ((vector<OneGoodnessMinimizeParameters>*)p);
   }
   static void destruct_vectorlEOneGoodnessMinimizeParametersgR(void *p) {
      typedef vector<OneGoodnessMinimizeParameters> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<OneGoodnessMinimizeParameters>

namespace ROOTDict {
   void vectorlEOneGoodnessParametersgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEOneGoodnessParametersgR_Dictionary();
   static void *new_vectorlEOneGoodnessParametersgR(void *p = 0);
   static void *newArray_vectorlEOneGoodnessParametersgR(Long_t size, void *p);
   static void delete_vectorlEOneGoodnessParametersgR(void *p);
   static void deleteArray_vectorlEOneGoodnessParametersgR(void *p);
   static void destruct_vectorlEOneGoodnessParametersgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<OneGoodnessParameters>*)
   {
      vector<OneGoodnessParameters> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<OneGoodnessParameters>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<OneGoodnessParameters>", -2, "prec_stl/vector", 49,
                  typeid(vector<OneGoodnessParameters>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEOneGoodnessParametersgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<OneGoodnessParameters>) );
      instance.SetNew(&new_vectorlEOneGoodnessParametersgR);
      instance.SetNewArray(&newArray_vectorlEOneGoodnessParametersgR);
      instance.SetDelete(&delete_vectorlEOneGoodnessParametersgR);
      instance.SetDeleteArray(&deleteArray_vectorlEOneGoodnessParametersgR);
      instance.SetDestructor(&destruct_vectorlEOneGoodnessParametersgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<OneGoodnessParameters> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<OneGoodnessParameters>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEOneGoodnessParametersgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<OneGoodnessParameters>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEOneGoodnessParametersgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<OneGoodnessParameters> : new vector<OneGoodnessParameters>;
   }
   static void *newArray_vectorlEOneGoodnessParametersgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<OneGoodnessParameters>[nElements] : new vector<OneGoodnessParameters>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEOneGoodnessParametersgR(void *p) {
      delete ((vector<OneGoodnessParameters>*)p);
   }
   static void deleteArray_vectorlEOneGoodnessParametersgR(void *p) {
      delete [] ((vector<OneGoodnessParameters>*)p);
   }
   static void destruct_vectorlEOneGoodnessParametersgR(void *p) {
      typedef vector<OneGoodnessParameters> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<OneGoodnessParameters>

namespace ROOTDict {
   void vectorlEOneLikelihoodParametersgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEOneLikelihoodParametersgR_Dictionary();
   static void *new_vectorlEOneLikelihoodParametersgR(void *p = 0);
   static void *newArray_vectorlEOneLikelihoodParametersgR(Long_t size, void *p);
   static void delete_vectorlEOneLikelihoodParametersgR(void *p);
   static void deleteArray_vectorlEOneLikelihoodParametersgR(void *p);
   static void destruct_vectorlEOneLikelihoodParametersgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<OneLikelihoodParameters>*)
   {
      vector<OneLikelihoodParameters> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<OneLikelihoodParameters>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<OneLikelihoodParameters>", -2, "prec_stl/vector", 49,
                  typeid(vector<OneLikelihoodParameters>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEOneLikelihoodParametersgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<OneLikelihoodParameters>) );
      instance.SetNew(&new_vectorlEOneLikelihoodParametersgR);
      instance.SetNewArray(&newArray_vectorlEOneLikelihoodParametersgR);
      instance.SetDelete(&delete_vectorlEOneLikelihoodParametersgR);
      instance.SetDeleteArray(&deleteArray_vectorlEOneLikelihoodParametersgR);
      instance.SetDestructor(&destruct_vectorlEOneLikelihoodParametersgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<OneLikelihoodParameters> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<OneLikelihoodParameters>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEOneLikelihoodParametersgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<OneLikelihoodParameters>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEOneLikelihoodParametersgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<OneLikelihoodParameters> : new vector<OneLikelihoodParameters>;
   }
   static void *newArray_vectorlEOneLikelihoodParametersgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<OneLikelihoodParameters>[nElements] : new vector<OneLikelihoodParameters>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEOneLikelihoodParametersgR(void *p) {
      delete ((vector<OneLikelihoodParameters>*)p);
   }
   static void deleteArray_vectorlEOneLikelihoodParametersgR(void *p) {
      delete [] ((vector<OneLikelihoodParameters>*)p);
   }
   static void destruct_vectorlEOneLikelihoodParametersgR(void *p) {
      typedef vector<OneLikelihoodParameters> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<OneLikelihoodParameters>

namespace ROOTDict {
   void vectorlEOneRunAnalizeManagermUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEOneRunAnalizeManagermUgR_Dictionary();
   static void *new_vectorlEOneRunAnalizeManagermUgR(void *p = 0);
   static void *newArray_vectorlEOneRunAnalizeManagermUgR(Long_t size, void *p);
   static void delete_vectorlEOneRunAnalizeManagermUgR(void *p);
   static void deleteArray_vectorlEOneRunAnalizeManagermUgR(void *p);
   static void destruct_vectorlEOneRunAnalizeManagermUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<OneRunAnalizeManager*>*)
   {
      vector<OneRunAnalizeManager*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<OneRunAnalizeManager*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<OneRunAnalizeManager*>", -2, "prec_stl/vector", 49,
                  typeid(vector<OneRunAnalizeManager*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEOneRunAnalizeManagermUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<OneRunAnalizeManager*>) );
      instance.SetNew(&new_vectorlEOneRunAnalizeManagermUgR);
      instance.SetNewArray(&newArray_vectorlEOneRunAnalizeManagermUgR);
      instance.SetDelete(&delete_vectorlEOneRunAnalizeManagermUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEOneRunAnalizeManagermUgR);
      instance.SetDestructor(&destruct_vectorlEOneRunAnalizeManagermUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<OneRunAnalizeManager*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<OneRunAnalizeManager*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEOneRunAnalizeManagermUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<OneRunAnalizeManager*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEOneRunAnalizeManagermUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<OneRunAnalizeManager*> : new vector<OneRunAnalizeManager*>;
   }
   static void *newArray_vectorlEOneRunAnalizeManagermUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<OneRunAnalizeManager*>[nElements] : new vector<OneRunAnalizeManager*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEOneRunAnalizeManagermUgR(void *p) {
      delete ((vector<OneRunAnalizeManager*>*)p);
   }
   static void deleteArray_vectorlEOneRunAnalizeManagermUgR(void *p) {
      delete [] ((vector<OneRunAnalizeManager*>*)p);
   }
   static void destruct_vectorlEOneRunAnalizeManagermUgR(void *p) {
      typedef vector<OneRunAnalizeManager*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<OneRunAnalizeManager*>

namespace ROOTDict {
   void vectorlETReconstructhitgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETReconstructhitgR_Dictionary();
   static void *new_vectorlETReconstructhitgR(void *p = 0);
   static void *newArray_vectorlETReconstructhitgR(Long_t size, void *p);
   static void delete_vectorlETReconstructhitgR(void *p);
   static void deleteArray_vectorlETReconstructhitgR(void *p);
   static void destruct_vectorlETReconstructhitgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TReconstructhit>*)
   {
      vector<TReconstructhit> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TReconstructhit>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TReconstructhit>", -2, "prec_stl/vector", 49,
                  typeid(vector<TReconstructhit>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETReconstructhitgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TReconstructhit>) );
      instance.SetNew(&new_vectorlETReconstructhitgR);
      instance.SetNewArray(&newArray_vectorlETReconstructhitgR);
      instance.SetDelete(&delete_vectorlETReconstructhitgR);
      instance.SetDeleteArray(&deleteArray_vectorlETReconstructhitgR);
      instance.SetDestructor(&destruct_vectorlETReconstructhitgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TReconstructhit> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TReconstructhit>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETReconstructhitgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TReconstructhit>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETReconstructhitgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TReconstructhit> : new vector<TReconstructhit>;
   }
   static void *newArray_vectorlETReconstructhitgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TReconstructhit>[nElements] : new vector<TReconstructhit>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETReconstructhitgR(void *p) {
      delete ((vector<TReconstructhit>*)p);
   }
   static void deleteArray_vectorlETReconstructhitgR(void *p) {
      delete [] ((vector<TReconstructhit>*)p);
   }
   static void destruct_vectorlETReconstructhitgR(void *p) {
      typedef vector<TReconstructhit> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TReconstructhit>

namespace ROOTDict {
   void vectorlEThitinfogR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEThitinfogR_Dictionary();
   static void *new_vectorlEThitinfogR(void *p = 0);
   static void *newArray_vectorlEThitinfogR(Long_t size, void *p);
   static void delete_vectorlEThitinfogR(void *p);
   static void deleteArray_vectorlEThitinfogR(void *p);
   static void destruct_vectorlEThitinfogR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<Thitinfo>*)
   {
      vector<Thitinfo> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Thitinfo>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Thitinfo>", -2, "prec_stl/vector", 49,
                  typeid(vector<Thitinfo>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEThitinfogR_Dictionary, isa_proxy, 0,
                  sizeof(vector<Thitinfo>) );
      instance.SetNew(&new_vectorlEThitinfogR);
      instance.SetNewArray(&newArray_vectorlEThitinfogR);
      instance.SetDelete(&delete_vectorlEThitinfogR);
      instance.SetDeleteArray(&deleteArray_vectorlEThitinfogR);
      instance.SetDestructor(&destruct_vectorlEThitinfogR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<Thitinfo> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Thitinfo>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEThitinfogR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<Thitinfo>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEThitinfogR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Thitinfo> : new vector<Thitinfo>;
   }
   static void *newArray_vectorlEThitinfogR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Thitinfo>[nElements] : new vector<Thitinfo>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEThitinfogR(void *p) {
      delete ((vector<Thitinfo>*)p);
   }
   static void deleteArray_vectorlEThitinfogR(void *p) {
      delete [] ((vector<Thitinfo>*)p);
   }
   static void destruct_vectorlEThitinfogR(void *p) {
      typedef vector<Thitinfo> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<Thitinfo>

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

namespace ROOTDict {
   void vectorlEpairlEstringcOstringgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEpairlEstringcOstringgRsPgR_Dictionary();
   static void *new_vectorlEpairlEstringcOstringgRsPgR(void *p = 0);
   static void *newArray_vectorlEpairlEstringcOstringgRsPgR(Long_t size, void *p);
   static void delete_vectorlEpairlEstringcOstringgRsPgR(void *p);
   static void deleteArray_vectorlEpairlEstringcOstringgRsPgR(void *p);
   static void destruct_vectorlEpairlEstringcOstringgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<pair<string,string> >*)
   {
      vector<pair<string,string> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<pair<string,string> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<pair<string,string> >", -2, "prec_stl/vector", 49,
                  typeid(vector<pair<string,string> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEpairlEstringcOstringgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<pair<string,string> >) );
      instance.SetNew(&new_vectorlEpairlEstringcOstringgRsPgR);
      instance.SetNewArray(&newArray_vectorlEpairlEstringcOstringgRsPgR);
      instance.SetDelete(&delete_vectorlEpairlEstringcOstringgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEpairlEstringcOstringgRsPgR);
      instance.SetDestructor(&destruct_vectorlEpairlEstringcOstringgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<pair<string,string> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<pair<string,string> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEpairlEstringcOstringgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<pair<string,string> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEpairlEstringcOstringgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<string,string> > : new vector<pair<string,string> >;
   }
   static void *newArray_vectorlEpairlEstringcOstringgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<string,string> >[nElements] : new vector<pair<string,string> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEpairlEstringcOstringgRsPgR(void *p) {
      delete ((vector<pair<string,string> >*)p);
   }
   static void deleteArray_vectorlEpairlEstringcOstringgRsPgR(void *p) {
      delete [] ((vector<pair<string,string> >*)p);
   }
   static void destruct_vectorlEpairlEstringcOstringgRsPgR(void *p) {
      typedef vector<pair<string,string> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<pair<string,string> >

/********************************************************
* /home/fujigami/retro/lowe/source/macro/src/macroRootDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablemacroRootDict();

extern "C" void G__set_cpp_environmentmacroRootDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/eventdisplay.hh");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/goodness_data.hh");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/likelihood_direction_data.hh");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/AnalizedData.hh");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/CSearch_range.hh");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/C4Number.hh");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/FileList.hh");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/efficiency.hh");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/HistByTree.hh");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/HistError.hh");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/HistBias.hh");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/OneRunAnalizeManager.hh");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/AngleRange.hh");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/Thitinfo.hh");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/TReconstructdata.hh");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/Tfunction.hh");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/Tafunction.hh");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/Tdistance_function.hh");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/Tfdirection.hh");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/Tlikelihood.hh");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/Ttheta_dir_i.hh");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/Ttheta_i_func.hh");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/Ttof.hh");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/OneRunDataAnalizeManager.hh");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/OneRunGoodnessAnalizeManager.hh");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/OneRunLikelihoodAnalizeManager.hh");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/OneRunGoodnessMinimizeAnalizeManager.hh");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/OneDataParameters.hh");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/MyString.hh");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/MultiRunAnalizeManager.hh");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/OneGoodnessParameters.hh");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/OneLikelihoodParameters.hh");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/OneGoodnessMinimizeParameters.hh");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/TOption_minimize.hh");
  G__add_compiledheader("/home/fujigami/retro/lowe/source/macro/include/BiasError.hh");
  G__cpp_reset_tagtablemacroRootDict();
}
#include <new>
extern "C" int G__cpp_dllrevmacroRootDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* Eventdisplay */
static int G__macroRootDict_193_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Eventdisplay* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Eventdisplay[n];
     } else {
       p = new((void*) gvp) Eventdisplay[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Eventdisplay;
     } else {
       p = new((void*) gvp) Eventdisplay;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_Eventdisplay));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_193_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Eventdisplay* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Eventdisplay((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) Eventdisplay((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_Eventdisplay));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_193_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Eventdisplay* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Eventdisplay(
(const char*) G__int(libp->para[0]), (char*) G__int(libp->para[1])
, (char*) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) Eventdisplay(
(const char*) G__int(libp->para[0]), (char*) G__int(libp->para[1])
, (char*) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Eventdisplay(
(const char*) G__int(libp->para[0]), (char*) G__int(libp->para[1])
, (char*) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) Eventdisplay(
(const char*) G__int(libp->para[0]), (char*) G__int(libp->para[1])
, (char*) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Eventdisplay(
(const char*) G__int(libp->para[0]), (char*) G__int(libp->para[1])
, (char*) G__int(libp->para[2]), (int) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) Eventdisplay(
(const char*) G__int(libp->para[0]), (char*) G__int(libp->para[1])
, (char*) G__int(libp->para[2]), (int) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Eventdisplay(
(const char*) G__int(libp->para[0]), (char*) G__int(libp->para[1])
, (char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) Eventdisplay(
(const char*) G__int(libp->para[0]), (char*) G__int(libp->para[1])
, (char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_Eventdisplay));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_193_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((Eventdisplay*) G__getstructoffset())->Set((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((Eventdisplay*) G__getstructoffset())->Set((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((Eventdisplay*) G__getstructoffset())->Set((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((Eventdisplay*) G__getstructoffset())->Set((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_193_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Eventdisplay*) G__getstructoffset())->Drawall((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Eventdisplay*) G__getstructoffset())->Drawall();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_193_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Eventdisplay*) G__getstructoffset())->Drawcharge((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Eventdisplay*) G__getstructoffset())->Drawcharge();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_193_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Eventdisplay*) G__getstructoffset())->Drawtime((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Eventdisplay*) G__getstructoffset())->Drawtime();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_193_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Eventdisplay*) G__getstructoffset())->Drawhit((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Eventdisplay*) G__getstructoffset())->Drawhit();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_193_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Eventdisplay*) G__getstructoffset())->Gethall());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_193_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Eventdisplay*) G__getstructoffset())->Gethcharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_193_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Eventdisplay*) G__getstructoffset())->Gethtime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_193_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Eventdisplay*) G__getstructoffset())->Gethhit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_193_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 103, (long) ((Eventdisplay*) G__getstructoffset())->Add((Eventdisplay*) G__int(libp->para[0]), (Eventdisplay*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((Eventdisplay*) G__getstructoffset())->Add((Eventdisplay*) G__int(libp->para[0]), (Eventdisplay*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((Eventdisplay*) G__getstructoffset())->Add((Eventdisplay*) G__int(libp->para[0]), (Eventdisplay*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_193_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((Eventdisplay*) G__getstructoffset())->Add((Eventdisplay*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((Eventdisplay*) G__getstructoffset())->Add((Eventdisplay*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_193_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Eventdisplay*) G__getstructoffset())->GetWCradius());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_193_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Eventdisplay*) G__getstructoffset())->GetWClength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_193_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 85, (long) Eventdisplay::Sum((const char*) G__int(libp->para[0]), (char*) G__int(libp->para[1])
, (char*) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) Eventdisplay::Sum((const char*) G__int(libp->para[0]), (char*) G__int(libp->para[1])
, (char*) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) Eventdisplay::Sum((const char*) G__int(libp->para[0]), (char*) G__int(libp->para[1])
, (char*) G__int(libp->para[2]), (int) G__int(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_193_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Eventdisplay::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_193_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Eventdisplay::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_193_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Eventdisplay::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_193_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Eventdisplay::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_193_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Eventdisplay*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_193_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Eventdisplay::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_193_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Eventdisplay::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_193_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Eventdisplay::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_193_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Eventdisplay::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_193_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Eventdisplay* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Eventdisplay(*(Eventdisplay*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_Eventdisplay));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Eventdisplay G__TEventdisplay;
static int G__macroRootDict_193_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Eventdisplay*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Eventdisplay*) (soff+(sizeof(Eventdisplay)*i)))->~G__TEventdisplay();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Eventdisplay*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Eventdisplay*) (soff))->~G__TEventdisplay();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* goodness_data */
static int G__macroRootDict_232_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   goodness_data* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new goodness_data(*((TLorentzVector*) G__int(libp->para[0])), (double) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) goodness_data(*((TLorentzVector*) G__int(libp->para[0])), (double) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new goodness_data(*((TLorentzVector*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) goodness_data(*((TLorentzVector*) G__int(libp->para[0])));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_goodness_data));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_232_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   goodness_data* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new goodness_data[n];
     } else {
       p = new((void*) gvp) goodness_data[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new goodness_data;
     } else {
       p = new((void*) gvp) goodness_data;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_goodness_data));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_232_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const goodness_data*) G__getstructoffset())->GetT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_232_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const goodness_data*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_232_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const goodness_data*) G__getstructoffset())->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_232_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const goodness_data*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_232_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const goodness_data*) G__getstructoffset())->GetPosition();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_232_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const goodness_data*) G__getstructoffset())->Get4Vector();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_232_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const goodness_data*) G__getstructoffset())->Getgoodness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_232_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((goodness_data*) G__getstructoffset())->Set4Vector(*((TLorentzVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_232_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((goodness_data*) G__getstructoffset())->Setgoodness((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_232_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((goodness_data*) G__getstructoffset())->Setdata(*((goodness_data*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_232_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) goodness_data::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_232_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) goodness_data::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_232_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) goodness_data::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_232_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      goodness_data::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_232_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((goodness_data*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_232_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) goodness_data::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_232_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) goodness_data::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_232_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) goodness_data::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_232_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) goodness_data::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_232_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   goodness_data* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new goodness_data(*(goodness_data*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_goodness_data));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef goodness_data G__Tgoodness_data;
static int G__macroRootDict_232_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (goodness_data*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((goodness_data*) (soff+(sizeof(goodness_data)*i)))->~G__Tgoodness_data();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (goodness_data*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((goodness_data*) (soff))->~G__Tgoodness_data();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_232_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   goodness_data* dest = (goodness_data*) G__getstructoffset();
   *dest = *(goodness_data*) libp->para[0].ref;
   const goodness_data& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* l_dir_data */
static int G__macroRootDict_233_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   l_dir_data* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new l_dir_data[n];
     } else {
       p = new((void*) gvp) l_dir_data[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new l_dir_data;
     } else {
       p = new((void*) gvp) l_dir_data;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_l_dir_data));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_233_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   l_dir_data* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new l_dir_data(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
   } else {
     p = new((void*) gvp) l_dir_data(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_l_dir_data));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_233_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((l_dir_data*) G__getstructoffset())->Setdata(*((l_dir_data*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_233_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((l_dir_data*) G__getstructoffset())->SetL((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_233_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((l_dir_data*) G__getstructoffset())->SetCosTheta((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_233_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((l_dir_data*) G__getstructoffset())->SetPhi((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_233_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((l_dir_data*) G__getstructoffset())->GetL());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_233_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((l_dir_data*) G__getstructoffset())->GetCosTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_233_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((l_dir_data*) G__getstructoffset())->GetPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_233_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) l_dir_data::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_233_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) l_dir_data::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_233_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) l_dir_data::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_233_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      l_dir_data::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_233_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((l_dir_data*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_233_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) l_dir_data::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_233_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) l_dir_data::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_233_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) l_dir_data::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_233_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) l_dir_data::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_233_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   l_dir_data* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new l_dir_data(*(l_dir_data*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_l_dir_data));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef l_dir_data G__Tl_dir_data;
static int G__macroRootDict_233_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (l_dir_data*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((l_dir_data*) (soff+(sizeof(l_dir_data)*i)))->~G__Tl_dir_data();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (l_dir_data*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((l_dir_data*) (soff))->~G__Tl_dir_data();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_233_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   l_dir_data* dest = (l_dir_data*) G__getstructoffset();
   *dest = *(l_dir_data*) libp->para[0].ref;
   const l_dir_data& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AnalizedData */
static int G__macroRootDict_234_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AnalizedData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AnalizedData[n];
     } else {
       p = new((void*) gvp) AnalizedData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AnalizedData;
     } else {
       p = new((void*) gvp) AnalizedData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_AnalizedData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_234_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AnalizedData* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new AnalizedData(
*((goodness_data*) G__int(libp->para[0])), *((l_dir_data*) G__int(libp->para[1]))
, *((goodness_data*) G__int(libp->para[2])), *((l_dir_data*) G__int(libp->para[3])));
   } else {
     p = new((void*) gvp) AnalizedData(
*((goodness_data*) G__int(libp->para[0])), *((l_dir_data*) G__int(libp->para[1]))
, *((goodness_data*) G__int(libp->para[2])), *((l_dir_data*) G__int(libp->para[3])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_AnalizedData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_234_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         goodness_data* pobj;
         goodness_data xobj = ((AnalizedData*) G__getstructoffset())->Getgdatagridsearch();
         pobj = new goodness_data(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_234_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         l_dir_data* pobj;
         l_dir_data xobj = ((AnalizedData*) G__getstructoffset())->Getldatagridsearch();
         pobj = new l_dir_data(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_234_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         goodness_data* pobj;
         goodness_data xobj = ((AnalizedData*) G__getstructoffset())->Getdataminimized();
         pobj = new goodness_data(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_234_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         l_dir_data* pobj;
         l_dir_data xobj = ((AnalizedData*) G__getstructoffset())->Getldataminimized();
         pobj = new l_dir_data(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_234_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AnalizedData*) G__getstructoffset())->Setgdatagridsearch(*((goodness_data*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_234_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AnalizedData*) G__getstructoffset())->Setldatagridsearch(*((l_dir_data*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_234_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AnalizedData*) G__getstructoffset())->Setgdataminimized(*((goodness_data*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_234_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AnalizedData*) G__getstructoffset())->Setldataminimized(*((l_dir_data*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_234_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AnalizedData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_234_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AnalizedData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_234_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AnalizedData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_234_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AnalizedData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_234_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AnalizedData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_234_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AnalizedData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_234_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AnalizedData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_234_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AnalizedData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_234_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AnalizedData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_234_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   AnalizedData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new AnalizedData(*(AnalizedData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_AnalizedData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AnalizedData G__TAnalizedData;
static int G__macroRootDict_234_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AnalizedData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AnalizedData*) (soff+(sizeof(AnalizedData)*i)))->~G__TAnalizedData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AnalizedData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AnalizedData*) (soff))->~G__TAnalizedData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_234_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AnalizedData* dest = (AnalizedData*) G__getstructoffset();
   *dest = *(AnalizedData*) libp->para[0].ref;
   const AnalizedData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* C4Number */
static int G__macroRootDict_235_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   C4Number* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new C4Number(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) C4Number(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_C4Number));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_235_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   C4Number* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new C4Number[n];
     } else {
       p = new((void*) gvp) C4Number[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new C4Number;
     } else {
       p = new((void*) gvp) C4Number;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_C4Number));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_235_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const C4Number*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_235_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const C4Number*) G__getstructoffset())->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_235_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const C4Number*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_235_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const C4Number*) G__getstructoffset())->GetT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_235_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((C4Number*) G__getstructoffset())->SetX((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_235_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((C4Number*) G__getstructoffset())->SetY((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_235_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((C4Number*) G__getstructoffset())->SetZ((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_235_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((C4Number*) G__getstructoffset())->SetT((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_235_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((C4Number*) G__getstructoffset())->Printnumber();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_235_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const C4Number* pobj;
         const C4Number xobj = ((const C4Number*) G__getstructoffset())->operator+(*(C4Number*) libp->para[0].ref);
         pobj = new C4Number(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_235_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const C4Number* pobj;
         const C4Number xobj = ((const C4Number*) G__getstructoffset())->operator-(*(C4Number*) libp->para[0].ref);
         pobj = new C4Number(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_235_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const C4Number*) G__getstructoffset())->operator==(*(C4Number*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_235_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const C4Number*) G__getstructoffset())->operator!=(*(C4Number*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_235_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const C4Number*) G__getstructoffset())->operator*(*(C4Number*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_235_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) C4Number::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_235_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) C4Number::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_235_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) C4Number::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_235_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      C4Number::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_235_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((C4Number*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_235_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) C4Number::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_235_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) C4Number::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_235_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) C4Number::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_235_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) C4Number::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_235_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   C4Number* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new C4Number(*(C4Number*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_C4Number));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef C4Number G__TC4Number;
static int G__macroRootDict_235_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (C4Number*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((C4Number*) (soff+(sizeof(C4Number)*i)))->~G__TC4Number();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (C4Number*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((C4Number*) (soff))->~G__TC4Number();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_235_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   C4Number* dest = (C4Number*) G__getstructoffset();
   *dest = *(C4Number*) libp->para[0].ref;
   const C4Number& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CSearch_range */
static int G__macroRootDict_236_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CSearch_range* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new CSearch_range(
*((TLorentzVector*) G__int(libp->para[0])), *((TLorentzVector*) G__int(libp->para[1]))
, *((C4Number*) G__int(libp->para[2])));
   } else {
     p = new((void*) gvp) CSearch_range(
*((TLorentzVector*) G__int(libp->para[0])), *((TLorentzVector*) G__int(libp->para[1]))
, *((C4Number*) G__int(libp->para[2])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_CSearch_range));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CSearch_range* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CSearch_range[n];
     } else {
       p = new((void*) gvp) CSearch_range[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CSearch_range;
     } else {
       p = new((void*) gvp) CSearch_range;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_CSearch_range));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CSearch_range*) G__getstructoffset())->Setrange(*((CSearch_range*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const CSearch_range*) G__getstructoffset())->GetN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CSearch_range*) G__getstructoffset())->GetXmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CSearch_range*) G__getstructoffset())->GetYmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CSearch_range*) G__getstructoffset())->GetZmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CSearch_range*) G__getstructoffset())->GetTmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CSearch_range*) G__getstructoffset())->GetXwidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CSearch_range*) G__getstructoffset())->GetYwidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CSearch_range*) G__getstructoffset())->GetZwidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CSearch_range*) G__getstructoffset())->GetTwidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const CSearch_range*) G__getstructoffset())->GetXNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const CSearch_range*) G__getstructoffset())->GetYNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const CSearch_range*) G__getstructoffset())->GetZNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const CSearch_range*) G__getstructoffset())->GetTNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CSearch_range*) G__getstructoffset())->GetXmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CSearch_range*) G__getstructoffset())->GetYmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CSearch_range*) G__getstructoffset())->GetZmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CSearch_range*) G__getstructoffset())->GetTmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CSearch_range*) G__getstructoffset())->GetXcentral());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CSearch_range*) G__getstructoffset())->GetYcentral());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CSearch_range*) G__getstructoffset())->GetZcentral());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CSearch_range*) G__getstructoffset())->GetTcentral());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CSearch_range*) G__getstructoffset())->GetXallwidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CSearch_range*) G__getstructoffset())->GetYallwidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CSearch_range*) G__getstructoffset())->GetZallwidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CSearch_range*) G__getstructoffset())->GetTallwidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CSearch_range*) G__getstructoffset())->Setmin(*((TLorentzVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CSearch_range*) G__getstructoffset())->Setwidth(*((TLorentzVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CSearch_range*) G__getstructoffset())->SetNum(*((C4Number*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((CSearch_range*) G__getstructoffset())->Getmin();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((CSearch_range*) G__getstructoffset())->Getwidth();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         C4Number* pobj;
         C4Number xobj = ((CSearch_range*) G__getstructoffset())->GetNum();
         pobj = new C4Number(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CSearch_range*) G__getstructoffset())->Printrange();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CSearch_range::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CSearch_range::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CSearch_range::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CSearch_range::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CSearch_range*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CSearch_range::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CSearch_range::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CSearch_range::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_236_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CSearch_range::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_236_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CSearch_range* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CSearch_range(*(CSearch_range*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_CSearch_range));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CSearch_range G__TCSearch_range;
static int G__macroRootDict_236_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CSearch_range*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CSearch_range*) (soff+(sizeof(CSearch_range)*i)))->~G__TCSearch_range();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CSearch_range*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CSearch_range*) (soff))->~G__TCSearch_range();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_236_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CSearch_range* dest = (CSearch_range*) G__getstructoffset();
   *dest = *(CSearch_range*) libp->para[0].ref;
   const CSearch_range& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FileList */
static int G__macroRootDict_245_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FileList* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FileList[n];
     } else {
       p = new((void*) gvp) FileList[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FileList;
     } else {
       p = new((void*) gvp) FileList;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_FileList));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_245_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FileList* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FileList((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) FileList((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FileList((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) FileList((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_FileList));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_245_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FileList::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_245_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FileList::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_245_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FileList::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_245_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FileList::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_245_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FileList*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_245_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FileList::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_245_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FileList::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_245_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FileList::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_245_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FileList::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FileList G__TFileList;
static int G__macroRootDict_245_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FileList*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FileList*) (soff+(sizeof(FileList)*i)))->~G__TFileList();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FileList*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FileList*) (soff))->~G__TFileList();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* efficiency */
static int G__macroRootDict_246_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   efficiency* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new efficiency[n];
     } else {
       p = new((void*) gvp) efficiency[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new efficiency;
     } else {
       p = new((void*) gvp) efficiency;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_efficiency));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_246_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   efficiency* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new efficiency(
(FileList*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]));
   } else {
     p = new((void*) gvp) efficiency(
(FileList*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_efficiency));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_246_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((efficiency*) G__getstructoffset())->SetEfError();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_246_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) efficiency::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_246_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) efficiency::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_246_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) efficiency::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_246_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      efficiency::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_246_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((efficiency*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_246_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) efficiency::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_246_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) efficiency::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_246_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) efficiency::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_246_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) efficiency::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef efficiency G__Tefficiency;
static int G__macroRootDict_246_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (efficiency*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((efficiency*) (soff+(sizeof(efficiency)*i)))->~G__Tefficiency();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (efficiency*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((efficiency*) (soff))->~G__Tefficiency();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TH1DByTree */
static int G__macroRootDict_324_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TH1DByTree* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TH1DByTree[n];
     } else {
       p = new((void*) gvp) TH1DByTree[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TH1DByTree;
     } else {
       p = new((void*) gvp) TH1DByTree;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_TH1DByTree));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_324_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TH1DByTree* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TH1DByTree(
(TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (TH1DByTree::Axis) G__int(libp->para[8]));
     } else {
       p = new((void*) gvp) TH1DByTree(
(TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (TH1DByTree::Axis) G__int(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TH1DByTree(
(TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7]));
     } else {
       p = new((void*) gvp) TH1DByTree(
(TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_TH1DByTree));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_324_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TH1DByTree* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TH1DByTree(
(TTree*) G__int(libp->para[0]), (goodness_data*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (TH1DByTree::Axis) G__int(libp->para[8]));
   } else {
     p = new((void*) gvp) TH1DByTree(
(TTree*) G__int(libp->para[0]), (goodness_data*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (TH1DByTree::Axis) G__int(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_TH1DByTree));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_324_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TH1DByTree*) G__getstructoffset())->FitByGaussian((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TH1DByTree*) G__getstructoffset())->FitByGaussian((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TH1DByTree*) G__getstructoffset())->FitByGaussian((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_324_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TH1DByTree*) G__getstructoffset())->DrawGaussian((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TH1DByTree*) G__getstructoffset())->DrawGaussian();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_324_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TH1DByTree*) G__getstructoffset())->GetGaussianBias());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_324_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TH1DByTree*) G__getstructoffset())->GetGaussianError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_324_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TH1DByTree*) G__getstructoffset())->GetGaussianBiasError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_324_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TH1DByTree*) G__getstructoffset())->GetGaussianErrorError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_324_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TH1DByTree::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_324_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TH1DByTree::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_324_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TH1DByTree::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_324_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TH1DByTree::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_324_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TH1DByTree*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_324_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TH1DByTree::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_324_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TH1DByTree::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_324_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TH1DByTree::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_324_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TH1DByTree::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_324_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TH1DByTree* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TH1DByTree(*(TH1DByTree*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_TH1DByTree));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TH1DByTree G__TTH1DByTree;
static int G__macroRootDict_324_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TH1DByTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TH1DByTree*) (soff+(sizeof(TH1DByTree)*i)))->~G__TTH1DByTree();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TH1DByTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TH1DByTree*) (soff))->~G__TTH1DByTree();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HistError */
static int G__macroRootDict_326_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HistError* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HistError[n];
     } else {
       p = new((void*) gvp) HistError[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HistError;
     } else {
       p = new((void*) gvp) HistError;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_HistError));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_326_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HistError* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 12
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HistError(
(FileList*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (int) G__int(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11]));
   } else {
     p = new((void*) gvp) HistError(
(FileList*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (int) G__int(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_HistError));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_326_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HistError::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_326_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HistError::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_326_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HistError::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_326_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HistError::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_326_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HistError*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_326_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HistError::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_326_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HistError::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_326_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HistError::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_326_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HistError::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HistError G__THistError;
static int G__macroRootDict_326_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HistError*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HistError*) (soff+(sizeof(HistError)*i)))->~G__THistError();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HistError*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HistError*) (soff))->~G__THistError();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HistBias */
static int G__macroRootDict_327_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HistBias* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HistBias[n];
     } else {
       p = new((void*) gvp) HistBias[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HistBias;
     } else {
       p = new((void*) gvp) HistBias;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_HistBias));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_327_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HistBias* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 12
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HistBias(
(FileList*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (int) G__int(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11]));
   } else {
     p = new((void*) gvp) HistBias(
(FileList*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (int) G__int(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_HistBias));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_327_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HistBias::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_327_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HistBias::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_327_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HistBias::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_327_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HistBias::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_327_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HistBias*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_327_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HistBias::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_327_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HistBias::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_327_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HistBias::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_327_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HistBias::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HistBias G__THistBias;
static int G__macroRootDict_327_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HistBias*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HistBias*) (soff+(sizeof(HistBias)*i)))->~G__THistBias();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HistBias*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HistBias*) (soff))->~G__THistBias();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AngleRange */
static int G__macroRootDict_383_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AngleRange* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AngleRange[n];
     } else {
       p = new((void*) gvp) AngleRange[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AngleRange;
     } else {
       p = new((void*) gvp) AngleRange;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_AngleRange));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_383_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AngleRange*) G__getstructoffset())->Setrange(*((AngleRange*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_383_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AngleRange*) G__getstructoffset())->GetCosthetamin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_383_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AngleRange*) G__getstructoffset())->SetCosthetamin((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_383_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AngleRange*) G__getstructoffset())->GetCosthetawidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_383_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AngleRange*) G__getstructoffset())->SetCosthetawidth((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_383_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const AngleRange*) G__getstructoffset())->GetCosthetaNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_383_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AngleRange*) G__getstructoffset())->SetCosthetaNum((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_383_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AngleRange*) G__getstructoffset())->GetPhimin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_383_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AngleRange*) G__getstructoffset())->SetPhimin((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_383_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AngleRange*) G__getstructoffset())->GetPhiwidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_383_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AngleRange*) G__getstructoffset())->SetPhiwidth((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_383_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const AngleRange*) G__getstructoffset())->GetPhiNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_383_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AngleRange*) G__getstructoffset())->SetPhiNum((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_383_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AngleRange*) G__getstructoffset())->GetCosthetamax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_383_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AngleRange*) G__getstructoffset())->GetPhimax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_383_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AngleRange::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_383_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AngleRange::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_383_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AngleRange::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_383_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AngleRange::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_383_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AngleRange*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_383_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AngleRange::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_383_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AngleRange::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_383_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AngleRange::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_383_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AngleRange::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_383_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   AngleRange* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new AngleRange(*(AngleRange*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_AngleRange));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AngleRange G__TAngleRange;
static int G__macroRootDict_383_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AngleRange*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AngleRange*) (soff+(sizeof(AngleRange)*i)))->~G__TAngleRange();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AngleRange*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AngleRange*) (soff))->~G__TAngleRange();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_383_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AngleRange* dest = (AngleRange*) G__getstructoffset();
   *dest = *(AngleRange*) libp->para[0].ref;
   const AngleRange& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TReconstructhit */
static int G__macroRootDict_384_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TReconstructhit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TReconstructhit[n];
     } else {
       p = new((void*) gvp) TReconstructhit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TReconstructhit;
     } else {
       p = new((void*) gvp) TReconstructhit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_TReconstructhit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_384_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TReconstructhit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TReconstructhit((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TReconstructhit((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_TReconstructhit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_384_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TReconstructhit*) G__getstructoffset())->Gethittype());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_384_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TReconstructhit*) G__getstructoffset())->Setonegoodnessnoretro((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_384_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TReconstructhit*) G__getstructoffset())->Getonegoodnessnoretro());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_384_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TReconstructhit*) G__getstructoffset())->Setonegoodnessonretro((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_384_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TReconstructhit*) G__getstructoffset())->Getonegoodnessonretro());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_384_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TReconstructhit*) G__getstructoffset())->Setonelikelihoodnoretro((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_384_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TReconstructhit*) G__getstructoffset())->Getonelikelihoodnoretro());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_384_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TReconstructhit*) G__getstructoffset())->Setonelikelihoodonretro((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_384_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TReconstructhit*) G__getstructoffset())->Getonelikelihoodonretro());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_384_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TReconstructhit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_384_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TReconstructhit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_384_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TReconstructhit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_384_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TReconstructhit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_384_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TReconstructhit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_384_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TReconstructhit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_384_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TReconstructhit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_384_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TReconstructhit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_384_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TReconstructhit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_384_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TReconstructhit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TReconstructhit(*(TReconstructhit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_TReconstructhit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TReconstructhit G__TTReconstructhit;
static int G__macroRootDict_384_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TReconstructhit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TReconstructhit*) (soff+(sizeof(TReconstructhit)*i)))->~G__TTReconstructhit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TReconstructhit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TReconstructhit*) (soff))->~G__TTReconstructhit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_384_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TReconstructhit* dest = (TReconstructhit*) G__getstructoffset();
   *dest = *(TReconstructhit*) libp->para[0].ref;
   const TReconstructhit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TReconstructdata */
static int G__macroRootDict_385_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TReconstructdata* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TReconstructdata[n];
     } else {
       p = new((void*) gvp) TReconstructdata[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TReconstructdata;
     } else {
       p = new((void*) gvp) TReconstructdata;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_TReconstructdata));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_385_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((TReconstructdata*) G__getstructoffset())->Get4Vector();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_385_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TReconstructdata*) G__getstructoffset())->Set4Vector(*((TLorentzVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_385_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((TReconstructdata*) G__getstructoffset())->Get3Position();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_385_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((TReconstructdata*) G__getstructoffset())->Getdirection();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_385_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TReconstructdata*) G__getstructoffset())->Setdirection(*((TVector3*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_385_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TReconstructdata*) G__getstructoffset())->Getenergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_385_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TReconstructdata*) G__getstructoffset())->Setgoodness((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_385_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TReconstructdata*) G__getstructoffset())->Getgoodness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_385_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TReconstructdata*) G__getstructoffset())->Setlikelihood((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_385_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TReconstructdata*) G__getstructoffset())->Getlikelihood());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_385_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TReconstructdata*) G__getstructoffset())->Setlikelihoodonretro((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_385_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TReconstructdata*) G__getstructoffset())->Getlikelihoodonretro());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_385_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TReconstructdata*) G__getstructoffset())->Setlikelihoodnoretro((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_385_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TReconstructdata*) G__getstructoffset())->Getlikelihoodnoretro());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_385_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TReconstructdata*) G__getstructoffset())->addhit((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TReconstructdata*) G__getstructoffset())->addhit();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_385_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TReconstructhit& obj = ((TReconstructdata*) G__getstructoffset())->Gethit((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_385_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TReconstructhit>& obj = ((TReconstructdata*) G__getstructoffset())->Getvhit();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_385_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TReconstructdata*) G__getstructoffset())->Setdata(*((TReconstructdata*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_385_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TReconstructdata::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_385_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TReconstructdata::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_385_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TReconstructdata::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_385_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TReconstructdata::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_385_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TReconstructdata*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_385_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TReconstructdata::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_385_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TReconstructdata::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_385_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TReconstructdata::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_385_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TReconstructdata::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_385_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TReconstructdata* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TReconstructdata(*(TReconstructdata*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_TReconstructdata));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TReconstructdata G__TTReconstructdata;
static int G__macroRootDict_385_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TReconstructdata*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TReconstructdata*) (soff+(sizeof(TReconstructdata)*i)))->~G__TTReconstructdata();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TReconstructdata*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TReconstructdata*) (soff))->~G__TTReconstructdata();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_385_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TReconstructdata* dest = (TReconstructdata*) G__getstructoffset();
   *dest = *(TReconstructdata*) libp->para[0].ref;
   const TReconstructdata& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TReconstructdata_minimize */
static int G__macroRootDict_390_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TReconstructdata_minimize* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TReconstructdata_minimize[n];
     } else {
       p = new((void*) gvp) TReconstructdata_minimize[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TReconstructdata_minimize;
     } else {
       p = new((void*) gvp) TReconstructdata_minimize;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_TReconstructdata_minimize));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_390_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TReconstructdata_minimize*) G__getstructoffset())->Setstatus((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_390_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TReconstructdata_minimize*) G__getstructoffset())->Getstatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_390_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TReconstructdata_minimize*) G__getstructoffset())->Setncalls((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_390_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TReconstructdata_minimize*) G__getstructoffset())->Getncalls());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_390_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TReconstructdata_minimize*) G__getstructoffset())->SetnIterations((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_390_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TReconstructdata_minimize*) G__getstructoffset())->GetnIterations());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_390_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TReconstructdata_minimize*) G__getstructoffset())->Setdata(*((TReconstructdata_minimize*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_390_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TReconstructdata_minimize::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_390_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TReconstructdata_minimize::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_390_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TReconstructdata_minimize::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_390_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TReconstructdata_minimize::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_390_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TReconstructdata_minimize*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_390_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TReconstructdata_minimize::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_390_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TReconstructdata_minimize::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_390_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TReconstructdata_minimize::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_390_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TReconstructdata_minimize::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_390_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TReconstructdata_minimize* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TReconstructdata_minimize(*(TReconstructdata_minimize*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_TReconstructdata_minimize));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TReconstructdata_minimize G__TTReconstructdata_minimize;
static int G__macroRootDict_390_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TReconstructdata_minimize*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TReconstructdata_minimize*) (soff+(sizeof(TReconstructdata_minimize)*i)))->~G__TTReconstructdata_minimize();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TReconstructdata_minimize*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TReconstructdata_minimize*) (soff))->~G__TTReconstructdata_minimize();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_390_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TReconstructdata_minimize* dest = (TReconstructdata_minimize*) G__getstructoffset();
   *dest = *(TReconstructdata_minimize*) libp->para[0].ref;
   const TReconstructdata_minimize& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Thitinfo */
static int G__macroRootDict_391_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Thitinfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Thitinfo[n];
     } else {
       p = new((void*) gvp) Thitinfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Thitinfo;
     } else {
       p = new((void*) gvp) Thitinfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_Thitinfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_391_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Thitinfo*) G__getstructoffset())->Sethit((WCSimRootCherenkovDigiHit*) G__int(libp->para[0]), (WCSimRootGeom*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_391_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Thitinfo*) G__getstructoffset())->GetPosition((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_391_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((Thitinfo*) G__getstructoffset())->Get3Position();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_391_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Thitinfo*) G__getstructoffset())->GetOrientation((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_391_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((Thitinfo*) G__getstructoffset())->Get3Orientation();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_391_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Thitinfo*) G__getstructoffset())->HitTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_391_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Thitinfo*) G__getstructoffset())->GetWCradius());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_391_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Thitinfo*) G__getstructoffset())->GetWClength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_391_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Thitinfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_391_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Thitinfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_391_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Thitinfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_391_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Thitinfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_391_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Thitinfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_391_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Thitinfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_391_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Thitinfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_391_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Thitinfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_391_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Thitinfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_391_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Thitinfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Thitinfo(*(Thitinfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_Thitinfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Thitinfo G__TThitinfo;
static int G__macroRootDict_391_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Thitinfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Thitinfo*) (soff+(sizeof(Thitinfo)*i)))->~G__TThitinfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Thitinfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Thitinfo*) (soff))->~G__TThitinfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_391_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Thitinfo* dest = (Thitinfo*) G__getstructoffset();
   *dest = *(Thitinfo*) libp->para[0].ref;
   const Thitinfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* OneDataParameters */
static int G__macroRootDict_392_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   OneDataParameters* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new OneDataParameters[n];
     } else {
       p = new((void*) gvp) OneDataParameters[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new OneDataParameters;
     } else {
       p = new((void*) gvp) OneDataParameters;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameters));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_392_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneDataParameters*) G__getstructoffset())->Setpair(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_392_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneDataParameters*) G__getstructoffset())->SetValue();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_392_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneDataParameters*) G__getstructoffset())->PrintValue();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_392_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((OneDataParameters*) G__getstructoffset())->isEqual(*((OneDataParameters*) G__int(libp->para[0])), *((vector<std::string>*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_392_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((OneDataParameters*) G__getstructoffset())->Getfile();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_392_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) OneDataParameters::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_392_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) OneDataParameters::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_392_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) OneDataParameters::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_392_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      OneDataParameters::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_392_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneDataParameters*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_392_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) OneDataParameters::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_392_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) OneDataParameters::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_392_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) OneDataParameters::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_392_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) OneDataParameters::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_392_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   OneDataParameters* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new OneDataParameters(*(OneDataParameters*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameters));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef OneDataParameters G__TOneDataParameters;
static int G__macroRootDict_392_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (OneDataParameters*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((OneDataParameters*) (soff+(sizeof(OneDataParameters)*i)))->~G__TOneDataParameters();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (OneDataParameters*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((OneDataParameters*) (soff))->~G__TOneDataParameters();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_392_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   OneDataParameters* dest = (OneDataParameters*) G__getstructoffset();
   *dest = *(OneDataParameters*) libp->para[0].ref;
   const OneDataParameters& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* OneRunDataAnalizeManager */
static int G__macroRootDict_409_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   OneRunDataAnalizeManager* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new OneRunDataAnalizeManager[n];
     } else {
       p = new((void*) gvp) OneRunDataAnalizeManager[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new OneRunDataAnalizeManager;
     } else {
       p = new((void*) gvp) OneRunDataAnalizeManager;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_OneRunDataAnalizeManager));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_409_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   OneRunDataAnalizeManager* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new OneRunDataAnalizeManager((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) OneRunDataAnalizeManager((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_OneRunDataAnalizeManager));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_409_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneRunDataAnalizeManager*) G__getstructoffset())->Setdatafile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_409_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneRunDataAnalizeManager*) G__getstructoffset())->GetEntry((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_409_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((OneRunDataAnalizeManager*) G__getstructoffset())->Getxvtx((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_409_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((OneRunDataAnalizeManager*) G__getstructoffset())->Getyvtx((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_409_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((OneRunDataAnalizeManager*) G__getstructoffset())->Getzvtx((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_409_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((OneRunDataAnalizeManager*) G__getstructoffset())->Getxdir((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_409_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((OneRunDataAnalizeManager*) G__getstructoffset())->Getydir((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_409_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((OneRunDataAnalizeManager*) G__getstructoffset())->Getzdir((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_409_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((OneRunDataAnalizeManager*) G__getstructoffset())->Getdirection((int) G__int(libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_409_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((OneRunDataAnalizeManager*) G__getstructoffset())->GetTriggerTime((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_409_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((OneRunDataAnalizeManager*) G__getstructoffset())->GetEfficiency());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_409_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((OneRunDataAnalizeManager*) G__getstructoffset())->Gethittimeraw((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_409_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((OneRunDataAnalizeManager*) G__getstructoffset())->Gettofnoretrotrue((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_409_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((OneRunDataAnalizeManager*) G__getstructoffset())->Gettofonretrotrue((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_409_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((OneRunDataAnalizeManager*) G__getstructoffset())->Gethittimetrue((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_409_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((OneRunDataAnalizeManager*) G__getstructoffset())->GetDataParameters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_409_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((OneRunDataAnalizeManager*) G__getstructoffset())->Getncherenkovdigihits((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_409_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) OneRunDataAnalizeManager::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_409_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) OneRunDataAnalizeManager::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_409_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) OneRunDataAnalizeManager::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_409_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      OneRunDataAnalizeManager::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_409_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneRunDataAnalizeManager*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_409_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) OneRunDataAnalizeManager::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_409_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) OneRunDataAnalizeManager::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_409_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) OneRunDataAnalizeManager::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_409_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) OneRunDataAnalizeManager::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_409_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   OneRunDataAnalizeManager* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new OneRunDataAnalizeManager(*(OneRunDataAnalizeManager*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_OneRunDataAnalizeManager));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef OneRunDataAnalizeManager G__TOneRunDataAnalizeManager;
static int G__macroRootDict_409_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (OneRunDataAnalizeManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((OneRunDataAnalizeManager*) (soff+(sizeof(OneRunDataAnalizeManager)*i)))->~G__TOneRunDataAnalizeManager();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (OneRunDataAnalizeManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((OneRunDataAnalizeManager*) (soff))->~G__TOneRunDataAnalizeManager();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_409_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   OneRunDataAnalizeManager* dest = (OneRunDataAnalizeManager*) G__getstructoffset();
   *dest = *(OneRunDataAnalizeManager*) libp->para[0].ref;
   const OneRunDataAnalizeManager& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* OneGoodnessParameters */
static int G__macroRootDict_414_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   OneGoodnessParameters* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new OneGoodnessParameters[n];
     } else {
       p = new((void*) gvp) OneGoodnessParameters[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new OneGoodnessParameters;
     } else {
       p = new((void*) gvp) OneGoodnessParameters;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameters));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_414_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneGoodnessParameters*) G__getstructoffset())->Setpair(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_414_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneGoodnessParameters*) G__getstructoffset())->SetValue();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_414_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneGoodnessParameters*) G__getstructoffset())->PrintValue();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_414_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((OneGoodnessParameters*) G__getstructoffset())->isEqual(*((OneGoodnessParameters*) G__int(libp->para[0])), *((vector<std::string>*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_414_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((OneGoodnessParameters*) G__getstructoffset())->Getfile();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_414_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) OneGoodnessParameters::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_414_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) OneGoodnessParameters::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_414_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) OneGoodnessParameters::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_414_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      OneGoodnessParameters::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_414_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const OneGoodnessParameters*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_414_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneGoodnessParameters*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_414_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneGoodnessParameters*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_414_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneGoodnessParameters*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_414_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) OneGoodnessParameters::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_414_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) OneGoodnessParameters::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_414_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) OneGoodnessParameters::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_414_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) OneGoodnessParameters::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_414_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   OneGoodnessParameters* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new OneGoodnessParameters(*(OneGoodnessParameters*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameters));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef OneGoodnessParameters G__TOneGoodnessParameters;
static int G__macroRootDict_414_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (OneGoodnessParameters*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((OneGoodnessParameters*) (soff+(sizeof(OneGoodnessParameters)*i)))->~G__TOneGoodnessParameters();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (OneGoodnessParameters*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((OneGoodnessParameters*) (soff))->~G__TOneGoodnessParameters();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_414_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   OneGoodnessParameters* dest = (OneGoodnessParameters*) G__getstructoffset();
   *dest = *(OneGoodnessParameters*) libp->para[0].ref;
   const OneGoodnessParameters& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* OneRunGoodnessAnalizeManager */
static int G__macroRootDict_424_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   OneRunGoodnessAnalizeManager* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new OneRunGoodnessAnalizeManager[n];
     } else {
       p = new((void*) gvp) OneRunGoodnessAnalizeManager[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new OneRunGoodnessAnalizeManager;
     } else {
       p = new((void*) gvp) OneRunGoodnessAnalizeManager;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_OneRunGoodnessAnalizeManager));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_424_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   OneRunGoodnessAnalizeManager* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new OneRunGoodnessAnalizeManager((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) OneRunGoodnessAnalizeManager((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_OneRunGoodnessAnalizeManager));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_424_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneRunGoodnessAnalizeManager*) G__getstructoffset())->Setgoodnessfile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_424_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneRunGoodnessAnalizeManager*) G__getstructoffset())->GetEntry((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_424_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((OneRunGoodnessAnalizeManager*) G__getstructoffset())->GetT((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_424_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((OneRunGoodnessAnalizeManager*) G__getstructoffset())->GetX((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_424_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((OneRunGoodnessAnalizeManager*) G__getstructoffset())->GetY((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_424_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((OneRunGoodnessAnalizeManager*) G__getstructoffset())->GetZ((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_424_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((OneRunGoodnessAnalizeManager*) G__getstructoffset())->Getgoodness((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_424_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         CSearch_range* pobj;
         CSearch_range xobj = ((OneRunGoodnessAnalizeManager*) G__getstructoffset())->GetCSearch_range();
         pobj = new CSearch_range(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_424_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((OneRunGoodnessAnalizeManager*) G__getstructoffset())->Getnevent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_424_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((OneRunGoodnessAnalizeManager*) G__getstructoffset())->GetGoodnessParameters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_424_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) OneRunGoodnessAnalizeManager::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_424_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) OneRunGoodnessAnalizeManager::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_424_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) OneRunGoodnessAnalizeManager::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_424_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      OneRunGoodnessAnalizeManager::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_424_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneRunGoodnessAnalizeManager*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_424_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) OneRunGoodnessAnalizeManager::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_424_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) OneRunGoodnessAnalizeManager::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_424_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) OneRunGoodnessAnalizeManager::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_424_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) OneRunGoodnessAnalizeManager::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_424_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   OneRunGoodnessAnalizeManager* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new OneRunGoodnessAnalizeManager(*(OneRunGoodnessAnalizeManager*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_OneRunGoodnessAnalizeManager));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef OneRunGoodnessAnalizeManager G__TOneRunGoodnessAnalizeManager;
static int G__macroRootDict_424_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (OneRunGoodnessAnalizeManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((OneRunGoodnessAnalizeManager*) (soff+(sizeof(OneRunGoodnessAnalizeManager)*i)))->~G__TOneRunGoodnessAnalizeManager();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (OneRunGoodnessAnalizeManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((OneRunGoodnessAnalizeManager*) (soff))->~G__TOneRunGoodnessAnalizeManager();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_424_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   OneRunGoodnessAnalizeManager* dest = (OneRunGoodnessAnalizeManager*) G__getstructoffset();
   *dest = *(OneRunGoodnessAnalizeManager*) libp->para[0].ref;
   const OneRunGoodnessAnalizeManager& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* OneLikelihoodParameters */
static int G__macroRootDict_425_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   OneLikelihoodParameters* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new OneLikelihoodParameters[n];
     } else {
       p = new((void*) gvp) OneLikelihoodParameters[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new OneLikelihoodParameters;
     } else {
       p = new((void*) gvp) OneLikelihoodParameters;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameters));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_425_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneLikelihoodParameters*) G__getstructoffset())->Setpair(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_425_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneLikelihoodParameters*) G__getstructoffset())->SetValue();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_425_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneLikelihoodParameters*) G__getstructoffset())->PrintValue();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_425_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((OneLikelihoodParameters*) G__getstructoffset())->isEqual(*((OneLikelihoodParameters*) G__int(libp->para[0])), *((vector<std::string>*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_425_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((OneLikelihoodParameters*) G__getstructoffset())->Getfile();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_425_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) OneLikelihoodParameters::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_425_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) OneLikelihoodParameters::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_425_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) OneLikelihoodParameters::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_425_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      OneLikelihoodParameters::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_425_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneLikelihoodParameters*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_425_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) OneLikelihoodParameters::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_425_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) OneLikelihoodParameters::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_425_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) OneLikelihoodParameters::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_425_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) OneLikelihoodParameters::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_425_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   OneLikelihoodParameters* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new OneLikelihoodParameters(*(OneLikelihoodParameters*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameters));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef OneLikelihoodParameters G__TOneLikelihoodParameters;
static int G__macroRootDict_425_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (OneLikelihoodParameters*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((OneLikelihoodParameters*) (soff+(sizeof(OneLikelihoodParameters)*i)))->~G__TOneLikelihoodParameters();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (OneLikelihoodParameters*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((OneLikelihoodParameters*) (soff))->~G__TOneLikelihoodParameters();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_425_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   OneLikelihoodParameters* dest = (OneLikelihoodParameters*) G__getstructoffset();
   *dest = *(OneLikelihoodParameters*) libp->para[0].ref;
   const OneLikelihoodParameters& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* OneRunLikelihoodAnalizeManager */
static int G__macroRootDict_441_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   OneRunLikelihoodAnalizeManager* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new OneRunLikelihoodAnalizeManager[n];
     } else {
       p = new((void*) gvp) OneRunLikelihoodAnalizeManager[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new OneRunLikelihoodAnalizeManager;
     } else {
       p = new((void*) gvp) OneRunLikelihoodAnalizeManager;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_OneRunLikelihoodAnalizeManager));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_441_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   OneRunLikelihoodAnalizeManager* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new OneRunLikelihoodAnalizeManager((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) OneRunLikelihoodAnalizeManager((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_OneRunLikelihoodAnalizeManager));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_441_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneRunLikelihoodAnalizeManager*) G__getstructoffset())->Setlikelihoodfile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_441_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneRunLikelihoodAnalizeManager*) G__getstructoffset())->GetEntry((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_441_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         AngleRange* pobj;
         AngleRange xobj = ((OneRunLikelihoodAnalizeManager*) G__getstructoffset())->GetAngleRange();
         pobj = new AngleRange(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_441_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((OneRunLikelihoodAnalizeManager*) G__getstructoffset())->GetDirection((int) G__int(libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_441_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((OneRunLikelihoodAnalizeManager*) G__getstructoffset())->Getevent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_441_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((OneRunLikelihoodAnalizeManager*) G__getstructoffset())->GetLikelihoodParameters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_441_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) OneRunLikelihoodAnalizeManager::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_441_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) OneRunLikelihoodAnalizeManager::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_441_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) OneRunLikelihoodAnalizeManager::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_441_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      OneRunLikelihoodAnalizeManager::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_441_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneRunLikelihoodAnalizeManager*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_441_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) OneRunLikelihoodAnalizeManager::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_441_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) OneRunLikelihoodAnalizeManager::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_441_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) OneRunLikelihoodAnalizeManager::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_441_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) OneRunLikelihoodAnalizeManager::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_441_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   OneRunLikelihoodAnalizeManager* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new OneRunLikelihoodAnalizeManager(*(OneRunLikelihoodAnalizeManager*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_OneRunLikelihoodAnalizeManager));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef OneRunLikelihoodAnalizeManager G__TOneRunLikelihoodAnalizeManager;
static int G__macroRootDict_441_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (OneRunLikelihoodAnalizeManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((OneRunLikelihoodAnalizeManager*) (soff+(sizeof(OneRunLikelihoodAnalizeManager)*i)))->~G__TOneRunLikelihoodAnalizeManager();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (OneRunLikelihoodAnalizeManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((OneRunLikelihoodAnalizeManager*) (soff))->~G__TOneRunLikelihoodAnalizeManager();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_441_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   OneRunLikelihoodAnalizeManager* dest = (OneRunLikelihoodAnalizeManager*) G__getstructoffset();
   *dest = *(OneRunLikelihoodAnalizeManager*) libp->para[0].ref;
   const OneRunLikelihoodAnalizeManager& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TOption_minimize */
static int G__macroRootDict_442_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TOption_minimize* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TOption_minimize[n];
     } else {
       p = new((void*) gvp) TOption_minimize[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TOption_minimize;
     } else {
       p = new((void*) gvp) TOption_minimize;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_TOption_minimize));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_442_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TOption_minimize*) G__getstructoffset())->SetOption(*((TOption_minimize*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_442_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TOption_minimize::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_442_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TOption_minimize::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_442_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TOption_minimize::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_442_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TOption_minimize::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_442_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TOption_minimize*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_442_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TOption_minimize::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_442_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TOption_minimize::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_442_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TOption_minimize::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_442_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TOption_minimize::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_442_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TOption_minimize* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TOption_minimize(*(TOption_minimize*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_TOption_minimize));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TOption_minimize G__TTOption_minimize;
static int G__macroRootDict_442_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TOption_minimize*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TOption_minimize*) (soff+(sizeof(TOption_minimize)*i)))->~G__TTOption_minimize();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TOption_minimize*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TOption_minimize*) (soff))->~G__TTOption_minimize();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_442_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TOption_minimize* dest = (TOption_minimize*) G__getstructoffset();
   *dest = *(TOption_minimize*) libp->para[0].ref;
   const TOption_minimize& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* OneGoodnessMinimizeParameters */
static int G__macroRootDict_443_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   OneGoodnessMinimizeParameters* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new OneGoodnessMinimizeParameters[n];
     } else {
       p = new((void*) gvp) OneGoodnessMinimizeParameters[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new OneGoodnessMinimizeParameters;
     } else {
       p = new((void*) gvp) OneGoodnessMinimizeParameters;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameters));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_443_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneGoodnessMinimizeParameters*) G__getstructoffset())->Setpair(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_443_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneGoodnessMinimizeParameters*) G__getstructoffset())->SetValue();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_443_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneGoodnessMinimizeParameters*) G__getstructoffset())->PrintValue();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_443_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((OneGoodnessMinimizeParameters*) G__getstructoffset())->isEqual(*((OneGoodnessMinimizeParameters*) G__int(libp->para[0])), *((vector<std::string>*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_443_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((OneGoodnessMinimizeParameters*) G__getstructoffset())->Getfile();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_443_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) OneGoodnessMinimizeParameters::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_443_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) OneGoodnessMinimizeParameters::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_443_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) OneGoodnessMinimizeParameters::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_443_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      OneGoodnessMinimizeParameters::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_443_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneGoodnessMinimizeParameters*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_443_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) OneGoodnessMinimizeParameters::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_443_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) OneGoodnessMinimizeParameters::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_443_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) OneGoodnessMinimizeParameters::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_443_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) OneGoodnessMinimizeParameters::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_443_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   OneGoodnessMinimizeParameters* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new OneGoodnessMinimizeParameters(*(OneGoodnessMinimizeParameters*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameters));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef OneGoodnessMinimizeParameters G__TOneGoodnessMinimizeParameters;
static int G__macroRootDict_443_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (OneGoodnessMinimizeParameters*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((OneGoodnessMinimizeParameters*) (soff+(sizeof(OneGoodnessMinimizeParameters)*i)))->~G__TOneGoodnessMinimizeParameters();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (OneGoodnessMinimizeParameters*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((OneGoodnessMinimizeParameters*) (soff))->~G__TOneGoodnessMinimizeParameters();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_443_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   OneGoodnessMinimizeParameters* dest = (OneGoodnessMinimizeParameters*) G__getstructoffset();
   *dest = *(OneGoodnessMinimizeParameters*) libp->para[0].ref;
   const OneGoodnessMinimizeParameters& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* OneRunGoodnessMinimizeAnalizeManager */
static int G__macroRootDict_461_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   OneRunGoodnessMinimizeAnalizeManager* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new OneRunGoodnessMinimizeAnalizeManager[n];
     } else {
       p = new((void*) gvp) OneRunGoodnessMinimizeAnalizeManager[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new OneRunGoodnessMinimizeAnalizeManager;
     } else {
       p = new((void*) gvp) OneRunGoodnessMinimizeAnalizeManager;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_OneRunGoodnessMinimizeAnalizeManager));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_461_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   OneRunGoodnessMinimizeAnalizeManager* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new OneRunGoodnessMinimizeAnalizeManager((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) OneRunGoodnessMinimizeAnalizeManager((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_OneRunGoodnessMinimizeAnalizeManager));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_461_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneRunGoodnessMinimizeAnalizeManager*) G__getstructoffset())->Setgoodnessminimizefile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_461_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneRunGoodnessMinimizeAnalizeManager*) G__getstructoffset())->GetEntry((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_461_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((OneRunGoodnessMinimizeAnalizeManager*) G__getstructoffset())->Getevent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_461_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((OneRunGoodnessMinimizeAnalizeManager*) G__getstructoffset())->GetGoodnessMinimizeParameters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_461_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) OneRunGoodnessMinimizeAnalizeManager::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_461_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) OneRunGoodnessMinimizeAnalizeManager::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_461_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) OneRunGoodnessMinimizeAnalizeManager::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_461_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      OneRunGoodnessMinimizeAnalizeManager::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_461_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneRunGoodnessMinimizeAnalizeManager*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_461_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) OneRunGoodnessMinimizeAnalizeManager::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_461_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) OneRunGoodnessMinimizeAnalizeManager::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_461_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) OneRunGoodnessMinimizeAnalizeManager::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_461_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) OneRunGoodnessMinimizeAnalizeManager::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_461_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   OneRunGoodnessMinimizeAnalizeManager* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new OneRunGoodnessMinimizeAnalizeManager(*(OneRunGoodnessMinimizeAnalizeManager*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_OneRunGoodnessMinimizeAnalizeManager));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef OneRunGoodnessMinimizeAnalizeManager G__TOneRunGoodnessMinimizeAnalizeManager;
static int G__macroRootDict_461_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (OneRunGoodnessMinimizeAnalizeManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((OneRunGoodnessMinimizeAnalizeManager*) (soff+(sizeof(OneRunGoodnessMinimizeAnalizeManager)*i)))->~G__TOneRunGoodnessMinimizeAnalizeManager();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (OneRunGoodnessMinimizeAnalizeManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((OneRunGoodnessMinimizeAnalizeManager*) (soff))->~G__TOneRunGoodnessMinimizeAnalizeManager();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_461_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   OneRunGoodnessMinimizeAnalizeManager* dest = (OneRunGoodnessMinimizeAnalizeManager*) G__getstructoffset();
   *dest = *(OneRunGoodnessMinimizeAnalizeManager*) libp->para[0].ref;
   const OneRunGoodnessMinimizeAnalizeManager& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BiasError */
static int G__macroRootDict_462_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BiasError* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BiasError[n];
     } else {
       p = new((void*) gvp) BiasError[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BiasError;
     } else {
       p = new((void*) gvp) BiasError;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_BiasError));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_462_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BiasError::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_462_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BiasError::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_462_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BiasError::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_462_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BiasError::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_462_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BiasError*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_462_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BiasError::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_462_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BiasError::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_462_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BiasError::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_462_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BiasError::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_462_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BiasError* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BiasError(*(BiasError*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_BiasError));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BiasError G__TBiasError;
static int G__macroRootDict_462_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BiasError*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BiasError*) (soff+(sizeof(BiasError)*i)))->~G__TBiasError();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BiasError*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BiasError*) (soff))->~G__TBiasError();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_462_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BiasError* dest = (BiasError*) G__getstructoffset();
   *dest = *(BiasError*) libp->para[0].ref;
   const BiasError& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* OneRunAnalizeManager */
static int G__macroRootDict_463_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   OneRunAnalizeManager* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new OneRunAnalizeManager[n];
     } else {
       p = new((void*) gvp) OneRunAnalizeManager[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new OneRunAnalizeManager;
     } else {
       p = new((void*) gvp) OneRunAnalizeManager;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_OneRunAnalizeManager));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_463_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   OneRunAnalizeManager* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new OneRunAnalizeManager((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) OneRunAnalizeManager((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_OneRunAnalizeManager));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_463_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneRunAnalizeManager*) G__getstructoffset())->Setdatafile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_463_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneRunAnalizeManager*) G__getstructoffset())->SetGoodnessfile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_463_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneRunAnalizeManager*) G__getstructoffset())->SetLikelihoodfile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_463_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneRunAnalizeManager*) G__getstructoffset())->SetGoodnessMinimizefile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_463_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((OneRunAnalizeManager*) G__getstructoffset())->Getdatamanager());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_463_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((OneRunAnalizeManager*) G__getstructoffset())->Getgoodnessmanager());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_463_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((OneRunAnalizeManager*) G__getstructoffset())->Getlikelihoodmanager());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_463_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((OneRunAnalizeManager*) G__getstructoffset())->Getgoodnessminimizemanager());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_463_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneRunAnalizeManager*) G__getstructoffset())->GetTH2DEvent((TH2D*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_463_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneRunAnalizeManager*) G__getstructoffset())->GetTH2DHit((TH2D*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_463_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneRunAnalizeManager*) G__getstructoffset())->GetTH1DEvent((TH1D*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_463_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneRunAnalizeManager*) G__getstructoffset())->GetTH1DHit((TH1D*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_463_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         BiasError* pobj;
         BiasError xobj = ((OneRunAnalizeManager*) G__getstructoffset())->GetXBiasErrorbygoodness();
         pobj = new BiasError(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_463_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         BiasError* pobj;
         BiasError xobj = ((OneRunAnalizeManager*) G__getstructoffset())->GetYBiasErrorbygoodness();
         pobj = new BiasError(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_463_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         BiasError* pobj;
         BiasError xobj = ((OneRunAnalizeManager*) G__getstructoffset())->GetZBiasErrorbygoodness();
         pobj = new BiasError(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_463_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((OneRunAnalizeManager*) G__getstructoffset())->angleerror1sigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_463_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) OneRunAnalizeManager::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_463_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) OneRunAnalizeManager::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_463_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) OneRunAnalizeManager::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_463_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      OneRunAnalizeManager::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_463_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((OneRunAnalizeManager*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_463_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) OneRunAnalizeManager::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_463_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) OneRunAnalizeManager::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_463_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) OneRunAnalizeManager::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_463_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) OneRunAnalizeManager::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_463_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   OneRunAnalizeManager* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new OneRunAnalizeManager(*(OneRunAnalizeManager*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_OneRunAnalizeManager));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef OneRunAnalizeManager G__TOneRunAnalizeManager;
static int G__macroRootDict_463_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (OneRunAnalizeManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((OneRunAnalizeManager*) (soff+(sizeof(OneRunAnalizeManager)*i)))->~G__TOneRunAnalizeManager();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (OneRunAnalizeManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((OneRunAnalizeManager*) (soff))->~G__TOneRunAnalizeManager();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_463_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   OneRunAnalizeManager* dest = (OneRunAnalizeManager*) G__getstructoffset();
   *dest = *(OneRunAnalizeManager*) libp->para[0].ref;
   const OneRunAnalizeManager& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Tfunction */
static int G__macroRootDict_464_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Tfunction*) G__getstructoffset())->returnvalue());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_464_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Tfunction::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_464_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tfunction::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_464_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Tfunction::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_464_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Tfunction::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_464_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Tfunction*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_464_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tfunction::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_464_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Tfunction::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_464_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tfunction::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_464_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Tfunction::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Tfunction G__TTfunction;
static int G__macroRootDict_464_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Tfunction*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Tfunction*) (soff+(sizeof(Tfunction)*i)))->~G__TTfunction();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Tfunction*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Tfunction*) (soff))->~G__TTfunction();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_464_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Tfunction* dest = (Tfunction*) G__getstructoffset();
   *dest = *(Tfunction*) libp->para[0].ref;
   const Tfunction& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Tafunction */
static int G__macroRootDict_465_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Tafunction*) G__getstructoffset())->SetHitInfo(*((Thitinfo*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_465_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Tafunction*) G__getstructoffset())->SetReconstructdata(*((TReconstructdata*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_465_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Tafunction::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_465_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tafunction::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_465_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Tafunction::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_465_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Tafunction::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_465_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Tafunction*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_465_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tafunction::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_465_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Tafunction::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_465_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tafunction::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_465_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Tafunction::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Tafunction G__TTafunction;
static int G__macroRootDict_465_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Tafunction*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Tafunction*) (soff+(sizeof(Tafunction)*i)))->~G__TTafunction();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Tafunction*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Tafunction*) (soff))->~G__TTafunction();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_465_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Tafunction* dest = (Tafunction*) G__getstructoffset();
   *dest = *(Tafunction*) libp->para[0].ref;
   const Tafunction& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Tafuncprototype */
static int G__macroRootDict_466_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Tafuncprototype* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Tafuncprototype[n];
     } else {
       p = new((void*) gvp) Tafuncprototype[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Tafuncprototype;
     } else {
       p = new((void*) gvp) Tafuncprototype;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_Tafuncprototype));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_466_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Tafuncprototype::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_466_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tafuncprototype::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_466_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Tafuncprototype::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_466_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Tafuncprototype::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_466_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Tafuncprototype*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_466_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tafuncprototype::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_466_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Tafuncprototype::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_466_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tafuncprototype::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_466_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Tafuncprototype::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_466_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Tafuncprototype* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Tafuncprototype(*(Tafuncprototype*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_Tafuncprototype));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Tafuncprototype G__TTafuncprototype;
static int G__macroRootDict_466_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Tafuncprototype*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Tafuncprototype*) (soff+(sizeof(Tafuncprototype)*i)))->~G__TTafuncprototype();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Tafuncprototype*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Tafuncprototype*) (soff))->~G__TTafuncprototype();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_466_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Tafuncprototype* dest = (Tafuncprototype*) G__getstructoffset();
   *dest = *(Tafuncprototype*) libp->para[0].ref;
   const Tafuncprototype& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Tdistance_function */
static int G__macroRootDict_467_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Tdistance_function*) G__getstructoffset())->SetHitInfo(*((Thitinfo*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_467_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Tdistance_function*) G__getstructoffset())->SetReconstructdata(*((TReconstructdata*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_467_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Tdistance_function::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_467_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tdistance_function::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_467_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Tdistance_function::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_467_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Tdistance_function::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_467_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Tdistance_function*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_467_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tdistance_function::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_467_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Tdistance_function::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_467_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tdistance_function::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_467_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Tdistance_function::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Tdistance_function G__TTdistance_function;
static int G__macroRootDict_467_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Tdistance_function*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Tdistance_function*) (soff+(sizeof(Tdistance_function)*i)))->~G__TTdistance_function();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Tdistance_function*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Tdistance_function*) (soff))->~G__TTdistance_function();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_467_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Tdistance_function* dest = (Tdistance_function*) G__getstructoffset();
   *dest = *(Tdistance_function*) libp->para[0].ref;
   const Tdistance_function& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Tdistance_position_pmt */
static int G__macroRootDict_468_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Tdistance_position_pmt* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Tdistance_position_pmt[n];
     } else {
       p = new((void*) gvp) Tdistance_position_pmt[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Tdistance_position_pmt;
     } else {
       p = new((void*) gvp) Tdistance_position_pmt;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_position_pmt));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_468_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Tdistance_position_pmt::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_468_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tdistance_position_pmt::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_468_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Tdistance_position_pmt::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_468_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Tdistance_position_pmt::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_468_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Tdistance_position_pmt*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_468_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tdistance_position_pmt::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_468_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Tdistance_position_pmt::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_468_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tdistance_position_pmt::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_468_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Tdistance_position_pmt::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_468_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Tdistance_position_pmt* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Tdistance_position_pmt(*(Tdistance_position_pmt*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_position_pmt));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Tdistance_position_pmt G__TTdistance_position_pmt;
static int G__macroRootDict_468_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Tdistance_position_pmt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Tdistance_position_pmt*) (soff+(sizeof(Tdistance_position_pmt)*i)))->~G__TTdistance_position_pmt();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Tdistance_position_pmt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Tdistance_position_pmt*) (soff))->~G__TTdistance_position_pmt();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_468_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Tdistance_position_pmt* dest = (Tdistance_position_pmt*) G__getstructoffset();
   *dest = *(Tdistance_position_pmt*) libp->para[0].ref;
   const Tdistance_position_pmt& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Tdistance_position_retro */
static int G__macroRootDict_469_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Tdistance_position_retro* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Tdistance_position_retro[n];
     } else {
       p = new((void*) gvp) Tdistance_position_retro[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Tdistance_position_retro;
     } else {
       p = new((void*) gvp) Tdistance_position_retro;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_position_retro));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_469_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Tdistance_position_retro::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_469_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tdistance_position_retro::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_469_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Tdistance_position_retro::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_469_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Tdistance_position_retro::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_469_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Tdistance_position_retro*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_469_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tdistance_position_retro::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_469_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Tdistance_position_retro::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_469_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tdistance_position_retro::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_469_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Tdistance_position_retro::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_469_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Tdistance_position_retro* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Tdistance_position_retro(*(Tdistance_position_retro*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_position_retro));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Tdistance_position_retro G__TTdistance_position_retro;
static int G__macroRootDict_469_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Tdistance_position_retro*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Tdistance_position_retro*) (soff+(sizeof(Tdistance_position_retro)*i)))->~G__TTdistance_position_retro();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Tdistance_position_retro*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Tdistance_position_retro*) (soff))->~G__TTdistance_position_retro();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_469_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Tdistance_position_retro* dest = (Tdistance_position_retro*) G__getstructoffset();
   *dest = *(Tdistance_position_retro*) libp->para[0].ref;
   const Tdistance_position_retro& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Tdistance_fly_retro */
static int G__macroRootDict_470_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Tdistance_fly_retro* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Tdistance_fly_retro[n];
     } else {
       p = new((void*) gvp) Tdistance_fly_retro[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Tdistance_fly_retro;
     } else {
       p = new((void*) gvp) Tdistance_fly_retro;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_fly_retro));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_470_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Tdistance_fly_retro::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_470_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tdistance_fly_retro::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_470_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Tdistance_fly_retro::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_470_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Tdistance_fly_retro::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_470_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Tdistance_fly_retro*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_470_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tdistance_fly_retro::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_470_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Tdistance_fly_retro::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_470_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tdistance_fly_retro::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_470_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Tdistance_fly_retro::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_470_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Tdistance_fly_retro* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Tdistance_fly_retro(*(Tdistance_fly_retro*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_fly_retro));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Tdistance_fly_retro G__TTdistance_fly_retro;
static int G__macroRootDict_470_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Tdistance_fly_retro*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Tdistance_fly_retro*) (soff+(sizeof(Tdistance_fly_retro)*i)))->~G__TTdistance_fly_retro();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Tdistance_fly_retro*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Tdistance_fly_retro*) (soff))->~G__TTdistance_fly_retro();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_470_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Tdistance_fly_retro* dest = (Tdistance_fly_retro*) G__getstructoffset();
   *dest = *(Tdistance_fly_retro*) libp->para[0].ref;
   const Tdistance_fly_retro& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Tfdirection */
static int G__macroRootDict_471_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Tfdirection*) G__getstructoffset())->SetHitInfo(*((Thitinfo*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_471_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Tfdirection*) G__getstructoffset())->SetReconstructdata(*((TReconstructdata*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_471_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Tfdirection::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_471_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tfdirection::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_471_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Tfdirection::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_471_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Tfdirection::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_471_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Tfdirection*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_471_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tfdirection::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_471_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Tfdirection::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_471_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tfdirection::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_471_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Tfdirection::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Tfdirection G__TTfdirection;
static int G__macroRootDict_471_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Tfdirection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Tfdirection*) (soff+(sizeof(Tfdirection)*i)))->~G__TTfdirection();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Tfdirection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Tfdirection*) (soff))->~G__TTfdirection();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_471_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Tfdirection* dest = (Tfdirection*) G__getstructoffset();
   *dest = *(Tfdirection*) libp->para[0].ref;
   const Tfdirection& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Tfdirprototypenoretro */
static int G__macroRootDict_472_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Tfdirprototypenoretro* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Tfdirprototypenoretro[n];
     } else {
       p = new((void*) gvp) Tfdirprototypenoretro[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Tfdirprototypenoretro;
     } else {
       p = new((void*) gvp) Tfdirprototypenoretro;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_Tfdirprototypenoretro));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_472_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Tfdirprototypenoretro::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_472_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tfdirprototypenoretro::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_472_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Tfdirprototypenoretro::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_472_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Tfdirprototypenoretro::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_472_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Tfdirprototypenoretro*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_472_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tfdirprototypenoretro::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_472_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Tfdirprototypenoretro::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_472_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tfdirprototypenoretro::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_472_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Tfdirprototypenoretro::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_472_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Tfdirprototypenoretro* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Tfdirprototypenoretro(*(Tfdirprototypenoretro*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_Tfdirprototypenoretro));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Tfdirprototypenoretro G__TTfdirprototypenoretro;
static int G__macroRootDict_472_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Tfdirprototypenoretro*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Tfdirprototypenoretro*) (soff+(sizeof(Tfdirprototypenoretro)*i)))->~G__TTfdirprototypenoretro();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Tfdirprototypenoretro*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Tfdirprototypenoretro*) (soff))->~G__TTfdirprototypenoretro();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_472_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Tfdirprototypenoretro* dest = (Tfdirprototypenoretro*) G__getstructoffset();
   *dest = *(Tfdirprototypenoretro*) libp->para[0].ref;
   const Tfdirprototypenoretro& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Tfdirprototypeonretro */
static int G__macroRootDict_473_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Tfdirprototypeonretro* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Tfdirprototypeonretro[n];
     } else {
       p = new((void*) gvp) Tfdirprototypeonretro[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Tfdirprototypeonretro;
     } else {
       p = new((void*) gvp) Tfdirprototypeonretro;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_Tfdirprototypeonretro));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_473_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Tfdirprototypeonretro::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_473_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tfdirprototypeonretro::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_473_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Tfdirprototypeonretro::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_473_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Tfdirprototypeonretro::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_473_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Tfdirprototypeonretro*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_473_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tfdirprototypeonretro::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_473_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Tfdirprototypeonretro::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_473_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tfdirprototypeonretro::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_473_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Tfdirprototypeonretro::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_473_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Tfdirprototypeonretro* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Tfdirprototypeonretro(*(Tfdirprototypeonretro*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_Tfdirprototypeonretro));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Tfdirprototypeonretro G__TTfdirprototypeonretro;
static int G__macroRootDict_473_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Tfdirprototypeonretro*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Tfdirprototypeonretro*) (soff+(sizeof(Tfdirprototypeonretro)*i)))->~G__TTfdirprototypeonretro();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Tfdirprototypeonretro*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Tfdirprototypeonretro*) (soff))->~G__TTfdirprototypeonretro();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_473_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Tfdirprototypeonretro* dest = (Tfdirprototypeonretro*) G__getstructoffset();
   *dest = *(Tfdirprototypeonretro*) libp->para[0].ref;
   const Tfdirprototypeonretro& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Tfdirbydatanoretro */
static int G__macroRootDict_474_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Tfdirbydatanoretro* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Tfdirbydatanoretro[n];
     } else {
       p = new((void*) gvp) Tfdirbydatanoretro[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Tfdirbydatanoretro;
     } else {
       p = new((void*) gvp) Tfdirbydatanoretro;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_Tfdirbydatanoretro));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_474_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Tfdirbydatanoretro::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_474_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tfdirbydatanoretro::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_474_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Tfdirbydatanoretro::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_474_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Tfdirbydatanoretro::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_474_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Tfdirbydatanoretro*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_474_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tfdirbydatanoretro::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_474_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Tfdirbydatanoretro::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_474_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tfdirbydatanoretro::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_474_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Tfdirbydatanoretro::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_474_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Tfdirbydatanoretro* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Tfdirbydatanoretro(*(Tfdirbydatanoretro*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_Tfdirbydatanoretro));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Tfdirbydatanoretro G__TTfdirbydatanoretro;
static int G__macroRootDict_474_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Tfdirbydatanoretro*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Tfdirbydatanoretro*) (soff+(sizeof(Tfdirbydatanoretro)*i)))->~G__TTfdirbydatanoretro();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Tfdirbydatanoretro*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Tfdirbydatanoretro*) (soff))->~G__TTfdirbydatanoretro();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_474_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Tfdirbydatanoretro* dest = (Tfdirbydatanoretro*) G__getstructoffset();
   *dest = *(Tfdirbydatanoretro*) libp->para[0].ref;
   const Tfdirbydatanoretro& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Tfdirbydataonretro */
static int G__macroRootDict_475_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Tfdirbydataonretro* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Tfdirbydataonretro[n];
     } else {
       p = new((void*) gvp) Tfdirbydataonretro[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Tfdirbydataonretro;
     } else {
       p = new((void*) gvp) Tfdirbydataonretro;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_Tfdirbydataonretro));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_475_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Tfdirbydataonretro::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_475_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tfdirbydataonretro::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_475_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Tfdirbydataonretro::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_475_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Tfdirbydataonretro::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_475_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Tfdirbydataonretro*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_475_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tfdirbydataonretro::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_475_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Tfdirbydataonretro::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_475_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tfdirbydataonretro::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_475_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Tfdirbydataonretro::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_475_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Tfdirbydataonretro* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Tfdirbydataonretro(*(Tfdirbydataonretro*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_Tfdirbydataonretro));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Tfdirbydataonretro G__TTfdirbydataonretro;
static int G__macroRootDict_475_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Tfdirbydataonretro*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Tfdirbydataonretro*) (soff+(sizeof(Tfdirbydataonretro)*i)))->~G__TTfdirbydataonretro();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Tfdirbydataonretro*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Tfdirbydataonretro*) (soff))->~G__TTfdirbydataonretro();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_475_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Tfdirbydataonretro* dest = (Tfdirbydataonretro*) G__getstructoffset();
   *dest = *(Tfdirbydataonretro*) libp->para[0].ref;
   const Tfdirbydataonretro& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Tlikelihood */
static int G__macroRootDict_476_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Tlikelihood*) G__getstructoffset())->SetHitInfo(*((Thitinfo*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_476_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Tlikelihood*) G__getstructoffset())->SetReconstructdata(*((TReconstructdata*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_476_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Tlikelihood*) G__getstructoffset())->Setfdirectionnoretro((Tfdirection*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_476_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Tlikelihood*) G__getstructoffset())->Setafunctionnoretro((Tafunction*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_476_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Tlikelihood*) G__getstructoffset())->Setfdirectiononretro((Tfdirection*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_476_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Tlikelihood*) G__getstructoffset())->Setafunctiononretro((Tafunction*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_476_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Tlikelihood::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_476_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tlikelihood::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_476_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Tlikelihood::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_476_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Tlikelihood::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_476_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Tlikelihood*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_476_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tlikelihood::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_476_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Tlikelihood::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_476_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tlikelihood::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_476_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Tlikelihood::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Tlikelihood G__TTlikelihood;
static int G__macroRootDict_476_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Tlikelihood*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Tlikelihood*) (soff+(sizeof(Tlikelihood)*i)))->~G__TTlikelihood();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Tlikelihood*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Tlikelihood*) (soff))->~G__TTlikelihood();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_476_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Tlikelihood* dest = (Tlikelihood*) G__getstructoffset();
   *dest = *(Tlikelihood*) libp->para[0].ref;
   const Tlikelihood& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Tlikelihoodnoretro */
static int G__macroRootDict_477_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Tlikelihoodnoretro* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Tlikelihoodnoretro[n];
     } else {
       p = new((void*) gvp) Tlikelihoodnoretro[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Tlikelihoodnoretro;
     } else {
       p = new((void*) gvp) Tlikelihoodnoretro;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihoodnoretro));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_477_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Tlikelihoodnoretro::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_477_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tlikelihoodnoretro::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_477_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Tlikelihoodnoretro::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_477_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Tlikelihoodnoretro::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_477_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Tlikelihoodnoretro*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_477_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tlikelihoodnoretro::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_477_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Tlikelihoodnoretro::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_477_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tlikelihoodnoretro::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_477_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Tlikelihoodnoretro::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_477_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Tlikelihoodnoretro* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Tlikelihoodnoretro(*(Tlikelihoodnoretro*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihoodnoretro));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Tlikelihoodnoretro G__TTlikelihoodnoretro;
static int G__macroRootDict_477_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Tlikelihoodnoretro*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Tlikelihoodnoretro*) (soff+(sizeof(Tlikelihoodnoretro)*i)))->~G__TTlikelihoodnoretro();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Tlikelihoodnoretro*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Tlikelihoodnoretro*) (soff))->~G__TTlikelihoodnoretro();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_477_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Tlikelihoodnoretro* dest = (Tlikelihoodnoretro*) G__getstructoffset();
   *dest = *(Tlikelihoodnoretro*) libp->para[0].ref;
   const Tlikelihoodnoretro& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Tlikelihoodonretro */
static int G__macroRootDict_478_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Tlikelihoodonretro* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Tlikelihoodonretro[n];
     } else {
       p = new((void*) gvp) Tlikelihoodonretro[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Tlikelihoodonretro;
     } else {
       p = new((void*) gvp) Tlikelihoodonretro;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihoodonretro));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_478_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Tlikelihoodonretro::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_478_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tlikelihoodonretro::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_478_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Tlikelihoodonretro::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_478_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Tlikelihoodonretro::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_478_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Tlikelihoodonretro*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_478_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tlikelihoodonretro::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_478_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Tlikelihoodonretro::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_478_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tlikelihoodonretro::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_478_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Tlikelihoodonretro::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_478_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Tlikelihoodonretro* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Tlikelihoodonretro(*(Tlikelihoodonretro*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihoodonretro));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Tlikelihoodonretro G__TTlikelihoodonretro;
static int G__macroRootDict_478_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Tlikelihoodonretro*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Tlikelihoodonretro*) (soff+(sizeof(Tlikelihoodonretro)*i)))->~G__TTlikelihoodonretro();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Tlikelihoodonretro*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Tlikelihoodonretro*) (soff))->~G__TTlikelihoodonretro();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_478_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Tlikelihoodonretro* dest = (Tlikelihoodonretro*) G__getstructoffset();
   *dest = *(Tlikelihoodonretro*) libp->para[0].ref;
   const Tlikelihoodonretro& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Tlikelihoodsum */
static int G__macroRootDict_479_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Tlikelihoodsum* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Tlikelihoodsum[n];
     } else {
       p = new((void*) gvp) Tlikelihoodsum[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Tlikelihoodsum;
     } else {
       p = new((void*) gvp) Tlikelihoodsum;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihoodsum));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_479_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Tlikelihoodsum::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_479_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tlikelihoodsum::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_479_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Tlikelihoodsum::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_479_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Tlikelihoodsum::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_479_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Tlikelihoodsum*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_479_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tlikelihoodsum::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_479_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Tlikelihoodsum::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_479_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Tlikelihoodsum::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_479_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Tlikelihoodsum::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_479_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Tlikelihoodsum* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Tlikelihoodsum(*(Tlikelihoodsum*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihoodsum));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Tlikelihoodsum G__TTlikelihoodsum;
static int G__macroRootDict_479_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Tlikelihoodsum*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Tlikelihoodsum*) (soff+(sizeof(Tlikelihoodsum)*i)))->~G__TTlikelihoodsum();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Tlikelihoodsum*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Tlikelihoodsum*) (soff))->~G__TTlikelihoodsum();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_479_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Tlikelihoodsum* dest = (Tlikelihoodsum*) G__getstructoffset();
   *dest = *(Tlikelihoodsum*) libp->para[0].ref;
   const Tlikelihoodsum& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Ttheta_dir_i */
static int G__macroRootDict_480_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ttheta_dir_i* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ttheta_dir_i[n];
     } else {
       p = new((void*) gvp) Ttheta_dir_i[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ttheta_dir_i;
     } else {
       p = new((void*) gvp) Ttheta_dir_i;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_Ttheta_dir_i));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_480_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ttheta_dir_i*) G__getstructoffset())->SetHitInfo(*((Thitinfo*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_480_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ttheta_dir_i*) G__getstructoffset())->SetReconstructdata(*((TReconstructdata*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_480_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Ttheta_dir_i::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_480_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ttheta_dir_i::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_480_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Ttheta_dir_i::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_480_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Ttheta_dir_i::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_480_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ttheta_dir_i*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_480_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ttheta_dir_i::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_480_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ttheta_dir_i::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_480_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ttheta_dir_i::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_480_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ttheta_dir_i::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_480_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Ttheta_dir_i* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Ttheta_dir_i(*(Ttheta_dir_i*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_Ttheta_dir_i));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Ttheta_dir_i G__TTtheta_dir_i;
static int G__macroRootDict_480_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Ttheta_dir_i*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Ttheta_dir_i*) (soff+(sizeof(Ttheta_dir_i)*i)))->~G__TTtheta_dir_i();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Ttheta_dir_i*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Ttheta_dir_i*) (soff))->~G__TTtheta_dir_i();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_480_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ttheta_dir_i* dest = (Ttheta_dir_i*) G__getstructoffset();
   *dest = *(Ttheta_dir_i*) libp->para[0].ref;
   const Ttheta_dir_i& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Ttheta_i_func */
static int G__macroRootDict_481_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ttheta_i_func* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ttheta_i_func[n];
     } else {
       p = new((void*) gvp) Ttheta_i_func[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ttheta_i_func;
     } else {
       p = new((void*) gvp) Ttheta_i_func;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_Ttheta_i_func));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_481_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ttheta_i_func*) G__getstructoffset())->SetHitInfo(*((Thitinfo*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_481_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ttheta_i_func*) G__getstructoffset())->SetReconstructdata(*((TReconstructdata*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_481_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Ttheta_i_func::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_481_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ttheta_i_func::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_481_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Ttheta_i_func::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_481_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Ttheta_i_func::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_481_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ttheta_i_func*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_481_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ttheta_i_func::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_481_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ttheta_i_func::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_481_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ttheta_i_func::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_481_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ttheta_i_func::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_481_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Ttheta_i_func* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Ttheta_i_func(*(Ttheta_i_func*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_Ttheta_i_func));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Ttheta_i_func G__TTtheta_i_func;
static int G__macroRootDict_481_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Ttheta_i_func*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Ttheta_i_func*) (soff+(sizeof(Ttheta_i_func)*i)))->~G__TTtheta_i_func();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Ttheta_i_func*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Ttheta_i_func*) (soff))->~G__TTtheta_i_func();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_481_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ttheta_i_func* dest = (Ttheta_i_func*) G__getstructoffset();
   *dest = *(Ttheta_i_func*) libp->para[0].ref;
   const Ttheta_i_func& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Ttof */
static int G__macroRootDict_482_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ttof* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ttof[n];
     } else {
       p = new((void*) gvp) Ttof[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ttof;
     } else {
       p = new((void*) gvp) Ttof;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_Ttof));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_482_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ttof*) G__getstructoffset())->SetHitInfo(*((Thitinfo*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_482_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ttof*) G__getstructoffset())->SetReconstructdata(*((TReconstructdata*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_482_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ttof*) G__getstructoffset())->Setdistancefunction((Tdistance_function*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_482_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Ttof::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_482_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ttof::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_482_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Ttof::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_482_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Ttof::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_482_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ttof*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_482_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ttof::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_482_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ttof::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_482_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ttof::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_482_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ttof::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_482_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Ttof* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Ttof(*(Ttof*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_Ttof));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Ttof G__TTtof;
static int G__macroRootDict_482_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Ttof*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Ttof*) (soff+(sizeof(Ttof)*i)))->~G__TTtof();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Ttof*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Ttof*) (soff))->~G__TTtof();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_482_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ttof* dest = (Ttof*) G__getstructoffset();
   *dest = *(Ttof*) libp->para[0].ref;
   const Ttof& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MyString */
static int G__macroRootDict_483_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyString* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyString[n];
     } else {
       p = new((void*) gvp) MyString[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyString;
     } else {
       p = new((void*) gvp) MyString;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_MyString));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_483_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((MyString*) G__getstructoffset())->Getstring();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_483_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyString*) G__getstructoffset())->Setstring(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_483_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MyString::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_483_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyString::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_483_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MyString::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_483_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MyString::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_483_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyString*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_483_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyString::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_483_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyString::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_483_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyString::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_483_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyString::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_483_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MyString* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MyString(*(MyString*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_MyString));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MyString G__TMyString;
static int G__macroRootDict_483_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MyString*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MyString*) (soff+(sizeof(MyString)*i)))->~G__TMyString();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MyString*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MyString*) (soff))->~G__TMyString();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_483_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyString* dest = (MyString*) G__getstructoffset();
   *dest = *(MyString*) libp->para[0].ref;
   const MyString& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MultiRunAnalizeManager */
static int G__macroRootDict_484_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MultiRunAnalizeManager* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MultiRunAnalizeManager[n];
     } else {
       p = new((void*) gvp) MultiRunAnalizeManager[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MultiRunAnalizeManager;
     } else {
       p = new((void*) gvp) MultiRunAnalizeManager;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_MultiRunAnalizeManager));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_484_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MultiRunAnalizeManager*) G__getstructoffset())->SetBasefile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_484_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MultiRunAnalizeManager*) G__getstructoffset())->SetComparefile(*((vector<std::string>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_484_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MultiRunAnalizeManager*) G__getstructoffset())->SetAllfile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_484_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MultiRunAnalizeManager*) G__getstructoffset())->PrintAllfile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_484_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MultiRunAnalizeManager*) G__getstructoffset())->PrintComparefile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_484_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((MultiRunAnalizeManager*) G__getstructoffset())->GetTH1D((TH1D*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((MultiRunAnalizeManager*) G__getstructoffset())->GetTH1D((TH1D*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MultiRunAnalizeManager*) G__getstructoffset())->GetTH1D((TH1D*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_484_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MultiRunAnalizeManager*) G__getstructoffset())->GetVariable((const char*) G__int(libp->para[0]), (OneRunAnalizeManager*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_484_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MultiRunAnalizeManager::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_484_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MultiRunAnalizeManager::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_484_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MultiRunAnalizeManager::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_484_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MultiRunAnalizeManager::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_484_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MultiRunAnalizeManager*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_484_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MultiRunAnalizeManager::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_484_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MultiRunAnalizeManager::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_484_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MultiRunAnalizeManager::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__macroRootDict_484_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MultiRunAnalizeManager::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__macroRootDict_484_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MultiRunAnalizeManager* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MultiRunAnalizeManager(*(MultiRunAnalizeManager*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__macroRootDictLN_MultiRunAnalizeManager));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MultiRunAnalizeManager G__TMultiRunAnalizeManager;
static int G__macroRootDict_484_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MultiRunAnalizeManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MultiRunAnalizeManager*) (soff+(sizeof(MultiRunAnalizeManager)*i)))->~G__TMultiRunAnalizeManager();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MultiRunAnalizeManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MultiRunAnalizeManager*) (soff))->~G__TMultiRunAnalizeManager();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__macroRootDict_484_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MultiRunAnalizeManager* dest = (MultiRunAnalizeManager*) G__getstructoffset();
   *dest = *(MultiRunAnalizeManager*) libp->para[0].ref;
   const MultiRunAnalizeManager& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* Eventdisplay */

/* goodness_data */

/* l_dir_data */

/* AnalizedData */

/* C4Number */

/* CSearch_range */

/* FileList */

/* efficiency */

/* TH1DByTree */

/* HistError */

/* HistBias */

/* AngleRange */

/* TReconstructhit */

/* TReconstructdata */

/* TReconstructdata_minimize */

/* Thitinfo */

/* OneDataParameters */

/* OneRunDataAnalizeManager */

/* OneGoodnessParameters */

/* OneRunGoodnessAnalizeManager */

/* OneLikelihoodParameters */

/* OneRunLikelihoodAnalizeManager */

/* TOption_minimize */

/* OneGoodnessMinimizeParameters */

/* OneRunGoodnessMinimizeAnalizeManager */

/* BiasError */

/* OneRunAnalizeManager */

/* Tfunction */

/* Tafunction */

/* Tafuncprototype */

/* Tdistance_function */

/* Tdistance_position_pmt */

/* Tdistance_position_retro */

/* Tdistance_fly_retro */

/* Tfdirection */

/* Tfdirprototypenoretro */

/* Tfdirprototypeonretro */

/* Tfdirbydatanoretro */

/* Tfdirbydataonretro */

/* Tlikelihood */

/* Tlikelihoodnoretro */

/* Tlikelihoodonretro */

/* Tlikelihoodsum */

/* Ttheta_dir_i */

/* Ttheta_i_func */

/* Ttof */

/* MyString */

/* MultiRunAnalizeManager */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncmacroRootDict {
 public:
  G__Sizep2memfuncmacroRootDict(): p(&G__Sizep2memfuncmacroRootDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncmacroRootDict::*p)();
};

size_t G__get_sizep2memfuncmacroRootDict()
{
  G__Sizep2memfuncmacroRootDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancemacroRootDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_Eventdisplay))) {
     Eventdisplay *G__Lderived;
     G__Lderived=(Eventdisplay*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Eventdisplay),G__get_linked_tagnum(&G__macroRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Eventdisplay),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_goodness_data))) {
     goodness_data *G__Lderived;
     G__Lderived=(goodness_data*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_goodness_data),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_l_dir_data))) {
     l_dir_data *G__Lderived;
     G__Lderived=(l_dir_data*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_l_dir_data),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_AnalizedData))) {
     AnalizedData *G__Lderived;
     G__Lderived=(AnalizedData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_AnalizedData),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_C4Number))) {
     C4Number *G__Lderived;
     G__Lderived=(C4Number*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_C4Number),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_CSearch_range))) {
     CSearch_range *G__Lderived;
     G__Lderived=(CSearch_range*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_CSearch_range),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_FileList))) {
     FileList *G__Lderived;
     G__Lderived=(FileList*)0x1000;
     {
       TClonesArray *G__Lpbase=(TClonesArray*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_FileList),G__get_linked_tagnum(&G__macroRootDictLN_TClonesArray),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObjArray *G__Lpbase=(TObjArray*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_FileList),G__get_linked_tagnum(&G__macroRootDictLN_TObjArray),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TSeqCollection *G__Lpbase=(TSeqCollection*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_FileList),G__get_linked_tagnum(&G__macroRootDictLN_TSeqCollection),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TCollection *G__Lpbase=(TCollection*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_FileList),G__get_linked_tagnum(&G__macroRootDictLN_TCollection),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_FileList),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_efficiency))) {
     efficiency *G__Lderived;
     G__Lderived=(efficiency*)0x1000;
     {
       TH1D *G__Lpbase=(TH1D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_efficiency),G__get_linked_tagnum(&G__macroRootDictLN_TH1D),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TH1 *G__Lpbase=(TH1*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_efficiency),G__get_linked_tagnum(&G__macroRootDictLN_TH1),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_efficiency),G__get_linked_tagnum(&G__macroRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_efficiency),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_efficiency),G__get_linked_tagnum(&G__macroRootDictLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_efficiency),G__get_linked_tagnum(&G__macroRootDictLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_efficiency),G__get_linked_tagnum(&G__macroRootDictLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TArrayD *G__Lpbase=(TArrayD*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_efficiency),G__get_linked_tagnum(&G__macroRootDictLN_TArrayD),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TArray *G__Lpbase=(TArray*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_efficiency),G__get_linked_tagnum(&G__macroRootDictLN_TArray),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_TH1DByTree))) {
     TH1DByTree *G__Lderived;
     G__Lderived=(TH1DByTree*)0x1000;
     {
       TH1D *G__Lpbase=(TH1D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_TH1DByTree),G__get_linked_tagnum(&G__macroRootDictLN_TH1D),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TH1 *G__Lpbase=(TH1*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_TH1DByTree),G__get_linked_tagnum(&G__macroRootDictLN_TH1),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_TH1DByTree),G__get_linked_tagnum(&G__macroRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_TH1DByTree),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_TH1DByTree),G__get_linked_tagnum(&G__macroRootDictLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_TH1DByTree),G__get_linked_tagnum(&G__macroRootDictLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_TH1DByTree),G__get_linked_tagnum(&G__macroRootDictLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TArrayD *G__Lpbase=(TArrayD*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_TH1DByTree),G__get_linked_tagnum(&G__macroRootDictLN_TArrayD),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TArray *G__Lpbase=(TArray*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_TH1DByTree),G__get_linked_tagnum(&G__macroRootDictLN_TArray),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_HistError))) {
     HistError *G__Lderived;
     G__Lderived=(HistError*)0x1000;
     {
       TH1D *G__Lpbase=(TH1D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_HistError),G__get_linked_tagnum(&G__macroRootDictLN_TH1D),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TH1 *G__Lpbase=(TH1*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_HistError),G__get_linked_tagnum(&G__macroRootDictLN_TH1),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_HistError),G__get_linked_tagnum(&G__macroRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_HistError),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_HistError),G__get_linked_tagnum(&G__macroRootDictLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_HistError),G__get_linked_tagnum(&G__macroRootDictLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_HistError),G__get_linked_tagnum(&G__macroRootDictLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TArrayD *G__Lpbase=(TArrayD*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_HistError),G__get_linked_tagnum(&G__macroRootDictLN_TArrayD),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TArray *G__Lpbase=(TArray*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_HistError),G__get_linked_tagnum(&G__macroRootDictLN_TArray),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_HistBias))) {
     HistBias *G__Lderived;
     G__Lderived=(HistBias*)0x1000;
     {
       TH1D *G__Lpbase=(TH1D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_HistBias),G__get_linked_tagnum(&G__macroRootDictLN_TH1D),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TH1 *G__Lpbase=(TH1*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_HistBias),G__get_linked_tagnum(&G__macroRootDictLN_TH1),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_HistBias),G__get_linked_tagnum(&G__macroRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_HistBias),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_HistBias),G__get_linked_tagnum(&G__macroRootDictLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_HistBias),G__get_linked_tagnum(&G__macroRootDictLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_HistBias),G__get_linked_tagnum(&G__macroRootDictLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TArrayD *G__Lpbase=(TArrayD*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_HistBias),G__get_linked_tagnum(&G__macroRootDictLN_TArrayD),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TArray *G__Lpbase=(TArray*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_HistBias),G__get_linked_tagnum(&G__macroRootDictLN_TArray),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_AngleRange))) {
     AngleRange *G__Lderived;
     G__Lderived=(AngleRange*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_AngleRange),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_TReconstructhit))) {
     TReconstructhit *G__Lderived;
     G__Lderived=(TReconstructhit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_TReconstructhit),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_TReconstructdata))) {
     TReconstructdata *G__Lderived;
     G__Lderived=(TReconstructdata*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_TReconstructdata),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_TReconstructdata_minimize))) {
     TReconstructdata_minimize *G__Lderived;
     G__Lderived=(TReconstructdata_minimize*)0x1000;
     {
       TReconstructdata *G__Lpbase=(TReconstructdata*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_TReconstructdata_minimize),G__get_linked_tagnum(&G__macroRootDictLN_TReconstructdata),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_TReconstructdata_minimize),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_Thitinfo))) {
     Thitinfo *G__Lderived;
     G__Lderived=(Thitinfo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Thitinfo),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameters))) {
     OneDataParameters *G__Lderived;
     G__Lderived=(OneDataParameters*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameters),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_OneRunDataAnalizeManager))) {
     OneRunDataAnalizeManager *G__Lderived;
     G__Lderived=(OneRunDataAnalizeManager*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_OneRunDataAnalizeManager),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_OneRunGoodnessAnalizeManager))) {
     OneRunGoodnessAnalizeManager *G__Lderived;
     G__Lderived=(OneRunGoodnessAnalizeManager*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_OneRunGoodnessAnalizeManager),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameters))) {
     OneLikelihoodParameters *G__Lderived;
     G__Lderived=(OneLikelihoodParameters*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameters),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_OneRunLikelihoodAnalizeManager))) {
     OneRunLikelihoodAnalizeManager *G__Lderived;
     G__Lderived=(OneRunLikelihoodAnalizeManager*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_OneRunLikelihoodAnalizeManager),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_TOption_minimize))) {
     TOption_minimize *G__Lderived;
     G__Lderived=(TOption_minimize*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_TOption_minimize),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameters))) {
     OneGoodnessMinimizeParameters *G__Lderived;
     G__Lderived=(OneGoodnessMinimizeParameters*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameters),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_OneRunGoodnessMinimizeAnalizeManager))) {
     OneRunGoodnessMinimizeAnalizeManager *G__Lderived;
     G__Lderived=(OneRunGoodnessMinimizeAnalizeManager*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_OneRunGoodnessMinimizeAnalizeManager),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_BiasError))) {
     BiasError *G__Lderived;
     G__Lderived=(BiasError*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_BiasError),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_OneRunAnalizeManager))) {
     OneRunAnalizeManager *G__Lderived;
     G__Lderived=(OneRunAnalizeManager*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_OneRunAnalizeManager),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_Tfunction))) {
     Tfunction *G__Lderived;
     G__Lderived=(Tfunction*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tfunction),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_Tafunction))) {
     Tafunction *G__Lderived;
     G__Lderived=(Tafunction*)0x1000;
     {
       Tfunction *G__Lpbase=(Tfunction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tafunction),G__get_linked_tagnum(&G__macroRootDictLN_Tfunction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tafunction),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_Tafuncprototype))) {
     Tafuncprototype *G__Lderived;
     G__Lderived=(Tafuncprototype*)0x1000;
     {
       Tafunction *G__Lpbase=(Tafunction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tafuncprototype),G__get_linked_tagnum(&G__macroRootDictLN_Tafunction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       Tfunction *G__Lpbase=(Tfunction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tafuncprototype),G__get_linked_tagnum(&G__macroRootDictLN_Tfunction),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tafuncprototype),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_function))) {
     Tdistance_function *G__Lderived;
     G__Lderived=(Tdistance_function*)0x1000;
     {
       Tfunction *G__Lpbase=(Tfunction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_function),G__get_linked_tagnum(&G__macroRootDictLN_Tfunction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_function),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_position_pmt))) {
     Tdistance_position_pmt *G__Lderived;
     G__Lderived=(Tdistance_position_pmt*)0x1000;
     {
       Tdistance_function *G__Lpbase=(Tdistance_function*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_position_pmt),G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_function),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       Tfunction *G__Lpbase=(Tfunction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_position_pmt),G__get_linked_tagnum(&G__macroRootDictLN_Tfunction),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_position_pmt),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_position_retro))) {
     Tdistance_position_retro *G__Lderived;
     G__Lderived=(Tdistance_position_retro*)0x1000;
     {
       Tdistance_function *G__Lpbase=(Tdistance_function*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_position_retro),G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_function),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       Tfunction *G__Lpbase=(Tfunction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_position_retro),G__get_linked_tagnum(&G__macroRootDictLN_Tfunction),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_position_retro),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_fly_retro))) {
     Tdistance_fly_retro *G__Lderived;
     G__Lderived=(Tdistance_fly_retro*)0x1000;
     {
       Tdistance_function *G__Lpbase=(Tdistance_function*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_fly_retro),G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_function),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       Tfunction *G__Lpbase=(Tfunction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_fly_retro),G__get_linked_tagnum(&G__macroRootDictLN_Tfunction),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_fly_retro),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_Tfdirection))) {
     Tfdirection *G__Lderived;
     G__Lderived=(Tfdirection*)0x1000;
     {
       Tfunction *G__Lpbase=(Tfunction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tfdirection),G__get_linked_tagnum(&G__macroRootDictLN_Tfunction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tfdirection),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_Tfdirprototypenoretro))) {
     Tfdirprototypenoretro *G__Lderived;
     G__Lderived=(Tfdirprototypenoretro*)0x1000;
     {
       Tfdirection *G__Lpbase=(Tfdirection*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tfdirprototypenoretro),G__get_linked_tagnum(&G__macroRootDictLN_Tfdirection),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       Tfunction *G__Lpbase=(Tfunction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tfdirprototypenoretro),G__get_linked_tagnum(&G__macroRootDictLN_Tfunction),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tfdirprototypenoretro),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_Tfdirprototypeonretro))) {
     Tfdirprototypeonretro *G__Lderived;
     G__Lderived=(Tfdirprototypeonretro*)0x1000;
     {
       Tfdirection *G__Lpbase=(Tfdirection*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tfdirprototypeonretro),G__get_linked_tagnum(&G__macroRootDictLN_Tfdirection),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       Tfunction *G__Lpbase=(Tfunction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tfdirprototypeonretro),G__get_linked_tagnum(&G__macroRootDictLN_Tfunction),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tfdirprototypeonretro),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_Tfdirbydatanoretro))) {
     Tfdirbydatanoretro *G__Lderived;
     G__Lderived=(Tfdirbydatanoretro*)0x1000;
     {
       Tfdirection *G__Lpbase=(Tfdirection*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tfdirbydatanoretro),G__get_linked_tagnum(&G__macroRootDictLN_Tfdirection),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       Tfunction *G__Lpbase=(Tfunction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tfdirbydatanoretro),G__get_linked_tagnum(&G__macroRootDictLN_Tfunction),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tfdirbydatanoretro),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_Tfdirbydataonretro))) {
     Tfdirbydataonretro *G__Lderived;
     G__Lderived=(Tfdirbydataonretro*)0x1000;
     {
       Tfdirection *G__Lpbase=(Tfdirection*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tfdirbydataonretro),G__get_linked_tagnum(&G__macroRootDictLN_Tfdirection),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       Tfunction *G__Lpbase=(Tfunction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tfdirbydataonretro),G__get_linked_tagnum(&G__macroRootDictLN_Tfunction),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tfdirbydataonretro),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihood))) {
     Tlikelihood *G__Lderived;
     G__Lderived=(Tlikelihood*)0x1000;
     {
       Tfunction *G__Lpbase=(Tfunction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihood),G__get_linked_tagnum(&G__macroRootDictLN_Tfunction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihood),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihoodnoretro))) {
     Tlikelihoodnoretro *G__Lderived;
     G__Lderived=(Tlikelihoodnoretro*)0x1000;
     {
       Tlikelihood *G__Lpbase=(Tlikelihood*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihoodnoretro),G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihood),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       Tfunction *G__Lpbase=(Tfunction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihoodnoretro),G__get_linked_tagnum(&G__macroRootDictLN_Tfunction),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihoodnoretro),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihoodonretro))) {
     Tlikelihoodonretro *G__Lderived;
     G__Lderived=(Tlikelihoodonretro*)0x1000;
     {
       Tlikelihood *G__Lpbase=(Tlikelihood*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihoodonretro),G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihood),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       Tfunction *G__Lpbase=(Tfunction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihoodonretro),G__get_linked_tagnum(&G__macroRootDictLN_Tfunction),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihoodonretro),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihoodsum))) {
     Tlikelihoodsum *G__Lderived;
     G__Lderived=(Tlikelihoodsum*)0x1000;
     {
       Tlikelihood *G__Lpbase=(Tlikelihood*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihoodsum),G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihood),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       Tfunction *G__Lpbase=(Tfunction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihoodsum),G__get_linked_tagnum(&G__macroRootDictLN_Tfunction),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihoodsum),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_Ttheta_dir_i))) {
     Ttheta_dir_i *G__Lderived;
     G__Lderived=(Ttheta_dir_i*)0x1000;
     {
       Tfunction *G__Lpbase=(Tfunction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Ttheta_dir_i),G__get_linked_tagnum(&G__macroRootDictLN_Tfunction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Ttheta_dir_i),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_Ttheta_i_func))) {
     Ttheta_i_func *G__Lderived;
     G__Lderived=(Ttheta_i_func*)0x1000;
     {
       Tfunction *G__Lpbase=(Tfunction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Ttheta_i_func),G__get_linked_tagnum(&G__macroRootDictLN_Tfunction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Ttheta_i_func),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_Ttof))) {
     Ttof *G__Lderived;
     G__Lderived=(Ttof*)0x1000;
     {
       Tfunction *G__Lpbase=(Tfunction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Ttof),G__get_linked_tagnum(&G__macroRootDictLN_Tfunction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_Ttof),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_MyString))) {
     MyString *G__Lderived;
     G__Lderived=(MyString*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_MyString),G__get_linked_tagnum(&G__macroRootDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_MyString),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__macroRootDictLN_MultiRunAnalizeManager))) {
     MultiRunAnalizeManager *G__Lderived;
     G__Lderived=(MultiRunAnalizeManager*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__macroRootDictLN_MultiRunAnalizeManager),G__get_linked_tagnum(&G__macroRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablemacroRootDict() {

   /* Setting up typedef entry */
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__macroRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__macroRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__macroRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__macroRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__macroRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__macroRootDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__macroRootDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__macroRootDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__macroRootDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__macroRootDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__macroRootDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__macroRootDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__macroRootDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__macroRootDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__macroRootDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__macroRootDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__macroRootDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__macroRootDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__macroRootDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__macroRootDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__macroRootDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__macroRootDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__macroRootDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__macroRootDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__macroRootDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__macroRootDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__macroRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__macroRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__macroRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__macroRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__macroRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__macroRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__macroRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__macroRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__macroRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__macroRootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__macroRootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Float_t>",117,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__macroRootDictLN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__macroRootDictLN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<float>",117,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TReconstructhit>",117,G__get_linked_tagnum(&G__macroRootDictLN_vectorlETReconstructhitcOallocatorlETReconstructhitgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__macroRootDictLN_reverse_iteratorlEvectorlETReconstructhitcOallocatorlETReconstructhitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlETReconstructhitcOallocatorlETReconstructhitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__macroRootDictLN_reverse_iteratorlEvectorlETReconstructhitcOallocatorlETReconstructhitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlETReconstructhitcOallocatorlETReconstructhitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<std::string,std::string>",117,G__get_linked_tagnum(&G__macroRootDictLN_pairlEstringcOstringgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<string,std::string>",117,G__get_linked_tagnum(&G__macroRootDictLN_pairlEstringcOstringgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<std::string,std::string> >",117,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEpairlEstringcOstringgRcOallocatorlEpairlEstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<string,std::string> >",117,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEpairlEstringcOstringgRcOallocatorlEpairlEstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__macroRootDictLN_reverse_iteratorlEvectorlEpairlEstringcOstringgRcOallocatorlEpairlEstringcOstringgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEpairlEstringcOstringgRcOallocatorlEpairlEstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__macroRootDictLN_reverse_iteratorlEvectorlEpairlEstringcOstringgRcOallocatorlEpairlEstringcOstringgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEpairlEstringcOstringgRcOallocatorlEpairlEstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<string,string> >",117,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEpairlEstringcOstringgRcOallocatorlEpairlEstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__macroRootDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__macroRootDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Thitinfo>",117,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEThitinfocOallocatorlEThitinfogRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__macroRootDictLN_reverse_iteratorlEvectorlEThitinfocOallocatorlEThitinfogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEThitinfocOallocatorlEThitinfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__macroRootDictLN_reverse_iteratorlEvectorlEThitinfocOallocatorlEThitinfogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEThitinfocOallocatorlEThitinfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<OneDataParameters>",117,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEOneDataParameterscOallocatorlEOneDataParametersgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__macroRootDictLN_reverse_iteratorlEvectorlEOneDataParameterscOallocatorlEOneDataParametersgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEOneDataParameterscOallocatorlEOneDataParametersgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__macroRootDictLN_reverse_iteratorlEvectorlEOneDataParameterscOallocatorlEOneDataParametersgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEOneDataParameterscOallocatorlEOneDataParametersgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<OneGoodnessParameters>",117,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEOneGoodnessParameterscOallocatorlEOneGoodnessParametersgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__macroRootDictLN_reverse_iteratorlEvectorlEOneGoodnessParameterscOallocatorlEOneGoodnessParametersgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEOneGoodnessParameterscOallocatorlEOneGoodnessParametersgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__macroRootDictLN_reverse_iteratorlEvectorlEOneGoodnessParameterscOallocatorlEOneGoodnessParametersgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEOneGoodnessParameterscOallocatorlEOneGoodnessParametersgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<OneLikelihoodParameters>",117,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEOneLikelihoodParameterscOallocatorlEOneLikelihoodParametersgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__macroRootDictLN_reverse_iteratorlEvectorlEOneLikelihoodParameterscOallocatorlEOneLikelihoodParametersgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEOneLikelihoodParameterscOallocatorlEOneLikelihoodParametersgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__macroRootDictLN_reverse_iteratorlEvectorlEOneLikelihoodParameterscOallocatorlEOneLikelihoodParametersgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEOneLikelihoodParameterscOallocatorlEOneLikelihoodParametersgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<OneGoodnessMinimizeParameters>",117,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEOneGoodnessMinimizeParameterscOallocatorlEOneGoodnessMinimizeParametersgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__macroRootDictLN_reverse_iteratorlEvectorlEOneGoodnessMinimizeParameterscOallocatorlEOneGoodnessMinimizeParametersgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEOneGoodnessMinimizeParameterscOallocatorlEOneGoodnessMinimizeParametersgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__macroRootDictLN_reverse_iteratorlEvectorlEOneGoodnessMinimizeParameterscOallocatorlEOneGoodnessMinimizeParametersgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEOneGoodnessMinimizeParameterscOallocatorlEOneGoodnessMinimizeParametersgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<OneRunAnalizeManager*>",117,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEOneRunAnalizeManagermUcOallocatorlEOneRunAnalizeManagermUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__macroRootDictLN_reverse_iteratorlEvectorlEOneRunAnalizeManagermUcOallocatorlEOneRunAnalizeManagermUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEOneRunAnalizeManagermUcOallocatorlEOneRunAnalizeManagermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__macroRootDictLN_reverse_iteratorlEvectorlEOneRunAnalizeManagermUcOallocatorlEOneRunAnalizeManagermUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEOneRunAnalizeManagermUcOallocatorlEOneRunAnalizeManagermUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* Eventdisplay */
static void G__setup_memvarEventdisplay(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_Eventdisplay));
   { Eventdisplay *p; p=(Eventdisplay*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TH2D),-1,-1,2,"hall=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TH2D),-1,-1,2,"hcharge=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TH2D),-1,-1,2,"htime=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TH2D),-1,-1,2,"hhit=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TArc),-1,-1,2,"a1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TArc),-1,-1,2,"a2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TPave),-1,-1,2,"p1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"WCradius=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"WClength=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* goodness_data */
static void G__setup_memvargoodness_data(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_goodness_data));
   { goodness_data *p; p=(goodness_data*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TLorentzVector),-1,-1,4,"vector=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"goodness=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* l_dir_data */
static void G__setup_memvarl_dir_data(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_l_dir_data));
   { l_dir_data *p; p=(l_dir_data*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"likelihood=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"costheta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AnalizedData */
static void G__setup_memvarAnalizedData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_AnalizedData));
   { AnalizedData *p; p=(AnalizedData*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_goodness_data),-1,-1,4,"gdatagridsearch=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_l_dir_data),-1,-1,4,"ldatagridsearch=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_goodness_data),-1,-1,4,"gdataminimized=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_l_dir_data),-1,-1,4,"ldataminimized=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* C4Number */
static void G__setup_memvarC4Number(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_C4Number));
   { C4Number *p; p=(C4Number*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"x=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"y=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"z=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"t=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CSearch_range */
static void G__setup_memvarCSearch_range(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_CSearch_range));
   { CSearch_range *p; p=(CSearch_range*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TLorentzVector),-1,-1,4,"search_min=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TLorentzVector),-1,-1,4,"search_width=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_C4Number),-1,-1,4,"search_number=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FileList */
static void G__setup_memvarFileList(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_FileList));
   { FileList *p; p=(FileList*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* efficiency */
static void G__setup_memvarefficiency(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_efficiency));
   { efficiency *p; p=(efficiency*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_FileList),-1,-1,4,"filelist=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Nevent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TH1DByTree */
static void G__setup_memvarTH1DByTree(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_TH1DByTree));
   { TH1DByTree *p; p=(TH1DByTree*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_TH1DByTreecLcLAxis),-1,-2,1,G__FastAllocString(2048).Format("x=%lldLL",(long long)TH1DByTree::x).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_TH1DByTreecLcLAxis),-1,-2,1,G__FastAllocString(2048).Format("y=%lldLL",(long long)TH1DByTree::y).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_TH1DByTreecLcLAxis),-1,-2,1,G__FastAllocString(2048).Format("z=%lldLL",(long long)TH1DByTree::z).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_TH1DByTreecLcLAxis),-1,-2,1,G__FastAllocString(2048).Format("t=%lldLL",(long long)TH1DByTree::t).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TF1),-1,-1,4,"fgaussian=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Nevent=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"central=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TH1DByTreecLcLAxis),-1,-1,4,"axis=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HistError */
static void G__setup_memvarHistError(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_HistError));
   { HistError *p; p=(HistError*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_FileList),-1,-1,4,"filelist=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-1,4,"paraname=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"numorig=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"minorig=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"maxorig=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"widthorig=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HistBias */
static void G__setup_memvarHistBias(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_HistBias));
   { HistBias *p; p=(HistBias*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_FileList),-1,-1,4,"filelist=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-1,4,"paraname=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"numorig=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"minorig=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"maxorig=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"widthorig=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AngleRange */
static void G__setup_memvarAngleRange(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_AngleRange));
   { AngleRange *p; p=(AngleRange*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"costhetamin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"costhetawidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"costhetanum=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"phimin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"phiwidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"phinum=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TReconstructhit */
static void G__setup_memvarTReconstructhit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_TReconstructhit));
   { TReconstructhit *p; p=(TReconstructhit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"hittype=",0,"1: onretro , 2: noretro 3: darkrate 4: others");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"onegoodnessnoretro=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"onegoodnessonretro=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"onelikelihoodnoretro=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"onelikelihoodonretro=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TReconstructdata */
static void G__setup_memvarTReconstructdata(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_TReconstructdata));
   { TReconstructdata *p; p=(TReconstructdata*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TLorentzVector),-1,-1,2,"vector=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TVector3),-1,-1,2,"direction=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"energy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"goodness=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"likelihood=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"likelihoodonretro=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"likelihoodnoretro=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlETReconstructhitcOallocatorlETReconstructhitgRsPgR),G__defined_typename("vector<TReconstructhit>"),-1,2,"fhit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TReconstructdata_minimize */
static void G__setup_memvarTReconstructdata_minimize(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_TReconstructdata_minimize));
   { TReconstructdata_minimize *p; p=(TReconstructdata_minimize*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"status=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"ncalls=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nIterations=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Thitinfo */
static void G__setup_memvarThitinfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_Thitinfo));
   { Thitinfo *p; p=(Thitinfo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_WCSimRootPMT),-1,-1,4,"pmt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"WCradius=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"WClength=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"hittime=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* OneDataParameters */
static void G__setup_memvarOneDataParameters(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameters));
   { OneDataParameters *p; p=(OneDataParameters*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameterscLcLDetector),-1,-2,1,G__FastAllocString(2048).Format("SK=%lldLL",(long long)OneDataParameters::SK).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameterscLcLDetector),-1,-2,1,G__FastAllocString(2048).Format("HK=%lldLL",(long long)OneDataParameters::HK).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->detector)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameterscLcLDetector),-1,-1,1,"detector=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameterscLcLParticle),-1,-2,1,G__FastAllocString(2048).Format("electron=%lldLL",(long long)OneDataParameters::electron).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameterscLcLParticle),-1,-2,1,G__FastAllocString(2048).Format("positron=%lldLL",(long long)OneDataParameters::positron).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameterscLcLParticle),-1,-2,1,G__FastAllocString(2048).Format("muon=%lldLL",(long long)OneDataParameters::muon).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameterscLcLParticle),-1,-2,1,G__FastAllocString(2048).Format("antimuon=%lldLL",(long long)OneDataParameters::antimuon).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameterscLcLParticle),-1,-2,1,G__FastAllocString(2048).Format("proton=%lldLL",(long long)OneDataParameters::proton).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->particle)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameterscLcLParticle),-1,-1,1,"particle=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameterscLcLPostype),-1,-2,1,G__FastAllocString(2048).Format("postype_fixed=%lldLL",(long long)OneDataParameters::postype_fixed).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameterscLcLPostype),-1,-2,1,G__FastAllocString(2048).Format("postype_uniformrandom=%lldLL",(long long)OneDataParameters::postype_uniformrandom).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->postype)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameterscLcLPostype),-1,-1,1,"postype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fixedPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TVector3),-1,-1,1,"fixedPosition=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uniformPositionmin)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TVector3),-1,-1,1,"uniformPositionmin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uniformPositionmax)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TVector3),-1,-1,1,"uniformPositionmax=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameterscLcLDirtype),-1,-2,1,G__FastAllocString(2048).Format("dirtype_fixed=%lldLL",(long long)OneDataParameters::dirtype_fixed).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameterscLcLDirtype),-1,-2,1,G__FastAllocString(2048).Format("dirtype_uniformrandom=%lldLL",(long long)OneDataParameters::dirtype_uniformrandom).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dirtype)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameterscLcLDirtype),-1,-1,1,"dirtype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fixedcostheta)-(long)(p)),100,0,0,-1,-1,-1,1,"fixedcostheta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fixedphi)-(long)(p)),100,0,0,-1,-1,-1,1,"fixedphi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uniformcosthetamin)-(long)(p)),100,0,0,-1,-1,-1,1,"uniformcosthetamin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uniformcosthetamax)-(long)(p)),100,0,0,-1,-1,-1,1,"uniformcosthetamax=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uniformphimin)-(long)(p)),100,0,0,-1,-1,-1,1,"uniformphimin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uniformphimax)-(long)(p)),100,0,0,-1,-1,-1,1,"uniformphimax=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameterscLcLEtype),-1,-2,1,G__FastAllocString(2048).Format("etype_fixed=%lldLL",(long long)OneDataParameters::etype_fixed).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameterscLcLEtype),-1,-2,1,G__FastAllocString(2048).Format("etype_uniformrandom=%lldLL",(long long)OneDataParameters::etype_uniformrandom).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->etype)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameterscLcLEtype),-1,-1,1,"etype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fixedenergy)-(long)(p)),100,0,0,-1,-1,-1,1,"fixedenergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uniformenergymin)-(long)(p)),100,0,0,-1,-1,-1,1,"uniformenergymin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uniformenergymax)-(long)(p)),100,0,0,-1,-1,-1,1,"uniformenergymax=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameterscLcLInforeflectivity),-1,-2,1,G__FastAllocString(2048).Format("Inforeflectivity_blacksheet=%lldLL",(long long)OneDataParameters::Inforeflectivity_blacksheet).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameterscLcLInforeflectivity),-1,-2,1,G__FastAllocString(2048).Format("Inforeflectivity_conventional=%lldLL",(long long)OneDataParameters::Inforeflectivity_conventional).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameterscLcLInforeflectivity),-1,-2,1,G__FastAllocString(2048).Format("Inforeflectivity_trapezoid=%lldLL",(long long)OneDataParameters::Inforeflectivity_trapezoid).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inforeflectivity)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameterscLcLInforeflectivity),-1,-1,1,"inforeflectivity=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trapezoidreflectivity)-(long)(p)),100,0,0,-1,-1,-1,1,"trapezoidreflectivity=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trapezoidanglemin)-(long)(p)),100,0,0,-1,-1,-1,1,"trapezoidanglemin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trapezoidanglemax)-(long)(p)),100,0,0,-1,-1,-1,1,"trapezoidanglemax=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameterscLcLReflectspread),-1,-2,1,G__FastAllocString(2048).Format("Reflectspread_blacksheet=%lldLL",(long long)OneDataParameters::Reflectspread_blacksheet).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameterscLcLReflectspread),-1,-2,1,G__FastAllocString(2048).Format("nospread=%lldLL",(long long)OneDataParameters::nospread).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->reflectspread)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameterscLcLReflectspread),-1,-1,1,"reflectspread=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->triggerthereshold)-(long)(p)),105,0,0,-1,-1,-1,1,"triggerthereshold=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->triggerwindow)-(long)(p)),100,0,0,-1,-1,-1,1,"triggerwindow=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->triggerprewindow)-(long)(p)),100,0,0,-1,-1,-1,1,"triggerprewindow=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->triggerpostwindow)-(long)(p)),100,0,0,-1,-1,-1,1,"triggerpostwindow=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->darkrate)-(long)(p)),100,0,0,-1,-1,-1,1,"darkrate=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->adjustfornoise)-(long)(p)),103,0,0,-1,-1,-1,1,"adjustfornoise=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eventnumber)-(long)(p)),105,0,0,-1,-1,-1,1,"eventnumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vp)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEpairlEstringcOstringgRcOallocatorlEpairlEstringcOstringgRsPgRsPgR),G__defined_typename("vector<std::pair<std::string,std::string> >"),-1,1,"vp=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_string),-1,-1,4,"file=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* OneRunDataAnalizeManager */
static void G__setup_memvarOneRunDataAnalizeManager(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_OneRunDataAnalizeManager));
   { OneRunDataAnalizeManager *p; p=(OneRunDataAnalizeManager*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ncherenkovdigihits)-(long)(p)),105,0,0,-1,-1,-1,1,"ncherenkovdigihits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->reconstructdatatrue)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TReconstructdata),-1,-1,1,"reconstructdatatrue=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vhitinfo)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEThitinfocOallocatorlEThitinfogRsPgR),G__defined_typename("vector<Thitinfo>"),-1,1,"vhitinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vncherenkovdigihits)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"vncherenkovdigihits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TFile),-1,-1,4,"dfile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TTree),-1,-1,4,"wcsimT=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TTree),-1,-1,4,"wcsimGeoT=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_WCSimRootEvent),-1,-1,4,"wcsimrootevent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_WCSimRootGeom),-1,-1,4,"wcsimrootgeom=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"neventdata=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameters),-1,-1,4,"onedataparameters=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* OneGoodnessParameters */
static void G__setup_memvarOneGoodnessParameters(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameters));
   { OneGoodnessParameters *p; p=(OneGoodnessParameters*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameterscLcLDetector),-1,-2,1,G__FastAllocString(2048).Format("SK=%lldLL",(long long)OneGoodnessParameters::SK).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameterscLcLDetector),-1,-2,1,G__FastAllocString(2048).Format("HK=%lldLL",(long long)OneGoodnessParameters::HK).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->detector)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameterscLcLDetector),-1,-1,1,"detector=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameterscLcLParticle),-1,-2,1,G__FastAllocString(2048).Format("electron=%lldLL",(long long)OneGoodnessParameters::electron).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameterscLcLParticle),-1,-2,1,G__FastAllocString(2048).Format("positron=%lldLL",(long long)OneGoodnessParameters::positron).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameterscLcLParticle),-1,-2,1,G__FastAllocString(2048).Format("muon=%lldLL",(long long)OneGoodnessParameters::muon).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameterscLcLParticle),-1,-2,1,G__FastAllocString(2048).Format("antimuon=%lldLL",(long long)OneGoodnessParameters::antimuon).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameterscLcLParticle),-1,-2,1,G__FastAllocString(2048).Format("proton=%lldLL",(long long)OneGoodnessParameters::proton).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->particle)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameterscLcLParticle),-1,-1,1,"particle=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameterscLcLPostype),-1,-2,1,G__FastAllocString(2048).Format("postype_fixed=%lldLL",(long long)OneGoodnessParameters::postype_fixed).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameterscLcLPostype),-1,-2,1,G__FastAllocString(2048).Format("postype_uniformrandom=%lldLL",(long long)OneGoodnessParameters::postype_uniformrandom).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->postype)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameterscLcLPostype),-1,-1,1,"postype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fixedPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TVector3),-1,-1,1,"fixedPosition=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uniformPositionmin)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TVector3),-1,-1,1,"uniformPositionmin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uniformPositionmax)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TVector3),-1,-1,1,"uniformPositionmax=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameterscLcLDirtype),-1,-2,1,G__FastAllocString(2048).Format("dirtype_fixed=%lldLL",(long long)OneGoodnessParameters::dirtype_fixed).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameterscLcLDirtype),-1,-2,1,G__FastAllocString(2048).Format("dirtype_uniformrandom=%lldLL",(long long)OneGoodnessParameters::dirtype_uniformrandom).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dirtype)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameterscLcLDirtype),-1,-1,1,"dirtype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fixedcostheta)-(long)(p)),100,0,0,-1,-1,-1,1,"fixedcostheta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fixedphi)-(long)(p)),100,0,0,-1,-1,-1,1,"fixedphi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uniformcosthetamin)-(long)(p)),100,0,0,-1,-1,-1,1,"uniformcosthetamin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uniformcosthetamax)-(long)(p)),100,0,0,-1,-1,-1,1,"uniformcosthetamax=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uniformphimin)-(long)(p)),100,0,0,-1,-1,-1,1,"uniformphimin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uniformphimax)-(long)(p)),100,0,0,-1,-1,-1,1,"uniformphimax=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameterscLcLEtype),-1,-2,1,G__FastAllocString(2048).Format("etype_fixed=%lldLL",(long long)OneGoodnessParameters::etype_fixed).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameterscLcLEtype),-1,-2,1,G__FastAllocString(2048).Format("etype_uniformrandom=%lldLL",(long long)OneGoodnessParameters::etype_uniformrandom).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->etype)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameterscLcLEtype),-1,-1,1,"etype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fixedenergy)-(long)(p)),100,0,0,-1,-1,-1,1,"fixedenergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uniformenergymin)-(long)(p)),100,0,0,-1,-1,-1,1,"uniformenergymin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uniformenergymax)-(long)(p)),100,0,0,-1,-1,-1,1,"uniformenergymax=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameterscLcLInforeflectivity),-1,-2,1,G__FastAllocString(2048).Format("Inforeflectivity_blacksheet=%lldLL",(long long)OneGoodnessParameters::Inforeflectivity_blacksheet).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameterscLcLInforeflectivity),-1,-2,1,G__FastAllocString(2048).Format("Inforeflectivity_conventional=%lldLL",(long long)OneGoodnessParameters::Inforeflectivity_conventional).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameterscLcLInforeflectivity),-1,-2,1,G__FastAllocString(2048).Format("Inforeflectivity_trapezoid=%lldLL",(long long)OneGoodnessParameters::Inforeflectivity_trapezoid).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inforeflectivity)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameterscLcLInforeflectivity),-1,-1,1,"inforeflectivity=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trapezoidreflectivity)-(long)(p)),100,0,0,-1,-1,-1,1,"trapezoidreflectivity=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trapezoidanglemin)-(long)(p)),100,0,0,-1,-1,-1,1,"trapezoidanglemin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trapezoidanglemax)-(long)(p)),100,0,0,-1,-1,-1,1,"trapezoidanglemax=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameterscLcLReflectspread),-1,-2,1,G__FastAllocString(2048).Format("Reflectspread_blacksheet=%lldLL",(long long)OneGoodnessParameters::Reflectspread_blacksheet).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameterscLcLReflectspread),-1,-2,1,G__FastAllocString(2048).Format("nospread=%lldLL",(long long)OneGoodnessParameters::nospread).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->reflectspread)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameterscLcLReflectspread),-1,-1,1,"reflectspread=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->triggerthereshold)-(long)(p)),105,0,0,-1,-1,-1,1,"triggerthereshold=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->triggerwindow)-(long)(p)),100,0,0,-1,-1,-1,1,"triggerwindow=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->triggerprewindow)-(long)(p)),100,0,0,-1,-1,-1,1,"triggerprewindow=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->triggerpostwindow)-(long)(p)),100,0,0,-1,-1,-1,1,"triggerpostwindow=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->darkrate)-(long)(p)),100,0,0,-1,-1,-1,1,"darkrate=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->adjustfornoise)-(long)(p)),103,0,0,-1,-1,-1,1,"adjustfornoise=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eventnumber)-(long)(p)),105,0,0,-1,-1,-1,1,"eventnumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sigma)-(long)(p)),100,0,0,-1,-1,-1,1,"sigma=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameterscLcLGoodnessType),-1,-2,1,G__FastAllocString(2048).Format("GoodnessType_noretro=%lldLL",(long long)OneGoodnessParameters::GoodnessType_noretro).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameterscLcLGoodnessType),-1,-2,1,G__FastAllocString(2048).Format("GoodnessType_onretro=%lldLL",(long long)OneGoodnessParameters::GoodnessType_onretro).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameterscLcLGoodnessType),-1,-2,1,G__FastAllocString(2048).Format("GoodnessType_sum=%lldLL",(long long)OneGoodnessParameters::GoodnessType_sum).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameterscLcLGoodnessType),-1,-2,1,G__FastAllocString(2048).Format("GoodnessType_compare=%lldLL",(long long)OneGoodnessParameters::GoodnessType_compare).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->goodnesstype)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameterscLcLGoodnessType),-1,-1,1,"goodnesstype=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameterscLcLGoodnessSearchRangeType),-1,-2,1,G__FastAllocString(2048).Format("GSRT_true=%lldLL",(long long)OneGoodnessParameters::GSRT_true).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameterscLcLGoodnessSearchRangeType),-1,-2,1,G__FastAllocString(2048).Format("GSRT_normal=%lldLL",(long long)OneGoodnessParameters::GSRT_normal).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->goodnesssearchrangetype)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameterscLcLGoodnessSearchRangeType),-1,-1,1,"goodnesssearchrangetype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->searchrange)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_CSearch_range),-1,-1,1,"searchrange=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->goodnesseventnumber)-(long)(p)),105,0,0,-1,-1,-1,1,"goodnesseventnumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vp)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEpairlEstringcOstringgRcOallocatorlEpairlEstringcOstringgRsPgRsPgR),G__defined_typename("vector<std::pair<std::string,std::string> >"),-1,1,"vp=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_string),-1,-1,4,"file=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* OneRunGoodnessAnalizeManager */
static void G__setup_memvarOneRunGoodnessAnalizeManager(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_OneRunGoodnessAnalizeManager));
   { OneRunGoodnessAnalizeManager *p; p=(OneRunGoodnessAnalizeManager*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TFile),-1,-1,4,"gfile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TTree),-1,-1,4,"goodnessT=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TTree),-1,-1,4,"optionT=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TReconstructdata),-1,-1,4,"data=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_CSearch_range),-1,-1,4,"range=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"neventgoodness=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameters),-1,-1,4,"onegoodnessparameters=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* OneLikelihoodParameters */
static void G__setup_memvarOneLikelihoodParameters(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameters));
   { OneLikelihoodParameters *p; p=(OneLikelihoodParameters*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLDetector),-1,-2,1,G__FastAllocString(2048).Format("SK=%lldLL",(long long)OneLikelihoodParameters::SK).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLDetector),-1,-2,1,G__FastAllocString(2048).Format("HK=%lldLL",(long long)OneLikelihoodParameters::HK).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->detector)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLDetector),-1,-1,1,"detector=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLParticle),-1,-2,1,G__FastAllocString(2048).Format("electron=%lldLL",(long long)OneLikelihoodParameters::electron).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLParticle),-1,-2,1,G__FastAllocString(2048).Format("positron=%lldLL",(long long)OneLikelihoodParameters::positron).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLParticle),-1,-2,1,G__FastAllocString(2048).Format("muon=%lldLL",(long long)OneLikelihoodParameters::muon).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLParticle),-1,-2,1,G__FastAllocString(2048).Format("antimuon=%lldLL",(long long)OneLikelihoodParameters::antimuon).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLParticle),-1,-2,1,G__FastAllocString(2048).Format("proton=%lldLL",(long long)OneLikelihoodParameters::proton).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->particle)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLParticle),-1,-1,1,"particle=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLPostype),-1,-2,1,G__FastAllocString(2048).Format("postype_fixed=%lldLL",(long long)OneLikelihoodParameters::postype_fixed).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLPostype),-1,-2,1,G__FastAllocString(2048).Format("postype_uniformrandom=%lldLL",(long long)OneLikelihoodParameters::postype_uniformrandom).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->postype)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLPostype),-1,-1,1,"postype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fixedPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TVector3),-1,-1,1,"fixedPosition=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uniformPositionmin)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TVector3),-1,-1,1,"uniformPositionmin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uniformPositionmax)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TVector3),-1,-1,1,"uniformPositionmax=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLDirtype),-1,-2,1,G__FastAllocString(2048).Format("dirtype_fixed=%lldLL",(long long)OneLikelihoodParameters::dirtype_fixed).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLDirtype),-1,-2,1,G__FastAllocString(2048).Format("dirtype_uniformrandom=%lldLL",(long long)OneLikelihoodParameters::dirtype_uniformrandom).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dirtype)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLDirtype),-1,-1,1,"dirtype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fixedcostheta)-(long)(p)),100,0,0,-1,-1,-1,1,"fixedcostheta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fixedphi)-(long)(p)),100,0,0,-1,-1,-1,1,"fixedphi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uniformcosthetamin)-(long)(p)),100,0,0,-1,-1,-1,1,"uniformcosthetamin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uniformcosthetamax)-(long)(p)),100,0,0,-1,-1,-1,1,"uniformcosthetamax=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uniformphimin)-(long)(p)),100,0,0,-1,-1,-1,1,"uniformphimin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uniformphimax)-(long)(p)),100,0,0,-1,-1,-1,1,"uniformphimax=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLEtype),-1,-2,1,G__FastAllocString(2048).Format("etype_fixed=%lldLL",(long long)OneLikelihoodParameters::etype_fixed).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLEtype),-1,-2,1,G__FastAllocString(2048).Format("etype_uniformrandom=%lldLL",(long long)OneLikelihoodParameters::etype_uniformrandom).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->etype)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLEtype),-1,-1,1,"etype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fixedenergy)-(long)(p)),100,0,0,-1,-1,-1,1,"fixedenergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uniformenergymin)-(long)(p)),100,0,0,-1,-1,-1,1,"uniformenergymin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uniformenergymax)-(long)(p)),100,0,0,-1,-1,-1,1,"uniformenergymax=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLInforeflectivity),-1,-2,1,G__FastAllocString(2048).Format("Inforeflectivity_blacksheet=%lldLL",(long long)OneLikelihoodParameters::Inforeflectivity_blacksheet).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLInforeflectivity),-1,-2,1,G__FastAllocString(2048).Format("Inforeflectivity_conventional=%lldLL",(long long)OneLikelihoodParameters::Inforeflectivity_conventional).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLInforeflectivity),-1,-2,1,G__FastAllocString(2048).Format("Inforeflectivity_trapezoid=%lldLL",(long long)OneLikelihoodParameters::Inforeflectivity_trapezoid).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inforeflectivity)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLInforeflectivity),-1,-1,1,"inforeflectivity=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trapezoidreflectivity)-(long)(p)),100,0,0,-1,-1,-1,1,"trapezoidreflectivity=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trapezoidanglemin)-(long)(p)),100,0,0,-1,-1,-1,1,"trapezoidanglemin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trapezoidanglemax)-(long)(p)),100,0,0,-1,-1,-1,1,"trapezoidanglemax=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLReflectspread),-1,-2,1,G__FastAllocString(2048).Format("Reflectspread_blacksheet=%lldLL",(long long)OneLikelihoodParameters::Reflectspread_blacksheet).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLReflectspread),-1,-2,1,G__FastAllocString(2048).Format("nospread=%lldLL",(long long)OneLikelihoodParameters::nospread).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->reflectspread)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLReflectspread),-1,-1,1,"reflectspread=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->triggerthereshold)-(long)(p)),105,0,0,-1,-1,-1,1,"triggerthereshold=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->triggerwindow)-(long)(p)),100,0,0,-1,-1,-1,1,"triggerwindow=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->triggerprewindow)-(long)(p)),100,0,0,-1,-1,-1,1,"triggerprewindow=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->triggerpostwindow)-(long)(p)),100,0,0,-1,-1,-1,1,"triggerpostwindow=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->darkrate)-(long)(p)),100,0,0,-1,-1,-1,1,"darkrate=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->adjustfornoise)-(long)(p)),103,0,0,-1,-1,-1,1,"adjustfornoise=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eventnumber)-(long)(p)),105,0,0,-1,-1,-1,1,"eventnumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sigma)-(long)(p)),100,0,0,-1,-1,-1,1,"sigma=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLGoodnessType),-1,-2,1,G__FastAllocString(2048).Format("GoodnessType_noretro=%lldLL",(long long)OneLikelihoodParameters::GoodnessType_noretro).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLGoodnessType),-1,-2,1,G__FastAllocString(2048).Format("GoodnessType_onretro=%lldLL",(long long)OneLikelihoodParameters::GoodnessType_onretro).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLGoodnessType),-1,-2,1,G__FastAllocString(2048).Format("GoodnessType_sum=%lldLL",(long long)OneLikelihoodParameters::GoodnessType_sum).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLGoodnessType),-1,-2,1,G__FastAllocString(2048).Format("GoodnessType_compare=%lldLL",(long long)OneLikelihoodParameters::GoodnessType_compare).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->goodnesstype)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLGoodnessType),-1,-1,1,"goodnesstype=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLGoodnessSearchRangeType),-1,-2,1,G__FastAllocString(2048).Format("GSRT_true=%lldLL",(long long)OneLikelihoodParameters::GSRT_true).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLGoodnessSearchRangeType),-1,-2,1,G__FastAllocString(2048).Format("GSRT_normal=%lldLL",(long long)OneLikelihoodParameters::GSRT_normal).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->goodnesssearchrangetype)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLGoodnessSearchRangeType),-1,-1,1,"goodnesssearchrangetype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->searchrange)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_CSearch_range),-1,-1,1,"searchrange=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->goodnesseventnumber)-(long)(p)),105,0,0,-1,-1,-1,1,"goodnesseventnumber=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLLikelihoodType),-1,-2,1,G__FastAllocString(2048).Format("LikelihoodType_noretro=%lldLL",(long long)OneLikelihoodParameters::LikelihoodType_noretro).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLLikelihoodType),-1,-2,1,G__FastAllocString(2048).Format("LikelihoodType_onretro=%lldLL",(long long)OneLikelihoodParameters::LikelihoodType_onretro).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLLikelihoodType),-1,-2,1,G__FastAllocString(2048).Format("LikelihoodType_sum=%lldLL",(long long)OneLikelihoodParameters::LikelihoodType_sum).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->likelihoodtype)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLLikelihoodType),-1,-1,1,"likelihoodtype=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLNoRetroFdirection),-1,-2,1,G__FastAllocString(2048).Format("NoRetroFdirection_notuse=%lldLL",(long long)OneLikelihoodParameters::NoRetroFdirection_notuse).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLNoRetroFdirection),-1,-2,1,G__FastAllocString(2048).Format("NoRetroFdirection_prototype=%lldLL",(long long)OneLikelihoodParameters::NoRetroFdirection_prototype).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLNoRetroFdirection),-1,-2,1,G__FastAllocString(2048).Format("NoRetroFdirection_bydata=%lldLL",(long long)OneLikelihoodParameters::NoRetroFdirection_bydata).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->noretrofdirection)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLNoRetroFdirection),-1,-1,1,"noretrofdirection=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLOnRetroFdirection),-1,-2,1,G__FastAllocString(2048).Format("OnRetroFdirection_notuse=%lldLL",(long long)OneLikelihoodParameters::OnRetroFdirection_notuse).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLOnRetroFdirection),-1,-2,1,G__FastAllocString(2048).Format("OnRetroFdirection_prototype=%lldLL",(long long)OneLikelihoodParameters::OnRetroFdirection_prototype).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLOnRetroFdirection),-1,-2,1,G__FastAllocString(2048).Format("OnRetroFdirection_bydata=%lldLL",(long long)OneLikelihoodParameters::OnRetroFdirection_bydata).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->onretrofdirection)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLOnRetroFdirection),-1,-1,1,"onretrofdirection=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLNoRetroAfunction),-1,-2,1,G__FastAllocString(2048).Format("NoRetroAfunction_notuse=%lldLL",(long long)OneLikelihoodParameters::NoRetroAfunction_notuse).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLNoRetroAfunction),-1,-2,1,G__FastAllocString(2048).Format("NoRetroAfunction_prototype=%lldLL",(long long)OneLikelihoodParameters::NoRetroAfunction_prototype).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->noretroafunction)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLNoRetroAfunction),-1,-1,1,"noretroafunction=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLOnRetroAfunction),-1,-2,1,G__FastAllocString(2048).Format("OnRetroAfunction_notuse=%lldLL",(long long)OneLikelihoodParameters::OnRetroAfunction_notuse).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLOnRetroAfunction),-1,-2,1,G__FastAllocString(2048).Format("OnRetroAfunction_prototype=%lldLL",(long long)OneLikelihoodParameters::OnRetroAfunction_prototype).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->onretroafunction)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLOnRetroAfunction),-1,-1,1,"onretroafunction=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLLikelihoodSearchRangeType),-1,-2,1,G__FastAllocString(2048).Format("likelihoodsearchrangetype_true=%lldLL",(long long)OneLikelihoodParameters::likelihoodsearchrangetype_true).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLLikelihoodSearchRangeType),-1,-2,1,G__FastAllocString(2048).Format("likelihoodsearchrangetype_normal=%lldLL",(long long)OneLikelihoodParameters::likelihoodsearchrangetype_normal).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->likelihoodsearchrangetype)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameterscLcLLikelihoodSearchRangeType),-1,-1,1,"likelihoodsearchrangetype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->costhetanum)-(long)(p)),100,0,0,-1,-1,-1,1,"costhetanum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phinum)-(long)(p)),100,0,0,-1,-1,-1,1,"phinum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timewindownoretro)-(long)(p)),100,0,0,-1,-1,-1,1,"timewindownoretro=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timewindowonretro)-(long)(p)),100,0,0,-1,-1,-1,1,"timewindowonretro=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vp)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEpairlEstringcOstringgRcOallocatorlEpairlEstringcOstringgRsPgRsPgR),G__defined_typename("vector<std::pair<std::string,std::string> >"),-1,1,"vp=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_string),-1,-1,4,"file=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* OneRunLikelihoodAnalizeManager */
static void G__setup_memvarOneRunLikelihoodAnalizeManager(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_OneRunLikelihoodAnalizeManager));
   { OneRunLikelihoodAnalizeManager *p; p=(OneRunLikelihoodAnalizeManager*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TFile),-1,-1,4,"lfile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TTree),-1,-1,4,"likelihoodT=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TTree),-1,-1,4,"loptionT=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TReconstructdata),-1,-1,4,"data=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_AngleRange),-1,-1,4,"range=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"neventlikelihood=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameters),-1,-1,4,"onelikelihoodparameters=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TOption_minimize */
static void G__setup_memvarTOption_minimize(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_TOption_minimize));
   { TOption_minimize *p; p=(TOption_minimize*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->stepvec)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TLorentzVector),-1,-1,1,"stepvec=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->stepcostheta)-(long)(p)),100,0,0,-1,-1,-1,1,"stepcostheta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->stepphi)-(long)(p)),100,0,0,-1,-1,-1,1,"stepphi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lowervec)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TLorentzVector),-1,-1,1,"lowervec=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lowercostheta)-(long)(p)),100,0,0,-1,-1,-1,1,"lowercostheta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lowerphi)-(long)(p)),100,0,0,-1,-1,-1,1,"lowerphi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uppervec)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TLorentzVector),-1,-1,1,"uppervec=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uppercostheta)-(long)(p)),100,0,0,-1,-1,-1,1,"uppercostheta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->upperphi)-(long)(p)),100,0,0,-1,-1,-1,1,"upperphi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->maxfunctioncalls)-(long)(p)),105,0,0,-1,-1,-1,1,"maxfunctioncalls=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->maxiterations)-(long)(p)),105,0,0,-1,-1,-1,1,"maxiterations=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tolerance)-(long)(p)),100,0,0,-1,-1,-1,1,"tolerance=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* OneGoodnessMinimizeParameters */
static void G__setup_memvarOneGoodnessMinimizeParameters(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameters));
   { OneGoodnessMinimizeParameters *p; p=(OneGoodnessMinimizeParameters*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLDetector),-1,-2,1,G__FastAllocString(2048).Format("SK=%lldLL",(long long)OneGoodnessMinimizeParameters::SK).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLDetector),-1,-2,1,G__FastAllocString(2048).Format("HK=%lldLL",(long long)OneGoodnessMinimizeParameters::HK).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->detector)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLDetector),-1,-1,1,"detector=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLParticle),-1,-2,1,G__FastAllocString(2048).Format("electron=%lldLL",(long long)OneGoodnessMinimizeParameters::electron).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLParticle),-1,-2,1,G__FastAllocString(2048).Format("positron=%lldLL",(long long)OneGoodnessMinimizeParameters::positron).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLParticle),-1,-2,1,G__FastAllocString(2048).Format("muon=%lldLL",(long long)OneGoodnessMinimizeParameters::muon).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLParticle),-1,-2,1,G__FastAllocString(2048).Format("antimuon=%lldLL",(long long)OneGoodnessMinimizeParameters::antimuon).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLParticle),-1,-2,1,G__FastAllocString(2048).Format("proton=%lldLL",(long long)OneGoodnessMinimizeParameters::proton).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->particle)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLParticle),-1,-1,1,"particle=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLPostype),-1,-2,1,G__FastAllocString(2048).Format("postype_fixed=%lldLL",(long long)OneGoodnessMinimizeParameters::postype_fixed).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLPostype),-1,-2,1,G__FastAllocString(2048).Format("postype_uniformrandom=%lldLL",(long long)OneGoodnessMinimizeParameters::postype_uniformrandom).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->postype)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLPostype),-1,-1,1,"postype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fixedPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TVector3),-1,-1,1,"fixedPosition=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uniformPositionmin)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TVector3),-1,-1,1,"uniformPositionmin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uniformPositionmax)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TVector3),-1,-1,1,"uniformPositionmax=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLDirtype),-1,-2,1,G__FastAllocString(2048).Format("dirtype_fixed=%lldLL",(long long)OneGoodnessMinimizeParameters::dirtype_fixed).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLDirtype),-1,-2,1,G__FastAllocString(2048).Format("dirtype_uniformrandom=%lldLL",(long long)OneGoodnessMinimizeParameters::dirtype_uniformrandom).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dirtype)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLDirtype),-1,-1,1,"dirtype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fixedcostheta)-(long)(p)),100,0,0,-1,-1,-1,1,"fixedcostheta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fixedphi)-(long)(p)),100,0,0,-1,-1,-1,1,"fixedphi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uniformcosthetamin)-(long)(p)),100,0,0,-1,-1,-1,1,"uniformcosthetamin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uniformcosthetamax)-(long)(p)),100,0,0,-1,-1,-1,1,"uniformcosthetamax=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uniformphimin)-(long)(p)),100,0,0,-1,-1,-1,1,"uniformphimin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uniformphimax)-(long)(p)),100,0,0,-1,-1,-1,1,"uniformphimax=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLEtype),-1,-2,1,G__FastAllocString(2048).Format("etype_fixed=%lldLL",(long long)OneGoodnessMinimizeParameters::etype_fixed).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLEtype),-1,-2,1,G__FastAllocString(2048).Format("etype_uniformrandom=%lldLL",(long long)OneGoodnessMinimizeParameters::etype_uniformrandom).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->etype)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLEtype),-1,-1,1,"etype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fixedenergy)-(long)(p)),100,0,0,-1,-1,-1,1,"fixedenergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uniformenergymin)-(long)(p)),100,0,0,-1,-1,-1,1,"uniformenergymin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uniformenergymax)-(long)(p)),100,0,0,-1,-1,-1,1,"uniformenergymax=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLInforeflectivity),-1,-2,1,G__FastAllocString(2048).Format("Inforeflectivity_blacksheet=%lldLL",(long long)OneGoodnessMinimizeParameters::Inforeflectivity_blacksheet).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLInforeflectivity),-1,-2,1,G__FastAllocString(2048).Format("Inforeflectivity_conventional=%lldLL",(long long)OneGoodnessMinimizeParameters::Inforeflectivity_conventional).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLInforeflectivity),-1,-2,1,G__FastAllocString(2048).Format("Inforeflectivity_trapezoid=%lldLL",(long long)OneGoodnessMinimizeParameters::Inforeflectivity_trapezoid).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inforeflectivity)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLInforeflectivity),-1,-1,1,"inforeflectivity=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trapezoidreflectivity)-(long)(p)),100,0,0,-1,-1,-1,1,"trapezoidreflectivity=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trapezoidanglemin)-(long)(p)),100,0,0,-1,-1,-1,1,"trapezoidanglemin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trapezoidanglemax)-(long)(p)),100,0,0,-1,-1,-1,1,"trapezoidanglemax=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLReflectspread),-1,-2,1,G__FastAllocString(2048).Format("Reflectspread_blacksheet=%lldLL",(long long)OneGoodnessMinimizeParameters::Reflectspread_blacksheet).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLReflectspread),-1,-2,1,G__FastAllocString(2048).Format("nospread=%lldLL",(long long)OneGoodnessMinimizeParameters::nospread).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->reflectspread)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLReflectspread),-1,-1,1,"reflectspread=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->triggerthereshold)-(long)(p)),105,0,0,-1,-1,-1,1,"triggerthereshold=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->triggerwindow)-(long)(p)),100,0,0,-1,-1,-1,1,"triggerwindow=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->triggerprewindow)-(long)(p)),100,0,0,-1,-1,-1,1,"triggerprewindow=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->triggerpostwindow)-(long)(p)),100,0,0,-1,-1,-1,1,"triggerpostwindow=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->darkrate)-(long)(p)),100,0,0,-1,-1,-1,1,"darkrate=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->adjustfornoise)-(long)(p)),103,0,0,-1,-1,-1,1,"adjustfornoise=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eventnumber)-(long)(p)),105,0,0,-1,-1,-1,1,"eventnumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sigma)-(long)(p)),100,0,0,-1,-1,-1,1,"sigma=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLGoodnessType),-1,-2,1,G__FastAllocString(2048).Format("GoodnessType_noretro=%lldLL",(long long)OneGoodnessMinimizeParameters::GoodnessType_noretro).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLGoodnessType),-1,-2,1,G__FastAllocString(2048).Format("GoodnessType_onretro=%lldLL",(long long)OneGoodnessMinimizeParameters::GoodnessType_onretro).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLGoodnessType),-1,-2,1,G__FastAllocString(2048).Format("GoodnessType_sum=%lldLL",(long long)OneGoodnessMinimizeParameters::GoodnessType_sum).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLGoodnessType),-1,-2,1,G__FastAllocString(2048).Format("GoodnessType_compare=%lldLL",(long long)OneGoodnessMinimizeParameters::GoodnessType_compare).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->goodnesstype)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLGoodnessType),-1,-1,1,"goodnesstype=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLGoodnessSearchRangeType),-1,-2,1,G__FastAllocString(2048).Format("GSRT_true=%lldLL",(long long)OneGoodnessMinimizeParameters::GSRT_true).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLGoodnessSearchRangeType),-1,-2,1,G__FastAllocString(2048).Format("GSRT_normal=%lldLL",(long long)OneGoodnessMinimizeParameters::GSRT_normal).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->goodnesssearchrangetype)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLGoodnessSearchRangeType),-1,-1,1,"goodnesssearchrangetype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->searchrange)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_CSearch_range),-1,-1,1,"searchrange=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->goodnesseventnumber)-(long)(p)),105,0,0,-1,-1,-1,1,"goodnesseventnumber=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLLikelihoodType),-1,-2,1,G__FastAllocString(2048).Format("LikelihoodType_noretro=%lldLL",(long long)OneGoodnessMinimizeParameters::LikelihoodType_noretro).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLLikelihoodType),-1,-2,1,G__FastAllocString(2048).Format("LikelihoodType_onretro=%lldLL",(long long)OneGoodnessMinimizeParameters::LikelihoodType_onretro).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLLikelihoodType),-1,-2,1,G__FastAllocString(2048).Format("LikelihoodType_sum=%lldLL",(long long)OneGoodnessMinimizeParameters::LikelihoodType_sum).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->likelihoodtype)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLLikelihoodType),-1,-1,1,"likelihoodtype=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLNoRetroFdirection),-1,-2,1,G__FastAllocString(2048).Format("NoRetroFdirection_notuse=%lldLL",(long long)OneGoodnessMinimizeParameters::NoRetroFdirection_notuse).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLNoRetroFdirection),-1,-2,1,G__FastAllocString(2048).Format("NoRetroFdirection_prototype=%lldLL",(long long)OneGoodnessMinimizeParameters::NoRetroFdirection_prototype).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLNoRetroFdirection),-1,-2,1,G__FastAllocString(2048).Format("NoRetroFdirection_bydata=%lldLL",(long long)OneGoodnessMinimizeParameters::NoRetroFdirection_bydata).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->noretrofdirection)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLNoRetroFdirection),-1,-1,1,"noretrofdirection=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLOnRetroFdirection),-1,-2,1,G__FastAllocString(2048).Format("OnRetroFdirection_notuse=%lldLL",(long long)OneGoodnessMinimizeParameters::OnRetroFdirection_notuse).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLOnRetroFdirection),-1,-2,1,G__FastAllocString(2048).Format("OnRetroFdirection_prototype=%lldLL",(long long)OneGoodnessMinimizeParameters::OnRetroFdirection_prototype).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLOnRetroFdirection),-1,-2,1,G__FastAllocString(2048).Format("OnRetroFdirection_bydata=%lldLL",(long long)OneGoodnessMinimizeParameters::OnRetroFdirection_bydata).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->onretrofdirection)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLOnRetroFdirection),-1,-1,1,"onretrofdirection=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLNoRetroAfunction),-1,-2,1,G__FastAllocString(2048).Format("NoRetroAfunction_notuse=%lldLL",(long long)OneGoodnessMinimizeParameters::NoRetroAfunction_notuse).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLNoRetroAfunction),-1,-2,1,G__FastAllocString(2048).Format("NoRetroAfunction_prototype=%lldLL",(long long)OneGoodnessMinimizeParameters::NoRetroAfunction_prototype).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->noretroafunction)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLNoRetroAfunction),-1,-1,1,"noretroafunction=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLOnRetroAfunction),-1,-2,1,G__FastAllocString(2048).Format("OnRetroAfunction_notuse=%lldLL",(long long)OneGoodnessMinimizeParameters::OnRetroAfunction_notuse).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLOnRetroAfunction),-1,-2,1,G__FastAllocString(2048).Format("OnRetroAfunction_prototype=%lldLL",(long long)OneGoodnessMinimizeParameters::OnRetroAfunction_prototype).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->onretroafunction)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLOnRetroAfunction),-1,-1,1,"onretroafunction=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLLikelihoodSearchRangeType),-1,-2,1,G__FastAllocString(2048).Format("likelihoodsearchrangetype_true=%lldLL",(long long)OneGoodnessMinimizeParameters::likelihoodsearchrangetype_true).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLLikelihoodSearchRangeType),-1,-2,1,G__FastAllocString(2048).Format("likelihoodsearchrangetype_normal=%lldLL",(long long)OneGoodnessMinimizeParameters::likelihoodsearchrangetype_normal).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->likelihoodsearchrangetype)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLLikelihoodSearchRangeType),-1,-1,1,"likelihoodsearchrangetype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->costhetanum)-(long)(p)),100,0,0,-1,-1,-1,1,"costhetanum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phinum)-(long)(p)),100,0,0,-1,-1,-1,1,"phinum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timewindownoretro)-(long)(p)),100,0,0,-1,-1,-1,1,"timewindownoretro=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timewindowonretro)-(long)(p)),100,0,0,-1,-1,-1,1,"timewindowonretro=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLGoodnessMinimizeType),-1,-2,1,G__FastAllocString(2048).Format("GoodnessMinimizeType_noretro=%lldLL",(long long)OneGoodnessMinimizeParameters::GoodnessMinimizeType_noretro).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLGoodnessMinimizeType),-1,-2,1,G__FastAllocString(2048).Format("GoodnessMinimizeType_sum=%lldLL",(long long)OneGoodnessMinimizeParameters::GoodnessMinimizeType_sum).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->goodnessminimizetype)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLGoodnessMinimizeType),-1,-1,1,"goodnessminimizetype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->maxfunctioncalls)-(long)(p)),105,0,0,-1,-1,-1,1,"maxfunctioncalls=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->maxiterations)-(long)(p)),105,0,0,-1,-1,-1,1,"maxiterations=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tolerance)-(long)(p)),100,0,0,-1,-1,-1,1,"tolerance=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->stepx)-(long)(p)),100,0,0,-1,-1,-1,1,"stepx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->stepy)-(long)(p)),100,0,0,-1,-1,-1,1,"stepy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->stepz)-(long)(p)),100,0,0,-1,-1,-1,1,"stepz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->stept)-(long)(p)),100,0,0,-1,-1,-1,1,"stept=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->stepcostheta)-(long)(p)),100,0,0,-1,-1,-1,1,"stepcostheta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->stepphi)-(long)(p)),100,0,0,-1,-1,-1,1,"stepphi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->goodnessminimizesigma)-(long)(p)),100,0,0,-1,-1,-1,1,"goodnessminimizesigma=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sigmaangle)-(long)(p)),100,0,0,-1,-1,-1,1,"sigmaangle=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLOnRetroCorrectionType),-1,-2,1,G__FastAllocString(2048).Format("OnRetroCorrectionType_notuse=%lldLL",(long long)OneGoodnessMinimizeParameters::OnRetroCorrectionType_notuse).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLOnRetroCorrectionType),-1,-2,1,G__FastAllocString(2048).Format("OnRetroCorrectionType_use=%lldLL",(long long)OneGoodnessMinimizeParameters::OnRetroCorrectionType_use).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->onretrocorrectiontype)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLOnRetroCorrectionType),-1,-1,1,"onretrocorrectiontype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->onretrocorrection)-(long)(p)),100,0,0,-1,-1,-1,1,"onretrocorrection=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vp)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEpairlEstringcOstringgRcOallocatorlEpairlEstringcOstringgRsPgRsPgR),G__defined_typename("vector<std::pair<std::string,std::string> >"),-1,1,"vp=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_string),-1,-1,4,"file=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* OneRunGoodnessMinimizeAnalizeManager */
static void G__setup_memvarOneRunGoodnessMinimizeAnalizeManager(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_OneRunGoodnessMinimizeAnalizeManager));
   { OneRunGoodnessMinimizeAnalizeManager *p; p=(OneRunGoodnessMinimizeAnalizeManager*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TFile),-1,-1,4,"gfile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TTree),-1,-1,4,"goodnessminimizeT=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TTree),-1,-1,4,"gmoptionT=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TReconstructdata_minimize),-1,-1,4,"data=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TOption_minimize),-1,-1,4,"option=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"neventgoodnessminimize=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameters),-1,-1,4,"onegoodnessminimizeparameters=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BiasError */
static void G__setup_memvarBiasError(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_BiasError));
   { BiasError *p; p=(BiasError*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->bias)-(long)(p)),100,0,0,-1,-1,-1,1,"bias=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->biaserror)-(long)(p)),100,0,0,-1,-1,-1,1,"biaserror=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->error)-(long)(p)),100,0,0,-1,-1,-1,1,"error=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->errorerror)-(long)(p)),100,0,0,-1,-1,-1,1,"errorerror=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* OneRunAnalizeManager */
static void G__setup_memvarOneRunAnalizeManager(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_OneRunAnalizeManager));
   { OneRunAnalizeManager *p; p=(OneRunAnalizeManager*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneRunDataAnalizeManager),-1,-1,4,"datamanager=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneRunGoodnessAnalizeManager),-1,-1,4,"goodnessmanager=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneRunLikelihoodAnalizeManager),-1,-1,4,"likelihoodmanager=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneRunGoodnessMinimizeAnalizeManager),-1,-1,4,"goodnessminimizemanager=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Tfunction */
static void G__setup_memvarTfunction(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tfunction));
   { Tfunction *p; p=(Tfunction*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Tafunction */
static void G__setup_memvarTafunction(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tafunction));
   { Tafunction *p; p=(Tafunction*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_Thitinfo),-1,-1,4,"info=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TReconstructdata),-1,-1,4,"data=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Tafuncprototype */
static void G__setup_memvarTafuncprototype(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tafuncprototype));
   { Tafuncprototype *p; p=(Tafuncprototype*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Tdistance_function */
static void G__setup_memvarTdistance_function(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_function));
   { Tdistance_function *p; p=(Tdistance_function*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_Thitinfo),-1,-1,2,"info=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TReconstructdata),-1,-1,2,"data=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Tdistance_position_pmt */
static void G__setup_memvarTdistance_position_pmt(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_position_pmt));
   { Tdistance_position_pmt *p; p=(Tdistance_position_pmt*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Tdistance_position_retro */
static void G__setup_memvarTdistance_position_retro(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_position_retro));
   { Tdistance_position_retro *p; p=(Tdistance_position_retro*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Tdistance_fly_retro */
static void G__setup_memvarTdistance_fly_retro(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_fly_retro));
   { Tdistance_fly_retro *p; p=(Tdistance_fly_retro*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Tfdirection */
static void G__setup_memvarTfdirection(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tfdirection));
   { Tfdirection *p; p=(Tfdirection*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_Thitinfo),-1,-1,2,"info=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TReconstructdata),-1,-1,2,"data=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Tfdirprototypenoretro */
static void G__setup_memvarTfdirprototypenoretro(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tfdirprototypenoretro));
   { Tfdirprototypenoretro *p; p=(Tfdirprototypenoretro*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Tfdirprototypeonretro */
static void G__setup_memvarTfdirprototypeonretro(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tfdirprototypeonretro));
   { Tfdirprototypeonretro *p; p=(Tfdirprototypeonretro*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Tfdirbydatanoretro */
static void G__setup_memvarTfdirbydatanoretro(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tfdirbydatanoretro));
   { Tfdirbydatanoretro *p; p=(Tfdirbydatanoretro*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Tfdirbydataonretro */
static void G__setup_memvarTfdirbydataonretro(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tfdirbydataonretro));
   { Tfdirbydataonretro *p; p=(Tfdirbydataonretro*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Tlikelihood */
static void G__setup_memvarTlikelihood(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihood));
   { Tlikelihood *p; p=(Tlikelihood*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_Thitinfo),-1,-1,2,"info=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TReconstructdata),-1,-1,2,"data=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_Tfdirection),-1,-1,2,"fdirnoretro=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_Tafunction),-1,-1,2,"afuncnoretro=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_Tfdirection),-1,-1,2,"fdironretro=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_Tafunction),-1,-1,2,"afunconretro=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Tlikelihoodnoretro */
static void G__setup_memvarTlikelihoodnoretro(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihoodnoretro));
   { Tlikelihoodnoretro *p; p=(Tlikelihoodnoretro*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Tlikelihoodonretro */
static void G__setup_memvarTlikelihoodonretro(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihoodonretro));
   { Tlikelihoodonretro *p; p=(Tlikelihoodonretro*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Tlikelihoodsum */
static void G__setup_memvarTlikelihoodsum(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihoodsum));
   { Tlikelihoodsum *p; p=(Tlikelihoodsum*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Ttheta_dir_i */
static void G__setup_memvarTtheta_dir_i(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_Ttheta_dir_i));
   { Ttheta_dir_i *p; p=(Ttheta_dir_i*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_Thitinfo),-1,-1,4,"info=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TReconstructdata),-1,-1,4,"data=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Ttheta_i_func */
static void G__setup_memvarTtheta_i_func(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_Ttheta_i_func));
   { Ttheta_i_func *p; p=(Ttheta_i_func*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_Thitinfo),-1,-1,4,"info=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TReconstructdata),-1,-1,4,"data=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Ttof */
static void G__setup_memvarTtof(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_Ttof));
   { Ttof *p; p=(Ttof*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_Thitinfo),-1,-1,4,"info=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TReconstructdata),-1,-1,4,"data=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_function),-1,-1,4,"dfunc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MyString */
static void G__setup_memvarMyString(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_MyString));
   { MyString *p; p=(MyString*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_string),-1,-1,4,"name=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MultiRunAnalizeManager */
static void G__setup_memvarMultiRunAnalizeManager(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__macroRootDictLN_MultiRunAnalizeManager));
   { MultiRunAnalizeManager *p; p=(MultiRunAnalizeManager*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->basefileparameters)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameters),-1,-1,1,"basefileparameters=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->basegoodnessparameters)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameters),-1,-1,1,"basegoodnessparameters=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->baselikelihoodparameters)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameters),-1,-1,1,"baselikelihoodparameters=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->basegoodnessminimizeparameters)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameters),-1,-1,1,"basegoodnessminimizeparameters=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vdataparameters)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEOneDataParameterscOallocatorlEOneDataParametersgRsPgR),G__defined_typename("vector<OneDataParameters>"),-1,1,"vdataparameters=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vgoodnessparameters)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEOneGoodnessParameterscOallocatorlEOneGoodnessParametersgRsPgR),G__defined_typename("vector<OneGoodnessParameters>"),-1,1,"vgoodnessparameters=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vlikelihoodparameters)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEOneLikelihoodParameterscOallocatorlEOneLikelihoodParametersgRsPgR),G__defined_typename("vector<OneLikelihoodParameters>"),-1,1,"vlikelihoodparameters=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vgoodnessminimizeparameters)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEOneGoodnessMinimizeParameterscOallocatorlEOneGoodnessMinimizeParametersgRsPgR),G__defined_typename("vector<OneGoodnessMinimizeParameters>"),-1,1,"vgoodnessminimizeparameters=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vrunanalizemanager)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_vectorlEOneRunAnalizeManagermUcOallocatorlEOneRunAnalizeManagermUgRsPgR),G__defined_typename("vector<OneRunAnalizeManager*>"),-1,1,"vrunanalizemanager=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__macroRootDictLN_string),-1,-1,4,"sbasefile=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mode=",0,"datamode 0;goodnessmode 1;likelihoodmode 2;goodnessminimizemode 3");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__macroRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarmacroRootDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncEventdisplay(void) {
   /* Eventdisplay */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_Eventdisplay));
   G__memfunc_setup("Eventdisplay",1272,G__macroRootDict_193_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_Eventdisplay), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eventdisplay",1272,G__macroRootDict_193_0_2, 105, G__get_linked_tagnum(&G__macroRootDictLN_Eventdisplay), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eventdisplay",1272,G__macroRootDict_193_0_3, 105, G__get_linked_tagnum(&G__macroRootDictLN_Eventdisplay), -1, 0, 6, 1, 1, 0, 
"C - - 10 - infile C - - 0 - name "
"C - - 0 - title i - - 0 '0' nevent "
"i - - 0 '150' xbin i - - 0 '147' ybin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,G__macroRootDict_193_0_4, 121, -1, -1, 0, 4, 1, 1, 0, 
"C - - 10 - infile i - - 0 '0' nevent "
"i - - 0 '150' xbin i - - 0 '147' ybin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Drawall",711,G__macroRootDict_193_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"colz\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Drawcharge",1016,G__macroRootDict_193_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"colz\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Drawtime",829,G__macroRootDict_193_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"colz\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Drawhit",723,G__macroRootDict_193_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"colz\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Gethall",705,G__macroRootDict_193_0_9, 85, G__get_linked_tagnum(&G__macroRootDictLN_TH2D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Gethcharge",1010,G__macroRootDict_193_0_10, 85, G__get_linked_tagnum(&G__macroRootDictLN_TH2D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Gethtime",823,G__macroRootDict_193_0_11, 85, G__get_linked_tagnum(&G__macroRootDictLN_TH2D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Gethhit",717,G__macroRootDict_193_0_12, 85, G__get_linked_tagnum(&G__macroRootDictLN_TH2D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__macroRootDict_193_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"U 'Eventdisplay' - 0 - eventdisplay1 U 'Eventdisplay' - 0 - eventdisplay2 "
"d - 'Double_t' 0 '1.' c1 d - 'Double_t' 0 '1.' c2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__macroRootDict_193_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'Eventdisplay' - 0 - eventdisplay1 d - 'Double_t' 0 '1.' c1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWCradius",1090,G__macroRootDict_193_0_15, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWClength",1084,G__macroRootDict_193_0_16, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Sum",309,G__macroRootDict_193_0_17, 85, G__get_linked_tagnum(&G__macroRootDictLN_Eventdisplay), -1, 0, 6, 3, 1, 0, 
"C - - 10 - infile C - - 0 - name "
"C - - 0 - title i - - 0 - nevents "
"i - - 0 '150' xbin i - - 0 '147' ybin", (char*)NULL, (void*) G__func2void( (Eventdisplay* (*)(const char*, char*, char*, int, int, int))(&Eventdisplay::Sum) ), 0);
   G__memfunc_setup("Class",502,G__macroRootDict_193_0_18, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Eventdisplay::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_193_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Eventdisplay::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_193_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Eventdisplay::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_193_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Eventdisplay::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_193_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_193_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Eventdisplay::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_193_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Eventdisplay::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_193_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Eventdisplay::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_193_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Eventdisplay::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Eventdisplay", 1272, G__macroRootDict_193_0_30, (int) ('i'), G__get_linked_tagnum(&G__macroRootDictLN_Eventdisplay), -1, 0, 1, 1, 1, 0, "u 'Eventdisplay' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Eventdisplay", 1398, G__macroRootDict_193_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgoodness_data(void) {
   /* goodness_data */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_goodness_data));
   G__memfunc_setup("goodness_data",1371,G__macroRootDict_232_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_goodness_data), -1, 0, 2, 1, 1, 0, 
"u 'TLorentzVector' - 0 - vector d - - 0 '0' goodness", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("goodness_data",1371,G__macroRootDict_232_0_2, 105, G__get_linked_tagnum(&G__macroRootDictLN_goodness_data), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetT",372,G__macroRootDict_232_0_3, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__macroRootDict_232_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__macroRootDict_232_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__macroRootDict_232_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPosition",1141,G__macroRootDict_232_0_7, 117, G__get_linked_tagnum(&G__macroRootDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get4Vector",967,G__macroRootDict_232_0_8, 117, G__get_linked_tagnum(&G__macroRootDictLN_TLorentzVector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getgoodness",1154,G__macroRootDict_232_0_9, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set4Vector",979,G__macroRootDict_232_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 0 - vector_input", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setgoodness",1166,G__macroRootDict_232_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - goodness_input", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setdata",710,G__macroRootDict_232_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'goodness_data' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__macroRootDict_232_0_13, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&goodness_data::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_232_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&goodness_data::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_232_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&goodness_data::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_232_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&goodness_data::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_232_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_232_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&goodness_data::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_232_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&goodness_data::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_232_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&goodness_data::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_232_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&goodness_data::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("goodness_data", 1371, G__macroRootDict_232_0_25, (int) ('i'), G__get_linked_tagnum(&G__macroRootDictLN_goodness_data), -1, 0, 1, 1, 1, 0, "u 'goodness_data' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~goodness_data", 1497, G__macroRootDict_232_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_232_0_27, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_goodness_data), -1, 1, 1, 1, 1, 0, "u 'goodness_data' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncl_dir_data(void) {
   /* l_dir_data */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_l_dir_data));
   G__memfunc_setup("l_dir_data",1027,G__macroRootDict_233_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_l_dir_data), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("l_dir_data",1027,G__macroRootDict_233_0_2, 105, G__get_linked_tagnum(&G__macroRootDictLN_l_dir_data), -1, 0, 3, 1, 1, 0, 
"d - - 0 - costheta_in d - - 0 - phi_in "
"d - - 0 - likelihood_in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setdata",710,G__macroRootDict_233_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'l_dir_data' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetL",376,G__macroRootDict_233_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCosTheta",1095,G__macroRootDict_233_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - costheta_in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhi",589,G__macroRootDict_233_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - phi_in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetL",364,G__macroRootDict_233_0_7, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCosTheta",1083,G__macroRootDict_233_0_8, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhi",577,G__macroRootDict_233_0_9, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__macroRootDict_233_0_10, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&l_dir_data::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_233_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&l_dir_data::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_233_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&l_dir_data::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_233_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&l_dir_data::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_233_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_233_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&l_dir_data::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_233_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&l_dir_data::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_233_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&l_dir_data::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_233_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&l_dir_data::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("l_dir_data", 1027, G__macroRootDict_233_0_22, (int) ('i'), G__get_linked_tagnum(&G__macroRootDictLN_l_dir_data), -1, 0, 1, 1, 1, 0, "u 'l_dir_data' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~l_dir_data", 1153, G__macroRootDict_233_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_233_0_24, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_l_dir_data), -1, 1, 1, 1, 1, 0, "u 'l_dir_data' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAnalizedData(void) {
   /* AnalizedData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_AnalizedData));
   G__memfunc_setup("AnalizedData",1186,G__macroRootDict_234_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_AnalizedData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AnalizedData",1186,G__macroRootDict_234_0_2, 105, G__get_linked_tagnum(&G__macroRootDictLN_AnalizedData), -1, 0, 4, 1, 1, 0, 
"u 'goodness_data' - 0 - gdatagridsearch_in u 'l_dir_data' - 0 - ldatagridsearch_in "
"u 'goodness_data' - 0 - gdataminimized_in u 'l_dir_data' - 0 - ldataminimized_in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getgdatagridsearch",1853,G__macroRootDict_234_0_3, 117, G__get_linked_tagnum(&G__macroRootDictLN_goodness_data), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getldatagridsearch",1858,G__macroRootDict_234_0_4, 117, G__get_linked_tagnum(&G__macroRootDictLN_l_dir_data), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getdataminimized",1664,G__macroRootDict_234_0_5, 117, G__get_linked_tagnum(&G__macroRootDictLN_goodness_data), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getldataminimized",1772,G__macroRootDict_234_0_6, 117, G__get_linked_tagnum(&G__macroRootDictLN_l_dir_data), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setgdatagridsearch",1865,G__macroRootDict_234_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'goodness_data' - 0 - gdata", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setldatagridsearch",1870,G__macroRootDict_234_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'l_dir_data' - 0 - ldata", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setgdataminimized",1779,G__macroRootDict_234_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'goodness_data' - 0 - gdata", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setldataminimized",1784,G__macroRootDict_234_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'l_dir_data' - 0 - ldata", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__macroRootDict_234_0_11, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AnalizedData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_234_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AnalizedData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_234_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AnalizedData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_234_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AnalizedData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_234_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_234_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AnalizedData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_234_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AnalizedData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_234_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AnalizedData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_234_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AnalizedData::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("AnalizedData", 1186, G__macroRootDict_234_0_23, (int) ('i'), G__get_linked_tagnum(&G__macroRootDictLN_AnalizedData), -1, 0, 1, 1, 1, 0, "u 'AnalizedData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AnalizedData", 1312, G__macroRootDict_234_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_234_0_25, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_AnalizedData), -1, 1, 1, 1, 1, 0, "u 'AnalizedData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncC4Number(void) {
   /* C4Number */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_C4Number));
   G__memfunc_setup("C4Number",736,G__macroRootDict_235_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_C4Number), -1, 0, 4, 1, 1, 0, 
"i - - 0 - x i - - 0 - y "
"i - - 0 - z i - - 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("C4Number",736,G__macroRootDict_235_0_2, 105, G__get_linked_tagnum(&G__macroRootDictLN_C4Number), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__macroRootDict_235_0_3, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__macroRootDict_235_0_4, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__macroRootDict_235_0_5, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetT",372,G__macroRootDict_235_0_6, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetX",388,G__macroRootDict_235_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - x_set", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetY",389,G__macroRootDict_235_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - y_set", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZ",390,G__macroRootDict_235_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - z_set", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetT",384,G__macroRootDict_235_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - t_set", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Printnumber",1174,G__macroRootDict_235_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__macroRootDict_235_0_12, 117, G__get_linked_tagnum(&G__macroRootDictLN_C4Number), -1, 0, 1, 1, 1, 8, "u 'C4Number' - 41 - right", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__macroRootDict_235_0_13, 117, G__get_linked_tagnum(&G__macroRootDictLN_C4Number), -1, 0, 1, 1, 1, 8, "u 'C4Number' - 41 - right", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__macroRootDict_235_0_14, 103, -1, -1, 0, 1, 1, 1, 8, "u 'C4Number' - 41 - right", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__macroRootDict_235_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "u 'C4Number' - 41 - right", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__macroRootDict_235_0_16, 105, -1, -1, 0, 1, 1, 1, 8, "u 'C4Number' - 41 - right", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__macroRootDict_235_0_17, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&C4Number::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_235_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&C4Number::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_235_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&C4Number::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_235_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&C4Number::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_235_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_235_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&C4Number::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_235_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&C4Number::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_235_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&C4Number::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_235_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&C4Number::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("C4Number", 736, G__macroRootDict_235_0_29, (int) ('i'), G__get_linked_tagnum(&G__macroRootDictLN_C4Number), -1, 0, 1, 1, 1, 0, "u 'C4Number' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~C4Number", 862, G__macroRootDict_235_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_235_0_31, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_C4Number), -1, 1, 1, 1, 1, 0, "u 'C4Number' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCSearch_range(void) {
   /* CSearch_range */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_CSearch_range));
   G__memfunc_setup("CSearch_range",1285,G__macroRootDict_236_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_CSearch_range), -1, 0, 3, 1, 1, 0, 
"u 'TLorentzVector' - 0 - search_min u 'TLorentzVector' - 0 - search_width "
"u 'C4Number' - 0 - search_number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CSearch_range",1285,G__macroRootDict_236_0_2, 105, G__get_linked_tagnum(&G__macroRootDictLN_CSearch_range), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setrange",825,G__macroRootDict_236_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CSearch_range' - 0 - range_in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetN",366,G__macroRootDict_236_0_4, 105, -1, -1, 0, 0, 1, 1, 8, "", "Number of grid search.", (void*) NULL, 0);
   G__memfunc_setup("GetXmin",700,G__macroRootDict_236_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYmin",701,G__macroRootDict_236_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZmin",702,G__macroRootDict_236_0_7, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTmin",696,G__macroRootDict_236_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXwidth",920,G__macroRootDict_236_0_9, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYwidth",921,G__macroRootDict_236_0_10, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZwidth",922,G__macroRootDict_236_0_11, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTwidth",916,G__macroRootDict_236_0_12, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXNum",680,G__macroRootDict_236_0_13, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYNum",681,G__macroRootDict_236_0_14, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZNum",682,G__macroRootDict_236_0_15, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTNum",676,G__macroRootDict_236_0_16, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXmax",702,G__macroRootDict_236_0_17, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYmax",703,G__macroRootDict_236_0_18, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZmax",704,G__macroRootDict_236_0_19, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTmax",698,G__macroRootDict_236_0_20, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXcentral",1121,G__macroRootDict_236_0_21, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYcentral",1122,G__macroRootDict_236_0_22, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZcentral",1123,G__macroRootDict_236_0_23, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTcentral",1117,G__macroRootDict_236_0_24, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXallwidth",1233,G__macroRootDict_236_0_25, 100, -1, -1, 0, 0, 1, 1, 8, "", "whole range of each direction. max - min", (void*) NULL, 0);
   G__memfunc_setup("GetYallwidth",1234,G__macroRootDict_236_0_26, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZallwidth",1235,G__macroRootDict_236_0_27, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTallwidth",1229,G__macroRootDict_236_0_28, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setmin",624,G__macroRootDict_236_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 0 - search_min_input", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setwidth",844,G__macroRootDict_236_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 0 - search_width_input", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNum",604,G__macroRootDict_236_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'C4Number' - 0 - search_number_input", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getmin",612,G__macroRootDict_236_0_32, 117, G__get_linked_tagnum(&G__macroRootDictLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getwidth",832,G__macroRootDict_236_0_33, 117, G__get_linked_tagnum(&G__macroRootDictLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNum",592,G__macroRootDict_236_0_34, 117, G__get_linked_tagnum(&G__macroRootDictLN_C4Number), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Printrange",1050,G__macroRootDict_236_0_35, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__macroRootDict_236_0_36, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CSearch_range::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_236_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CSearch_range::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_236_0_38, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CSearch_range::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_236_0_39, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CSearch_range::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_236_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_236_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CSearch_range::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_236_0_45, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CSearch_range::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_236_0_46, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CSearch_range::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_236_0_47, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CSearch_range::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CSearch_range", 1285, G__macroRootDict_236_0_48, (int) ('i'), G__get_linked_tagnum(&G__macroRootDictLN_CSearch_range), -1, 0, 1, 1, 1, 0, "u 'CSearch_range' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CSearch_range", 1411, G__macroRootDict_236_0_49, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_236_0_50, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_CSearch_range), -1, 1, 1, 1, 1, 0, "u 'CSearch_range' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFileList(void) {
   /* FileList */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_FileList));
   G__memfunc_setup("FileList",796,G__macroRootDict_245_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_FileList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FileList",796,G__macroRootDict_245_0_2, 105, G__get_linked_tagnum(&G__macroRootDictLN_FileList), -1, 0, 2, 1, 1, 0, 
"C - - 10 - filelist i - - 0 '1000' NFile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__macroRootDict_245_0_3, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FileList::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_245_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FileList::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_245_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FileList::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_245_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FileList::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_245_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_245_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FileList::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_245_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FileList::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_245_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FileList::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_245_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FileList::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~FileList", 922, G__macroRootDict_245_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncefficiency(void) {
   /* efficiency */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_efficiency));
   G__memfunc_setup("efficiency",1045,G__macroRootDict_246_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_efficiency), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("efficiency",1045,G__macroRootDict_246_0_2, 105, G__get_linked_tagnum(&G__macroRootDictLN_efficiency), -1, 0, 7, 1, 1, 0, 
"U 'FileList' - 0 - filelist_in C - - 10 - name "
"C - - 10 - title i - - 0 - num "
"d - - 0 - min d - - 0 - max "
"d - - 0 - width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEfError",993,G__macroRootDict_246_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillloop",865,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"i - - 0 - i d - - 0 - iter", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__macroRootDict_246_0_5, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&efficiency::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_246_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&efficiency::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_246_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&efficiency::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_246_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&efficiency::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_246_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_246_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&efficiency::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_246_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&efficiency::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_246_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&efficiency::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_246_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&efficiency::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~efficiency", 1171, G__macroRootDict_246_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTH1DByTree(void) {
   /* TH1DByTree */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_TH1DByTree));
   G__memfunc_setup("TH1DByTree",860,G__macroRootDict_324_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_TH1DByTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TH1DByTree",860,G__macroRootDict_324_0_2, 105, G__get_linked_tagnum(&G__macroRootDictLN_TH1DByTree), -1, 0, 9, 1, 1, 0, 
"U 'TTree' - 0 - tree C - - 10 - paraname "
"C - - 10 - name C - - 10 - title "
"i - - 0 - num d - - 0 - min "
"d - - 0 - max d - - 0 - width "
"i 'TH1DByTree::Axis' - 0 'x' axis", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TH1DByTree",860,G__macroRootDict_324_0_3, 105, G__get_linked_tagnum(&G__macroRootDictLN_TH1DByTree), -1, 0, 9, 1, 1, 0, 
"U 'TTree' - 0 - tree U 'goodness_data' - 0 - data "
"C - - 10 - name C - - 10 - title "
"i - - 0 - num d - - 0 - min "
"d - - 0 - max d - - 0 - width "
"i 'TH1DByTree::Axis' - 0 - axis", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitByGaussian",1305,G__macroRootDict_324_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - secondpara d - - 0 '100.' firstpara "
"d - - 0 '100.' thirdpara", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawGaussian",1225,G__macroRootDict_324_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGaussianBias",1498,G__macroRootDict_324_0_6, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGaussianError",1637,G__macroRootDict_324_0_7, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGaussianBiasError",2020,G__macroRootDict_324_0_8, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGaussianErrorError",2159,G__macroRootDict_324_0_9, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__macroRootDict_324_0_10, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TH1DByTree::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_324_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TH1DByTree::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_324_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TH1DByTree::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_324_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TH1DByTree::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_324_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_324_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TH1DByTree::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_324_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TH1DByTree::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_324_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TH1DByTree::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_324_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TH1DByTree::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TH1DByTree", 860, G__macroRootDict_324_0_22, (int) ('i'), G__get_linked_tagnum(&G__macroRootDictLN_TH1DByTree), -1, 0, 1, 1, 1, 0, "u 'TH1DByTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TH1DByTree", 986, G__macroRootDict_324_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHistError(void) {
   /* HistError */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_HistError));
   G__memfunc_setup("HistError",930,G__macroRootDict_326_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_HistError), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HistError",930,G__macroRootDict_326_0_2, 105, G__get_linked_tagnum(&G__macroRootDictLN_HistError), -1, 0, 12, 1, 1, 0, 
"U 'FileList' - 0 - list C - - 10 - paraname_in "
"C - - 10 - name C - - 10 - title "
"i - - 0 - num d - - 0 - min "
"d - - 0 - max d - - 0 - width "
"i - - 0 - numorig_in d - - 0 - minorig_in "
"d - - 0 - maxorig_in d - - 0 - widthorig_in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillloop",865,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"i - - 0 - i d - - 0 - iter", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__macroRootDict_326_0_4, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HistError::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_326_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HistError::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_326_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HistError::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_326_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HistError::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_326_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_326_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HistError::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_326_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HistError::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_326_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HistError::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_326_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HistError::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HistError", 1056, G__macroRootDict_326_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHistBias(void) {
   /* HistBias */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_HistBias));
   G__memfunc_setup("HistBias",791,G__macroRootDict_327_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_HistBias), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HistBias",791,G__macroRootDict_327_0_2, 105, G__get_linked_tagnum(&G__macroRootDictLN_HistBias), -1, 0, 12, 1, 1, 0, 
"U 'FileList' - 0 - list C - - 10 - paraname_in "
"C - - 10 - name C - - 10 - title "
"i - - 0 - num d - - 0 - min "
"d - - 0 - max d - - 0 - width "
"i - - 0 - numorig_in d - - 0 - minorig_in "
"d - - 0 - maxorig_in d - - 0 - widthorig_in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillloop",865,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"i - - 0 - i d - - 0 - iter", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__macroRootDict_327_0_4, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HistBias::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_327_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HistBias::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_327_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HistBias::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_327_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HistBias::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_327_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_327_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HistBias::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_327_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HistBias::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_327_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HistBias::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_327_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HistBias::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HistBias", 917, G__macroRootDict_327_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAngleRange(void) {
   /* AngleRange */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_AngleRange));
   G__memfunc_setup("AngleRange",980,G__macroRootDict_383_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_AngleRange), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setrange",825,G__macroRootDict_383_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'AngleRange' - 0 - range", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCosthetamin",1439,G__macroRootDict_383_0_3, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCosthetamin",1451,G__macroRootDict_383_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - costheta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCosthetawidth",1659,G__macroRootDict_383_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCosthetawidth",1671,G__macroRootDict_383_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCosthetaNum",1419,G__macroRootDict_383_0_7, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCosthetaNum",1431,G__macroRootDict_383_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhimin",901,G__macroRootDict_383_0_9, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhimin",913,G__macroRootDict_383_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - min", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiwidth",1121,G__macroRootDict_383_0_11, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhiwidth",1133,G__macroRootDict_383_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiNum",881,G__macroRootDict_383_0_13, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhiNum",893,G__macroRootDict_383_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCosthetamax",1441,G__macroRootDict_383_0_15, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhimax",903,G__macroRootDict_383_0_16, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__macroRootDict_383_0_17, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AngleRange::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_383_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AngleRange::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_383_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AngleRange::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_383_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AngleRange::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_383_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_383_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AngleRange::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_383_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AngleRange::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_383_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AngleRange::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_383_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AngleRange::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("AngleRange", 980, G__macroRootDict_383_0_29, (int) ('i'), G__get_linked_tagnum(&G__macroRootDictLN_AngleRange), -1, 0, 1, 1, 1, 0, "u 'AngleRange' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AngleRange", 1106, G__macroRootDict_383_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_383_0_31, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_AngleRange), -1, 1, 1, 1, 1, 0, "u 'AngleRange' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTReconstructhit(void) {
   /* TReconstructhit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_TReconstructhit));
   G__memfunc_setup("TReconstructhit",1589,G__macroRootDict_384_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_TReconstructhit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TReconstructhit",1589,G__macroRootDict_384_0_2, 105, G__get_linked_tagnum(&G__macroRootDictLN_TReconstructhit), -1, 0, 1, 1, 1, 0, "i - - 0 - hittype", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Gethittype",1063,G__macroRootDict_384_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setonegoodnessnoretro",2265,G__macroRootDict_384_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - g", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getonegoodnessnoretro",2253,G__macroRootDict_384_0_5, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setonegoodnessonretro",2265,G__macroRootDict_384_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - g", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getonegoodnessonretro",2253,G__macroRootDict_384_0_7, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setonelikelihoodnoretro",2459,G__macroRootDict_384_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getonelikelihoodnoretro",2447,G__macroRootDict_384_0_9, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setonelikelihoodonretro",2459,G__macroRootDict_384_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getonelikelihoodonretro",2447,G__macroRootDict_384_0_11, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__macroRootDict_384_0_12, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TReconstructhit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_384_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TReconstructhit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_384_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TReconstructhit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_384_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TReconstructhit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_384_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_384_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TReconstructhit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_384_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TReconstructhit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_384_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TReconstructhit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_384_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TReconstructhit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TReconstructhit", 1589, G__macroRootDict_384_0_24, (int) ('i'), G__get_linked_tagnum(&G__macroRootDictLN_TReconstructhit), -1, 0, 1, 1, 1, 0, "u 'TReconstructhit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TReconstructhit", 1715, G__macroRootDict_384_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_384_0_26, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_TReconstructhit), -1, 1, 1, 1, 1, 0, "u 'TReconstructhit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTReconstructdata(void) {
   /* TReconstructdata */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_TReconstructdata));
   G__memfunc_setup("TReconstructdata",1674,G__macroRootDict_385_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_TReconstructdata), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get4Vector",967,G__macroRootDict_385_0_2, 117, G__get_linked_tagnum(&G__macroRootDictLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set4Vector",979,G__macroRootDict_385_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 0 - vec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get3Position",1192,G__macroRootDict_385_0_4, 117, G__get_linked_tagnum(&G__macroRootDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getdirection",1249,G__macroRootDict_385_0_5, 117, G__get_linked_tagnum(&G__macroRootDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setdirection",1261,G__macroRootDict_385_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 0 - vec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getenergy",938,G__macroRootDict_385_0_7, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setgoodness",1166,G__macroRootDict_385_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - g", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getgoodness",1154,G__macroRootDict_385_0_9, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setlikelihood",1360,G__macroRootDict_385_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getlikelihood",1348,G__macroRootDict_385_0_11, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setlikelihoodonretro",2137,G__macroRootDict_385_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getlikelihoodonretro",2125,G__macroRootDict_385_0_13, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setlikelihoodnoretro",2137,G__macroRootDict_385_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getlikelihoodnoretro",2125,G__macroRootDict_385_0_15, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addhit",622,G__macroRootDict_385_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' hittype", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Gethit",613,G__macroRootDict_385_0_17, 117, G__get_linked_tagnum(&G__macroRootDictLN_TReconstructhit), -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getvhit",731,G__macroRootDict_385_0_18, 117, G__get_linked_tagnum(&G__macroRootDictLN_vectorlETReconstructhitcOallocatorlETReconstructhitgRsPgR), G__defined_typename("vector<TReconstructhit>"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setdata",710,G__macroRootDict_385_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TReconstructdata' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__macroRootDict_385_0_20, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TReconstructdata::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_385_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TReconstructdata::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_385_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TReconstructdata::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_385_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TReconstructdata::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_385_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_385_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TReconstructdata::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_385_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TReconstructdata::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_385_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TReconstructdata::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_385_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TReconstructdata::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TReconstructdata", 1674, G__macroRootDict_385_0_32, (int) ('i'), G__get_linked_tagnum(&G__macroRootDictLN_TReconstructdata), -1, 0, 1, 1, 1, 0, "u 'TReconstructdata' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TReconstructdata", 1800, G__macroRootDict_385_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_385_0_34, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_TReconstructdata), -1, 1, 1, 1, 1, 0, "u 'TReconstructdata' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTReconstructdata_minimize(void) {
   /* TReconstructdata_minimize */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_TReconstructdata_minimize));
   G__memfunc_setup("TReconstructdata_minimize",2635,G__macroRootDict_390_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_TReconstructdata_minimize), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setstatus",976,G__macroRootDict_390_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getstatus",964,G__macroRootDict_390_0_3, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setncalls",937,G__macroRootDict_390_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getncalls",925,G__macroRootDict_390_0_5, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetnIterations",1468,G__macroRootDict_390_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetnIterations",1456,G__macroRootDict_390_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setdata",710,G__macroRootDict_390_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TReconstructdata_minimize' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__macroRootDict_390_0_9, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TReconstructdata_minimize::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_390_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TReconstructdata_minimize::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_390_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TReconstructdata_minimize::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_390_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TReconstructdata_minimize::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_390_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_390_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TReconstructdata_minimize::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_390_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TReconstructdata_minimize::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_390_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TReconstructdata_minimize::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_390_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TReconstructdata_minimize::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TReconstructdata_minimize", 2635, G__macroRootDict_390_0_21, (int) ('i'), 
G__get_linked_tagnum(&G__macroRootDictLN_TReconstructdata_minimize), -1, 0, 1, 1, 1, 0, "u 'TReconstructdata_minimize' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TReconstructdata_minimize", 2761, G__macroRootDict_390_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_390_0_23, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_TReconstructdata_minimize), -1, 1, 1, 1, 1, 0, "u 'TReconstructdata_minimize' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncThitinfo(void) {
   /* Thitinfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_Thitinfo));
   G__memfunc_setup("Thitinfo",837,G__macroRootDict_391_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_Thitinfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Sethit",625,G__macroRootDict_391_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'WCSimRootCherenkovDigiHit' - 0 - hit U 'WCSimRootGeom' - 0 - wcsimrootgeom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPosition",1141,G__macroRootDict_391_0_3, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get3Position",1192,G__macroRootDict_391_0_4, 117, G__get_linked_tagnum(&G__macroRootDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOrientation",1452,G__macroRootDict_391_0_5, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get3Orientation",1503,G__macroRootDict_391_0_6, 117, G__get_linked_tagnum(&G__macroRootDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HitTime",692,G__macroRootDict_391_0_7, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWCradius",1090,G__macroRootDict_391_0_8, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWClength",1084,G__macroRootDict_391_0_9, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__macroRootDict_391_0_10, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Thitinfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_391_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Thitinfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_391_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Thitinfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_391_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Thitinfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_391_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_391_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Thitinfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_391_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Thitinfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_391_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Thitinfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_391_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Thitinfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Thitinfo", 837, G__macroRootDict_391_0_22, (int) ('i'), G__get_linked_tagnum(&G__macroRootDictLN_Thitinfo), -1, 0, 1, 1, 1, 0, "u 'Thitinfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Thitinfo", 963, G__macroRootDict_391_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_391_0_24, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_Thitinfo), -1, 1, 1, 1, 1, 0, "u 'Thitinfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncOneDataParameters(void) {
   /* OneDataParameters */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameters));
   G__memfunc_setup("OneDataParameters",1712,G__macroRootDict_392_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameters), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setpair",728,G__macroRootDict_392_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetValue",809,G__macroRootDict_392_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintValue",1034,G__macroRootDict_392_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isEqual",724,G__macroRootDict_392_0_5, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'OneDataParameters' - 0 - compare u 'vector<string,allocator<string> >' 'vector<std::string>' 0 - exclusionname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getfile",704,G__macroRootDict_392_0_6, 117, G__get_linked_tagnum(&G__macroRootDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("split",556,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__macroRootDictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 4, 0, "u 'string' - 1 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasname",733,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 2, 1, 4, 0, 
"u 'vector<string,allocator<string> >' 'vector<std::string>' 0 - vname u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__macroRootDict_392_0_9, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&OneDataParameters::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_392_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&OneDataParameters::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_392_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&OneDataParameters::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_392_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&OneDataParameters::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_392_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_392_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&OneDataParameters::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_392_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&OneDataParameters::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_392_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&OneDataParameters::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_392_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&OneDataParameters::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("OneDataParameters", 1712, G__macroRootDict_392_0_21, (int) ('i'), G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameters), -1, 0, 1, 1, 1, 0, "u 'OneDataParameters' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~OneDataParameters", 1838, G__macroRootDict_392_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_392_0_23, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameters), -1, 1, 1, 1, 1, 0, "u 'OneDataParameters' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncOneRunDataAnalizeManager(void) {
   /* OneRunDataAnalizeManager */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_OneRunDataAnalizeManager));
   G__memfunc_setup("OneRunDataAnalizeManager",2384,G__macroRootDict_409_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_OneRunDataAnalizeManager), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OneRunDataAnalizeManager",2384,G__macroRootDict_409_0_2, 105, G__get_linked_tagnum(&G__macroRootDictLN_OneRunDataAnalizeManager), -1, 0, 1, 1, 1, 0, "C - - 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setdatafile",1126,G__macroRootDict_409_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntry",818,G__macroRootDict_409_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ievent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getxvtx",762,G__macroRootDict_409_0_5, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ievent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getyvtx",763,G__macroRootDict_409_0_6, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ievent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getzvtx",764,G__macroRootDict_409_0_7, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ievent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getxdir",727,G__macroRootDict_409_0_8, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ievent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getydir",728,G__macroRootDict_409_0_9, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ievent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getzdir",729,G__macroRootDict_409_0_10, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ievent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getdirection",1249,G__macroRootDict_409_0_11, 117, G__get_linked_tagnum(&G__macroRootDictLN_TVector3), -1, 0, 1, 1, 1, 0, "i - - 0 - ievent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTriggerTime",1411,G__macroRootDict_409_0_12, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ievent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEfficiency",1301,G__macroRootDict_409_0_13, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Gethittimeraw",1374,G__macroRootDict_409_0_14, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - ievent i - - 0 - jhit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Gettofnoretrotrue",1842,G__macroRootDict_409_0_15, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - ievent i - - 0 - jhit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Gettofonretrotrue",1842,G__macroRootDict_409_0_16, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - ievent i - - 0 - jhit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Gethittimetrue",1492,G__macroRootDict_409_0_17, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - ievent i - - 0 - jhit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataParameters",1710,G__macroRootDict_409_0_18, 85, G__get_linked_tagnum(&G__macroRootDictLN_OneDataParameters), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getncherenkovdigihits",2216,G__macroRootDict_409_0_19, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ievent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__macroRootDict_409_0_20, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&OneRunDataAnalizeManager::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_409_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&OneRunDataAnalizeManager::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_409_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&OneRunDataAnalizeManager::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_409_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&OneRunDataAnalizeManager::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_409_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_409_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&OneRunDataAnalizeManager::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_409_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&OneRunDataAnalizeManager::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_409_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&OneRunDataAnalizeManager::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_409_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&OneRunDataAnalizeManager::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("OneRunDataAnalizeManager", 2384, G__macroRootDict_409_0_32, (int) ('i'), 
G__get_linked_tagnum(&G__macroRootDictLN_OneRunDataAnalizeManager), -1, 0, 1, 1, 1, 0, "u 'OneRunDataAnalizeManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~OneRunDataAnalizeManager", 2510, G__macroRootDict_409_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_409_0_34, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_OneRunDataAnalizeManager), -1, 1, 1, 1, 1, 0, "u 'OneRunDataAnalizeManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncOneGoodnessParameters(void) {
   /* OneGoodnessParameters */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameters));
   G__memfunc_setup("OneGoodnessParameters",2168,G__macroRootDict_414_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameters), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setpair",728,G__macroRootDict_414_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetValue",809,G__macroRootDict_414_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintValue",1034,G__macroRootDict_414_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isEqual",724,G__macroRootDict_414_0_5, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'OneGoodnessParameters' - 0 - compare u 'vector<string,allocator<string> >' 'vector<std::string>' 0 - exclusionname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getfile",704,G__macroRootDict_414_0_6, 117, G__get_linked_tagnum(&G__macroRootDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("split",556,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__macroRootDictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 4, 0, "u 'string' - 1 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasname",733,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 2, 1, 4, 0, 
"u 'vector<string,allocator<string> >' 'vector<std::string>' 0 - vname u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__macroRootDict_414_0_9, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&OneGoodnessParameters::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_414_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&OneGoodnessParameters::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_414_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&OneGoodnessParameters::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_414_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&OneGoodnessParameters::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__macroRootDict_414_0_13, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__macroRootDict_414_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__macroRootDict_414_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_414_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_414_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&OneGoodnessParameters::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_414_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&OneGoodnessParameters::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_414_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&OneGoodnessParameters::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_414_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&OneGoodnessParameters::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("OneGoodnessParameters", 2168, G__macroRootDict_414_0_21, (int) ('i'), 
G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameters), -1, 0, 1, 1, 1, 0, "u 'OneGoodnessParameters' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~OneGoodnessParameters", 2294, G__macroRootDict_414_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_414_0_23, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameters), -1, 1, 1, 1, 1, 0, "u 'OneGoodnessParameters' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncOneRunGoodnessAnalizeManager(void) {
   /* OneRunGoodnessAnalizeManager */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_OneRunGoodnessAnalizeManager));
   G__memfunc_setup("OneRunGoodnessAnalizeManager",2840,G__macroRootDict_424_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_OneRunGoodnessAnalizeManager), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OneRunGoodnessAnalizeManager",2840,G__macroRootDict_424_0_2, 105, G__get_linked_tagnum(&G__macroRootDictLN_OneRunGoodnessAnalizeManager), -1, 0, 1, 1, 1, 0, "C - - 10 - goodnessfile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setgoodnessfile",1582,G__macroRootDict_424_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - goodnessfile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntry",818,G__macroRootDict_424_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetT",372,G__macroRootDict_424_0_5, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__macroRootDict_424_0_6, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__macroRootDict_424_0_7, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__macroRootDict_424_0_8, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getgoodness",1154,G__macroRootDict_424_0_9, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCSearch_range",1573,G__macroRootDict_424_0_10, 117, G__get_linked_tagnum(&G__macroRootDictLN_CSearch_range), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getnevent",944,G__macroRootDict_424_0_11, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGoodnessParameters",2166,G__macroRootDict_424_0_12, 85, G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessParameters), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__macroRootDict_424_0_13, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&OneRunGoodnessAnalizeManager::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_424_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&OneRunGoodnessAnalizeManager::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_424_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&OneRunGoodnessAnalizeManager::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_424_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&OneRunGoodnessAnalizeManager::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_424_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_424_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&OneRunGoodnessAnalizeManager::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_424_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&OneRunGoodnessAnalizeManager::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_424_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&OneRunGoodnessAnalizeManager::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_424_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&OneRunGoodnessAnalizeManager::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("OneRunGoodnessAnalizeManager", 2840, G__macroRootDict_424_0_25, (int) ('i'), 
G__get_linked_tagnum(&G__macroRootDictLN_OneRunGoodnessAnalizeManager), -1, 0, 1, 1, 1, 0, "u 'OneRunGoodnessAnalizeManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~OneRunGoodnessAnalizeManager", 2966, G__macroRootDict_424_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_424_0_27, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_OneRunGoodnessAnalizeManager), -1, 1, 1, 1, 1, 0, "u 'OneRunGoodnessAnalizeManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncOneLikelihoodParameters(void) {
   /* OneLikelihoodParameters */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameters));
   G__memfunc_setup("OneLikelihoodParameters",2362,G__macroRootDict_425_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameters), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setpair",728,G__macroRootDict_425_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetValue",809,G__macroRootDict_425_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintValue",1034,G__macroRootDict_425_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isEqual",724,G__macroRootDict_425_0_5, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'OneLikelihoodParameters' - 0 - compare u 'vector<string,allocator<string> >' 'vector<std::string>' 0 - exclusionname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getfile",704,G__macroRootDict_425_0_6, 117, G__get_linked_tagnum(&G__macroRootDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("split",556,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__macroRootDictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 4, 0, "u 'string' - 1 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasname",733,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 2, 1, 4, 0, 
"u 'vector<string,allocator<string> >' 'vector<std::string>' 0 - vname u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__macroRootDict_425_0_9, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&OneLikelihoodParameters::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_425_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&OneLikelihoodParameters::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_425_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&OneLikelihoodParameters::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_425_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&OneLikelihoodParameters::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_425_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_425_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&OneLikelihoodParameters::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_425_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&OneLikelihoodParameters::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_425_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&OneLikelihoodParameters::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_425_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&OneLikelihoodParameters::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("OneLikelihoodParameters", 2362, G__macroRootDict_425_0_21, (int) ('i'), 
G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameters), -1, 0, 1, 1, 1, 0, "u 'OneLikelihoodParameters' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~OneLikelihoodParameters", 2488, G__macroRootDict_425_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_425_0_23, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameters), -1, 1, 1, 1, 1, 0, "u 'OneLikelihoodParameters' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncOneRunLikelihoodAnalizeManager(void) {
   /* OneRunLikelihoodAnalizeManager */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_OneRunLikelihoodAnalizeManager));
   G__memfunc_setup("OneRunLikelihoodAnalizeManager",3034,G__macroRootDict_441_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_OneRunLikelihoodAnalizeManager), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OneRunLikelihoodAnalizeManager",3034,G__macroRootDict_441_0_2, 105, G__get_linked_tagnum(&G__macroRootDictLN_OneRunLikelihoodAnalizeManager), -1, 0, 1, 1, 1, 0, "C - - 10 - likelihoodfile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setlikelihoodfile",1776,G__macroRootDict_441_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - likelihoodfile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntry",818,G__macroRootDict_441_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAngleRange",1268,G__macroRootDict_441_0_5, 117, G__get_linked_tagnum(&G__macroRootDictLN_AngleRange), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirection",1217,G__macroRootDict_441_0_6, 117, G__get_linked_tagnum(&G__macroRootDictLN_TVector3), -1, 0, 1, 1, 1, 0, "i - - 0 - ievent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getevent",834,G__macroRootDict_441_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLikelihoodParameters",2360,G__macroRootDict_441_0_8, 85, G__get_linked_tagnum(&G__macroRootDictLN_OneLikelihoodParameters), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__macroRootDict_441_0_9, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&OneRunLikelihoodAnalizeManager::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_441_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&OneRunLikelihoodAnalizeManager::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_441_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&OneRunLikelihoodAnalizeManager::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_441_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&OneRunLikelihoodAnalizeManager::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_441_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_441_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&OneRunLikelihoodAnalizeManager::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_441_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&OneRunLikelihoodAnalizeManager::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_441_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&OneRunLikelihoodAnalizeManager::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_441_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&OneRunLikelihoodAnalizeManager::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("OneRunLikelihoodAnalizeManager", 3034, G__macroRootDict_441_0_21, (int) ('i'), 
G__get_linked_tagnum(&G__macroRootDictLN_OneRunLikelihoodAnalizeManager), -1, 0, 1, 1, 1, 0, "u 'OneRunLikelihoodAnalizeManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~OneRunLikelihoodAnalizeManager", 3160, G__macroRootDict_441_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_441_0_23, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_OneRunLikelihoodAnalizeManager), -1, 1, 1, 1, 1, 0, "u 'OneRunLikelihoodAnalizeManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTOption_minimize(void) {
   /* TOption_minimize */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_TOption_minimize));
   G__memfunc_setup("TOption_minimize",1678,G__macroRootDict_442_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_TOption_minimize), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOption",933,G__macroRootDict_442_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TOption_minimize' - 0 - op", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__macroRootDict_442_0_3, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TOption_minimize::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_442_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TOption_minimize::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_442_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TOption_minimize::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_442_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TOption_minimize::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_442_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_442_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TOption_minimize::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_442_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TOption_minimize::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_442_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TOption_minimize::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_442_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TOption_minimize::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TOption_minimize", 1678, G__macroRootDict_442_0_15, (int) ('i'), G__get_linked_tagnum(&G__macroRootDictLN_TOption_minimize), -1, 0, 1, 1, 1, 0, "u 'TOption_minimize' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TOption_minimize", 1804, G__macroRootDict_442_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_442_0_17, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_TOption_minimize), -1, 1, 1, 1, 1, 0, "u 'TOption_minimize' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncOneGoodnessMinimizeParameters(void) {
   /* OneGoodnessMinimizeParameters */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameters));
   G__memfunc_setup("OneGoodnessMinimizeParameters",3002,G__macroRootDict_443_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameters), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setpair",728,G__macroRootDict_443_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetValue",809,G__macroRootDict_443_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintValue",1034,G__macroRootDict_443_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isEqual",724,G__macroRootDict_443_0_5, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'OneGoodnessMinimizeParameters' - 0 - compare u 'vector<string,allocator<string> >' 'vector<std::string>' 0 - exclusionname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getfile",704,G__macroRootDict_443_0_6, 117, G__get_linked_tagnum(&G__macroRootDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("split",556,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__macroRootDictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 4, 0, "u 'string' - 1 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasname",733,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 2, 1, 4, 0, 
"u 'vector<string,allocator<string> >' 'vector<std::string>' 0 - vname u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__macroRootDict_443_0_9, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&OneGoodnessMinimizeParameters::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_443_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&OneGoodnessMinimizeParameters::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_443_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&OneGoodnessMinimizeParameters::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_443_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&OneGoodnessMinimizeParameters::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_443_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_443_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&OneGoodnessMinimizeParameters::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_443_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&OneGoodnessMinimizeParameters::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_443_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&OneGoodnessMinimizeParameters::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_443_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&OneGoodnessMinimizeParameters::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("OneGoodnessMinimizeParameters", 3002, G__macroRootDict_443_0_21, (int) ('i'), 
G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameters), -1, 0, 1, 1, 1, 0, "u 'OneGoodnessMinimizeParameters' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~OneGoodnessMinimizeParameters", 3128, G__macroRootDict_443_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_443_0_23, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameters), -1, 1, 1, 1, 1, 0, "u 'OneGoodnessMinimizeParameters' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncOneRunGoodnessMinimizeAnalizeManager(void) {
   /* OneRunGoodnessMinimizeAnalizeManager */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_OneRunGoodnessMinimizeAnalizeManager));
   G__memfunc_setup("OneRunGoodnessMinimizeAnalizeManager",3674,G__macroRootDict_461_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_OneRunGoodnessMinimizeAnalizeManager), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OneRunGoodnessMinimizeAnalizeManager",3674,G__macroRootDict_461_0_2, 105, G__get_linked_tagnum(&G__macroRootDictLN_OneRunGoodnessMinimizeAnalizeManager), -1, 0, 1, 1, 1, 0, "C - - 10 - goodnessminimizefile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setgoodnessminimizefile",2448,G__macroRootDict_461_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - goodnessminimizefile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntry",818,G__macroRootDict_461_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getevent",834,G__macroRootDict_461_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGoodnessMinimizeParameters",3000,G__macroRootDict_461_0_6, 85, G__get_linked_tagnum(&G__macroRootDictLN_OneGoodnessMinimizeParameters), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__macroRootDict_461_0_7, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&OneRunGoodnessMinimizeAnalizeManager::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_461_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&OneRunGoodnessMinimizeAnalizeManager::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_461_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&OneRunGoodnessMinimizeAnalizeManager::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_461_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&OneRunGoodnessMinimizeAnalizeManager::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_461_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_461_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&OneRunGoodnessMinimizeAnalizeManager::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_461_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&OneRunGoodnessMinimizeAnalizeManager::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_461_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&OneRunGoodnessMinimizeAnalizeManager::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_461_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&OneRunGoodnessMinimizeAnalizeManager::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("OneRunGoodnessMinimizeAnalizeManager", 3674, G__macroRootDict_461_0_19, (int) ('i'), 
G__get_linked_tagnum(&G__macroRootDictLN_OneRunGoodnessMinimizeAnalizeManager), -1, 0, 1, 1, 1, 0, "u 'OneRunGoodnessMinimizeAnalizeManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~OneRunGoodnessMinimizeAnalizeManager", 3800, G__macroRootDict_461_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_461_0_21, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_OneRunGoodnessMinimizeAnalizeManager), -1, 1, 1, 1, 1, 0, "u 'OneRunGoodnessMinimizeAnalizeManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBiasError(void) {
   /* BiasError */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_BiasError));
   G__memfunc_setup("BiasError",905,G__macroRootDict_462_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_BiasError), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__macroRootDict_462_0_2, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BiasError::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_462_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BiasError::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_462_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BiasError::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_462_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BiasError::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_462_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_462_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BiasError::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_462_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BiasError::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_462_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BiasError::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_462_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BiasError::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("BiasError", 905, G__macroRootDict_462_0_14, (int) ('i'), G__get_linked_tagnum(&G__macroRootDictLN_BiasError), -1, 0, 1, 1, 1, 0, "u 'BiasError' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BiasError", 1031, G__macroRootDict_462_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_462_0_16, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_BiasError), -1, 1, 1, 1, 1, 0, "u 'BiasError' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncOneRunAnalizeManager(void) {
   /* OneRunAnalizeManager */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_OneRunAnalizeManager));
   G__memfunc_setup("OneRunAnalizeManager",2006,G__macroRootDict_463_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_OneRunAnalizeManager), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OneRunAnalizeManager",2006,G__macroRootDict_463_0_2, 105, G__get_linked_tagnum(&G__macroRootDictLN_OneRunAnalizeManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - datafile C - - 10 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setdatafile",1126,G__macroRootDict_463_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - datafile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGoodnessfile",1550,G__macroRootDict_463_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - goodnessfile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLikelihoodfile",1744,G__macroRootDict_463_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - likelihoodfile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGoodnessMinimizefile",2384,G__macroRootDict_463_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - goodnessminimizefile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getdatamanager",1429,G__macroRootDict_463_0_7, 85, G__get_linked_tagnum(&G__macroRootDictLN_OneRunDataAnalizeManager), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getgoodnessmanager",1885,G__macroRootDict_463_0_8, 85, G__get_linked_tagnum(&G__macroRootDictLN_OneRunGoodnessAnalizeManager), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getlikelihoodmanager",2079,G__macroRootDict_463_0_9, 85, G__get_linked_tagnum(&G__macroRootDictLN_OneRunLikelihoodAnalizeManager), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getgoodnessminimizemanager",2751,G__macroRootDict_463_0_10, 85, G__get_linked_tagnum(&G__macroRootDictLN_OneRunGoodnessMinimizeAnalizeManager), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTH2DEvent",1076,G__macroRootDict_463_0_11, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TH2D' - 0 - h1 i - - 0 - n "
"C - - 10 - xvar C - - 10 - yvar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTH2DHit",855,G__macroRootDict_463_0_12, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TH2D' - 0 - h1 i - - 0 - n "
"C - - 10 - xvar C - - 10 - yvar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTH1DEvent",1075,G__macroRootDict_463_0_13, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TH1D' - 0 - h1 i - - 0 - n "
"C - - 10 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTH1DHit",854,G__macroRootDict_463_0_14, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TH1D' - 0 - h1 i - - 0 - n "
"C - - 10 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXBiasErrorbygoodness",2366,G__macroRootDict_463_0_15, 117, G__get_linked_tagnum(&G__macroRootDictLN_BiasError), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYBiasErrorbygoodness",2367,G__macroRootDict_463_0_16, 117, G__get_linked_tagnum(&G__macroRootDictLN_BiasError), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZBiasErrorbygoodness",2368,G__macroRootDict_463_0_17, 117, G__get_linked_tagnum(&G__macroRootDictLN_BiasError), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("angleerror1sigma",1651,G__macroRootDict_463_0_18, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVariableEvent",1608,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 2, 1, 4, 0, 
"C - - 10 - valname i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVariableHit",1387,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 3, 1, 4, 0, 
"C - - 10 - valname i - - 0 - ievent "
"i - - 0 - jhit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__macroRootDict_463_0_21, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&OneRunAnalizeManager::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_463_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&OneRunAnalizeManager::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_463_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&OneRunAnalizeManager::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_463_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&OneRunAnalizeManager::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_463_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_463_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&OneRunAnalizeManager::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_463_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&OneRunAnalizeManager::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_463_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&OneRunAnalizeManager::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_463_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&OneRunAnalizeManager::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("OneRunAnalizeManager", 2006, G__macroRootDict_463_0_33, (int) ('i'), G__get_linked_tagnum(&G__macroRootDictLN_OneRunAnalizeManager), -1, 0, 1, 1, 1, 0, "u 'OneRunAnalizeManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~OneRunAnalizeManager", 2132, G__macroRootDict_463_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_463_0_35, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_OneRunAnalizeManager), -1, 1, 1, 1, 1, 0, "u 'OneRunAnalizeManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTfunction(void) {
   /* Tfunction */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tfunction));
   G__memfunc_setup("returnvalue",1213,G__macroRootDict_464_0_2, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__macroRootDict_464_0_3, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Tfunction::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_464_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tfunction::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_464_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Tfunction::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_464_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Tfunction::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_464_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_464_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tfunction::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_464_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Tfunction::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_464_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tfunction::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_464_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Tfunction::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Tfunction", 1080, G__macroRootDict_464_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_464_0_16, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_Tfunction), -1, 1, 1, 1, 1, 0, "u 'Tfunction' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTafunction(void) {
   /* Tafunction */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tafunction));
   G__memfunc_setup("SetHitInfo",989,G__macroRootDict_465_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Thitinfo' - 0 - infoin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetReconstructdata",1890,G__macroRootDict_465_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TReconstructdata' - 0 - datain", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("returnvalue",1213,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__macroRootDict_465_0_5, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Tafunction::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_465_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tafunction::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_465_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Tafunction::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_465_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Tafunction::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_465_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_465_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tafunction::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_465_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Tafunction::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_465_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tafunction::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_465_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Tafunction::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Tafunction", 1177, G__macroRootDict_465_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_465_0_18, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_Tafunction), -1, 1, 1, 1, 1, 0, "u 'Tafunction' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTafuncprototype(void) {
   /* Tafuncprototype */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tafuncprototype));
   G__memfunc_setup("Tafuncprototype",1623,G__macroRootDict_466_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_Tafuncprototype), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("returnvalue",1213,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__macroRootDict_466_0_3, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Tafuncprototype::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_466_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tafuncprototype::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_466_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Tafuncprototype::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_466_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Tafuncprototype::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_466_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_466_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tafuncprototype::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_466_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Tafuncprototype::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_466_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tafuncprototype::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_466_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Tafuncprototype::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Tafuncprototype", 1623, G__macroRootDict_466_0_15, (int) ('i'), G__get_linked_tagnum(&G__macroRootDictLN_Tafuncprototype), -1, 0, 1, 1, 1, 0, "u 'Tafuncprototype' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Tafuncprototype", 1749, G__macroRootDict_466_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_466_0_17, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_Tafuncprototype), -1, 1, 1, 1, 1, 0, "u 'Tafuncprototype' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTdistance_function(void) {
   /* Tdistance_function */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_function));
   G__memfunc_setup("SetHitInfo",989,G__macroRootDict_467_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Thitinfo' - 0 - infoin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetReconstructdata",1890,G__macroRootDict_467_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TReconstructdata' - 0 - datain", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("returnvalue",1213,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__macroRootDict_467_0_5, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Tdistance_function::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_467_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tdistance_function::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_467_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Tdistance_function::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_467_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Tdistance_function::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_467_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_467_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tdistance_function::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_467_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Tdistance_function::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_467_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tdistance_function::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_467_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Tdistance_function::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Tdistance_function", 2018, G__macroRootDict_467_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_467_0_18, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_function), -1, 1, 1, 1, 1, 0, "u 'Tdistance_function' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTdistance_position_pmt(void) {
   /* Tdistance_position_pmt */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_position_pmt));
   G__memfunc_setup("Tdistance_position_pmt",2339,G__macroRootDict_468_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_position_pmt), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("returnvalue",1213,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__macroRootDict_468_0_3, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Tdistance_position_pmt::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_468_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tdistance_position_pmt::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_468_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Tdistance_position_pmt::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_468_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Tdistance_position_pmt::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_468_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_468_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tdistance_position_pmt::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_468_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Tdistance_position_pmt::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_468_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tdistance_position_pmt::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_468_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Tdistance_position_pmt::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Tdistance_position_pmt", 2339, G__macroRootDict_468_0_15, (int) ('i'), 
G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_position_pmt), -1, 0, 1, 1, 1, 0, "u 'Tdistance_position_pmt' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Tdistance_position_pmt", 2465, G__macroRootDict_468_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_468_0_17, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_position_pmt), -1, 1, 1, 1, 1, 0, "u 'Tdistance_position_pmt' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTdistance_position_retro(void) {
   /* Tdistance_position_retro */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_position_retro));
   G__memfunc_setup("Tdistance_position_retro",2558,G__macroRootDict_469_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_position_retro), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("returnvalue",1213,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__macroRootDict_469_0_3, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Tdistance_position_retro::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_469_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tdistance_position_retro::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_469_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Tdistance_position_retro::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_469_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Tdistance_position_retro::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_469_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_469_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tdistance_position_retro::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_469_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Tdistance_position_retro::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_469_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tdistance_position_retro::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_469_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Tdistance_position_retro::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Tdistance_position_retro", 2558, G__macroRootDict_469_0_15, (int) ('i'), 
G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_position_retro), -1, 0, 1, 1, 1, 0, "u 'Tdistance_position_retro' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Tdistance_position_retro", 2684, G__macroRootDict_469_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_469_0_17, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_position_retro), -1, 1, 1, 1, 1, 0, "u 'Tdistance_position_retro' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTdistance_fly_retro(void) {
   /* Tdistance_fly_retro */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_fly_retro));
   G__memfunc_setup("Tdistance_fly_retro",2004,G__macroRootDict_470_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_fly_retro), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("returnvalue",1213,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__macroRootDict_470_0_3, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Tdistance_fly_retro::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_470_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tdistance_fly_retro::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_470_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Tdistance_fly_retro::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_470_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Tdistance_fly_retro::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_470_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_470_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tdistance_fly_retro::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_470_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Tdistance_fly_retro::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_470_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tdistance_fly_retro::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_470_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Tdistance_fly_retro::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Tdistance_fly_retro", 2004, G__macroRootDict_470_0_15, (int) ('i'), G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_fly_retro), -1, 0, 1, 1, 1, 0, "u 'Tdistance_fly_retro' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Tdistance_fly_retro", 2130, G__macroRootDict_470_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_470_0_17, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_Tdistance_fly_retro), -1, 1, 1, 1, 1, 0, "u 'Tdistance_fly_retro' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTfdirection(void) {
   /* Tfdirection */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tfdirection));
   G__memfunc_setup("SetHitInfo",989,G__macroRootDict_471_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Thitinfo' - 0 - infoin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetReconstructdata",1890,G__macroRootDict_471_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TReconstructdata' - 0 - datain", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("returnvalue",1213,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__macroRootDict_471_0_5, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Tfdirection::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_471_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tfdirection::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_471_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Tfdirection::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_471_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Tfdirection::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_471_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_471_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tfdirection::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_471_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Tfdirection::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_471_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tfdirection::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_471_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Tfdirection::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Tfdirection", 1273, G__macroRootDict_471_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_471_0_18, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_Tfdirection), -1, 1, 1, 1, 1, 0, "u 'Tfdirection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTfdirprototypenoretro(void) {
   /* Tfdirprototypenoretro */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tfdirprototypenoretro));
   G__memfunc_setup("Tfdirprototypenoretro",2296,G__macroRootDict_472_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_Tfdirprototypenoretro), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("returnvalue",1213,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__macroRootDict_472_0_3, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Tfdirprototypenoretro::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_472_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tfdirprototypenoretro::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_472_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Tfdirprototypenoretro::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_472_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Tfdirprototypenoretro::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_472_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_472_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tfdirprototypenoretro::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_472_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Tfdirprototypenoretro::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_472_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tfdirprototypenoretro::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_472_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Tfdirprototypenoretro::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Tfdirprototypenoretro", 2296, G__macroRootDict_472_0_15, (int) ('i'), 
G__get_linked_tagnum(&G__macroRootDictLN_Tfdirprototypenoretro), -1, 0, 1, 1, 1, 0, "u 'Tfdirprototypenoretro' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Tfdirprototypenoretro", 2422, G__macroRootDict_472_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_472_0_17, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_Tfdirprototypenoretro), -1, 1, 1, 1, 1, 0, "u 'Tfdirprototypenoretro' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTfdirprototypeonretro(void) {
   /* Tfdirprototypeonretro */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tfdirprototypeonretro));
   G__memfunc_setup("Tfdirprototypeonretro",2296,G__macroRootDict_473_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_Tfdirprototypeonretro), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("returnvalue",1213,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__macroRootDict_473_0_3, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Tfdirprototypeonretro::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_473_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tfdirprototypeonretro::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_473_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Tfdirprototypeonretro::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_473_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Tfdirprototypeonretro::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_473_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_473_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tfdirprototypeonretro::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_473_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Tfdirprototypeonretro::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_473_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tfdirprototypeonretro::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_473_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Tfdirprototypeonretro::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Tfdirprototypeonretro", 2296, G__macroRootDict_473_0_15, (int) ('i'), 
G__get_linked_tagnum(&G__macroRootDictLN_Tfdirprototypeonretro), -1, 0, 1, 1, 1, 0, "u 'Tfdirprototypeonretro' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Tfdirprototypeonretro", 2422, G__macroRootDict_473_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_473_0_17, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_Tfdirprototypeonretro), -1, 1, 1, 1, 1, 0, "u 'Tfdirprototypeonretro' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTfdirbydatanoretro(void) {
   /* Tfdirbydatanoretro */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tfdirbydatanoretro));
   G__memfunc_setup("Tfdirbydatanoretro",1911,G__macroRootDict_474_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_Tfdirbydatanoretro), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("returnvalue",1213,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__macroRootDict_474_0_3, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Tfdirbydatanoretro::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_474_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tfdirbydatanoretro::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_474_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Tfdirbydatanoretro::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_474_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Tfdirbydatanoretro::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_474_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_474_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tfdirbydatanoretro::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_474_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Tfdirbydatanoretro::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_474_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tfdirbydatanoretro::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_474_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Tfdirbydatanoretro::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Tfdirbydatanoretro", 1911, G__macroRootDict_474_0_15, (int) ('i'), G__get_linked_tagnum(&G__macroRootDictLN_Tfdirbydatanoretro), -1, 0, 1, 1, 1, 0, "u 'Tfdirbydatanoretro' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Tfdirbydatanoretro", 2037, G__macroRootDict_474_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_474_0_17, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_Tfdirbydatanoretro), -1, 1, 1, 1, 1, 0, "u 'Tfdirbydatanoretro' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTfdirbydataonretro(void) {
   /* Tfdirbydataonretro */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tfdirbydataonretro));
   G__memfunc_setup("Tfdirbydataonretro",1911,G__macroRootDict_475_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_Tfdirbydataonretro), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("returnvalue",1213,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__macroRootDict_475_0_3, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Tfdirbydataonretro::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_475_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tfdirbydataonretro::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_475_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Tfdirbydataonretro::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_475_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Tfdirbydataonretro::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_475_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_475_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tfdirbydataonretro::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_475_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Tfdirbydataonretro::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_475_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tfdirbydataonretro::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_475_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Tfdirbydataonretro::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Tfdirbydataonretro", 1911, G__macroRootDict_475_0_15, (int) ('i'), G__get_linked_tagnum(&G__macroRootDictLN_Tfdirbydataonretro), -1, 0, 1, 1, 1, 0, "u 'Tfdirbydataonretro' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Tfdirbydataonretro", 2037, G__macroRootDict_475_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_475_0_17, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_Tfdirbydataonretro), -1, 1, 1, 1, 1, 0, "u 'Tfdirbydataonretro' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTlikelihood(void) {
   /* Tlikelihood */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihood));
   G__memfunc_setup("SetHitInfo",989,G__macroRootDict_476_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Thitinfo' - 0 - infoin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetReconstructdata",1890,G__macroRootDict_476_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TReconstructdata' - 0 - datain", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setfdirectionnoretro",2140,G__macroRootDict_476_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'Tfdirection' - 0 - fdir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setafunctionnoretro",2044,G__macroRootDict_476_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'Tafunction' - 0 - afunc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setfdirectiononretro",2140,G__macroRootDict_476_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'Tfdirection' - 0 - fdir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setafunctiononretro",2044,G__macroRootDict_476_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'Tafunction' - 0 - afunc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("returnvalue",1213,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__macroRootDict_476_0_9, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Tlikelihood::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_476_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tlikelihood::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_476_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Tlikelihood::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_476_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Tlikelihood::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_476_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_476_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tlikelihood::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_476_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Tlikelihood::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_476_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tlikelihood::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_476_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Tlikelihood::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Tlikelihood", 1270, G__macroRootDict_476_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_476_0_22, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihood), -1, 1, 1, 1, 1, 0, "u 'Tlikelihood' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTlikelihoodnoretro(void) {
   /* Tlikelihoodnoretro */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihoodnoretro));
   G__memfunc_setup("Tlikelihoodnoretro",1921,G__macroRootDict_477_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihoodnoretro), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("returnvalue",1213,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__macroRootDict_477_0_3, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Tlikelihoodnoretro::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_477_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tlikelihoodnoretro::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_477_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Tlikelihoodnoretro::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_477_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Tlikelihoodnoretro::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_477_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_477_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tlikelihoodnoretro::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_477_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Tlikelihoodnoretro::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_477_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tlikelihoodnoretro::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_477_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Tlikelihoodnoretro::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Tlikelihoodnoretro", 1921, G__macroRootDict_477_0_15, (int) ('i'), G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihoodnoretro), -1, 0, 1, 1, 1, 0, "u 'Tlikelihoodnoretro' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Tlikelihoodnoretro", 2047, G__macroRootDict_477_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_477_0_17, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihoodnoretro), -1, 1, 1, 1, 1, 0, "u 'Tlikelihoodnoretro' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTlikelihoodonretro(void) {
   /* Tlikelihoodonretro */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihoodonretro));
   G__memfunc_setup("Tlikelihoodonretro",1921,G__macroRootDict_478_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihoodonretro), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("returnvalue",1213,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__macroRootDict_478_0_3, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Tlikelihoodonretro::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_478_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tlikelihoodonretro::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_478_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Tlikelihoodonretro::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_478_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Tlikelihoodonretro::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_478_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_478_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tlikelihoodonretro::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_478_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Tlikelihoodonretro::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_478_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tlikelihoodonretro::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_478_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Tlikelihoodonretro::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Tlikelihoodonretro", 1921, G__macroRootDict_478_0_15, (int) ('i'), G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihoodonretro), -1, 0, 1, 1, 1, 0, "u 'Tlikelihoodonretro' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Tlikelihoodonretro", 2047, G__macroRootDict_478_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_478_0_17, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihoodonretro), -1, 1, 1, 1, 1, 0, "u 'Tlikelihoodonretro' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTlikelihoodsum(void) {
   /* Tlikelihoodsum */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihoodsum));
   G__memfunc_setup("Tlikelihoodsum",1485,G__macroRootDict_479_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihoodsum), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("returnvalue",1213,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__macroRootDict_479_0_3, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Tlikelihoodsum::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_479_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tlikelihoodsum::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_479_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Tlikelihoodsum::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_479_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Tlikelihoodsum::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_479_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_479_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tlikelihoodsum::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_479_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Tlikelihoodsum::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_479_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Tlikelihoodsum::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_479_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Tlikelihoodsum::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Tlikelihoodsum", 1485, G__macroRootDict_479_0_15, (int) ('i'), G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihoodsum), -1, 0, 1, 1, 1, 0, "u 'Tlikelihoodsum' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Tlikelihoodsum", 1611, G__macroRootDict_479_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_479_0_17, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_Tlikelihoodsum), -1, 1, 1, 1, 1, 0, "u 'Tlikelihoodsum' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTtheta_dir_i(void) {
   /* Ttheta_dir_i */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_Ttheta_dir_i));
   G__memfunc_setup("Ttheta_dir_i",1232,G__macroRootDict_480_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_Ttheta_dir_i), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHitInfo",989,G__macroRootDict_480_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Thitinfo' - 0 - infoin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetReconstructdata",1890,G__macroRootDict_480_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TReconstructdata' - 0 - datain", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("returnvalue",1213,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__macroRootDict_480_0_5, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Ttheta_dir_i::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_480_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ttheta_dir_i::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_480_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Ttheta_dir_i::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_480_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Ttheta_dir_i::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_480_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_480_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ttheta_dir_i::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_480_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ttheta_dir_i::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_480_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ttheta_dir_i::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_480_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ttheta_dir_i::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Ttheta_dir_i", 1232, G__macroRootDict_480_0_17, (int) ('i'), G__get_linked_tagnum(&G__macroRootDictLN_Ttheta_dir_i), -1, 0, 1, 1, 1, 0, "u 'Ttheta_dir_i' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Ttheta_dir_i", 1358, G__macroRootDict_480_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_480_0_19, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_Ttheta_dir_i), -1, 1, 1, 1, 1, 0, "u 'Ttheta_dir_i' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTtheta_i_func(void) {
   /* Ttheta_i_func */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_Ttheta_i_func));
   G__memfunc_setup("Ttheta_i_func",1341,G__macroRootDict_481_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_Ttheta_i_func), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHitInfo",989,G__macroRootDict_481_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Thitinfo' - 0 - infoin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetReconstructdata",1890,G__macroRootDict_481_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TReconstructdata' - 0 - datain", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("returnvalue",1213,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__macroRootDict_481_0_5, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Ttheta_i_func::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_481_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ttheta_i_func::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_481_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Ttheta_i_func::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_481_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Ttheta_i_func::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_481_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_481_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ttheta_i_func::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_481_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ttheta_i_func::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_481_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ttheta_i_func::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_481_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ttheta_i_func::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Ttheta_i_func", 1341, G__macroRootDict_481_0_17, (int) ('i'), G__get_linked_tagnum(&G__macroRootDictLN_Ttheta_i_func), -1, 0, 1, 1, 1, 0, "u 'Ttheta_i_func' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Ttheta_i_func", 1467, G__macroRootDict_481_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_481_0_19, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_Ttheta_i_func), -1, 1, 1, 1, 1, 0, "u 'Ttheta_i_func' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTtof(void) {
   /* Ttof */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_Ttof));
   G__memfunc_setup("Ttof",413,G__macroRootDict_482_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_Ttof), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHitInfo",989,G__macroRootDict_482_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Thitinfo' - 0 - infoin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetReconstructdata",1890,G__macroRootDict_482_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TReconstructdata' - 0 - datain", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setdistancefunction",2013,G__macroRootDict_482_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'Tdistance_function' - 0 - dfunc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("returnvalue",1213,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__macroRootDict_482_0_6, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Ttof::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_482_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ttof::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_482_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Ttof::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_482_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Ttof::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_482_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_482_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ttof::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_482_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ttof::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_482_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ttof::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_482_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ttof::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Ttof", 413, G__macroRootDict_482_0_18, (int) ('i'), G__get_linked_tagnum(&G__macroRootDictLN_Ttof), -1, 0, 1, 1, 1, 0, "u 'Ttof' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Ttof", 539, G__macroRootDict_482_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_482_0_20, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_Ttof), -1, 1, 1, 1, 1, 0, "u 'Ttof' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMyString(void) {
   /* MyString */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_MyString));
   G__memfunc_setup("MyString",829,G__macroRootDict_483_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_MyString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getstring",951,G__macroRootDict_483_0_2, 117, G__get_linked_tagnum(&G__macroRootDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setstring",963,G__macroRootDict_483_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__macroRootDict_483_0_4, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MyString::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_483_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyString::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_483_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MyString::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_483_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MyString::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_483_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_483_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyString::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_483_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyString::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_483_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyString::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_483_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyString::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MyString", 829, G__macroRootDict_483_0_16, (int) ('i'), G__get_linked_tagnum(&G__macroRootDictLN_MyString), -1, 0, 1, 1, 1, 0, "u 'MyString' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MyString", 955, G__macroRootDict_483_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_483_0_18, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_MyString), -1, 1, 1, 1, 1, 0, "u 'MyString' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMultiRunAnalizeManager(void) {
   /* MultiRunAnalizeManager */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__macroRootDictLN_MultiRunAnalizeManager));
   G__memfunc_setup("MultiRunAnalizeManager",2239,G__macroRootDict_484_0_1, 105, G__get_linked_tagnum(&G__macroRootDictLN_MultiRunAnalizeManager), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBasefile",1095,G__macroRootDict_484_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetComparefile",1427,G__macroRootDict_484_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<string,allocator<string> >' 'vector<std::string>' 0 - vexclusionname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAllfile",997,G__macroRootDict_484_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintAllfile",1222,G__macroRootDict_484_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintComparefile",1652,G__macroRootDict_484_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTH1D",561,G__macroRootDict_484_0_7, 121, -1, -1, 0, 5, 1, 1, 0, 
"U 'TH1D' - 0 - h1 C - - 10 - xvar "
"C - - 10 - yvar g - - 0 'false' berror "
"C - - 10 '\"\"' errorval", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVariable",1094,G__macroRootDict_484_0_8, 100, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - var U 'OneRunAnalizeManager' - 0 - oram", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__macroRootDict_484_0_9, 85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MultiRunAnalizeManager::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__macroRootDict_484_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MultiRunAnalizeManager::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__macroRootDict_484_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MultiRunAnalizeManager::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__macroRootDict_484_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MultiRunAnalizeManager::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__macroRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__macroRootDict_484_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__macroRootDict_484_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MultiRunAnalizeManager::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__macroRootDict_484_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MultiRunAnalizeManager::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__macroRootDict_484_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MultiRunAnalizeManager::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__macroRootDict_484_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MultiRunAnalizeManager::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MultiRunAnalizeManager", 2239, G__macroRootDict_484_0_21, (int) ('i'), 
G__get_linked_tagnum(&G__macroRootDictLN_MultiRunAnalizeManager), -1, 0, 1, 1, 1, 0, "u 'MultiRunAnalizeManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MultiRunAnalizeManager", 2365, G__macroRootDict_484_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__macroRootDict_484_0_23, (int) ('u'), G__get_linked_tagnum(&G__macroRootDictLN_MultiRunAnalizeManager), -1, 1, 1, 1, 1, 0, "u 'MultiRunAnalizeManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncmacroRootDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalmacroRootDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcmacroRootDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__macroRootDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TCollection = { "TCollection" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TArray = { "TArray" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TArrayD = { "TArrayD" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TAttFill = { "TAttFill" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TAttMarker = { "TAttMarker" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TH2D = { "TH2D" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TArc = { "TArc" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TPave = { "TPave" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_Eventdisplay = { "Eventdisplay" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_goodness_data = { "goodness_data" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_l_dir_data = { "l_dir_data" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_AnalizedData = { "AnalizedData" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_C4Number = { "C4Number" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_CSearch_range = { "CSearch_range" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TSeqCollection = { "TSeqCollection" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__macroRootDictLN_FileList = { "FileList" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_efficiency = { "efficiency" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TH1DByTree = { "TH1DByTree" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TH1DByTreecLcLAxis = { "TH1DByTree::Axis" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_HistError = { "HistError" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_HistBias = { "HistBias" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_WCSimRootCherenkovDigiHit = { "WCSimRootCherenkovDigiHit" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<float,allocator<float> >::iterator>" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_WCSimRootEvent = { "WCSimRootEvent" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_WCSimRootPMT = { "WCSimRootPMT" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_WCSimRootGeom = { "WCSimRootGeom" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_AngleRange = { "AngleRange" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TReconstructhit = { "TReconstructhit" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TReconstructdata = { "TReconstructdata" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_vectorlETReconstructhitcOallocatorlETReconstructhitgRsPgR = { "vector<TReconstructhit,allocator<TReconstructhit> >" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_reverse_iteratorlEvectorlETReconstructhitcOallocatorlETReconstructhitgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TReconstructhit,allocator<TReconstructhit> >::iterator>" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TReconstructdata_minimize = { "TReconstructdata_minimize" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_Thitinfo = { "Thitinfo" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_OneDataParameters = { "OneDataParameters" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_OneDataParameterscLcLDetector = { "OneDataParameters::Detector" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneDataParameterscLcLParticle = { "OneDataParameters::Particle" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneDataParameterscLcLPostype = { "OneDataParameters::Postype" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneDataParameterscLcLDirtype = { "OneDataParameters::Dirtype" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneDataParameterscLcLEtype = { "OneDataParameters::Etype" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneDataParameterscLcLInforeflectivity = { "OneDataParameters::Inforeflectivity" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneDataParameterscLcLReflectspread = { "OneDataParameters::Reflectspread" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_pairlEstringcOstringgR = { "pair<string,string>" , 115 , -1 };
G__linked_taginfo G__macroRootDictLN_vectorlEpairlEstringcOstringgRcOallocatorlEpairlEstringcOstringgRsPgRsPgR = { "vector<pair<string,string>,allocator<pair<string,string> > >" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_reverse_iteratorlEvectorlEpairlEstringcOstringgRcOallocatorlEpairlEstringcOstringgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<string,string>,allocator<pair<string,string> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_OneRunDataAnalizeManager = { "OneRunDataAnalizeManager" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_vectorlEThitinfocOallocatorlEThitinfogRsPgR = { "vector<Thitinfo,allocator<Thitinfo> >" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_reverse_iteratorlEvectorlEThitinfocOallocatorlEThitinfogRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Thitinfo,allocator<Thitinfo> >::iterator>" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_OneGoodnessParameters = { "OneGoodnessParameters" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_OneGoodnessParameterscLcLDetector = { "OneGoodnessParameters::Detector" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneGoodnessParameterscLcLParticle = { "OneGoodnessParameters::Particle" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneGoodnessParameterscLcLPostype = { "OneGoodnessParameters::Postype" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneGoodnessParameterscLcLDirtype = { "OneGoodnessParameters::Dirtype" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneGoodnessParameterscLcLEtype = { "OneGoodnessParameters::Etype" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneGoodnessParameterscLcLInforeflectivity = { "OneGoodnessParameters::Inforeflectivity" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneGoodnessParameterscLcLReflectspread = { "OneGoodnessParameters::Reflectspread" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneGoodnessParameterscLcLGoodnessType = { "OneGoodnessParameters::GoodnessType" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneGoodnessParameterscLcLGoodnessSearchRangeType = { "OneGoodnessParameters::GoodnessSearchRangeType" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneRunGoodnessAnalizeManager = { "OneRunGoodnessAnalizeManager" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_OneLikelihoodParameters = { "OneLikelihoodParameters" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_OneLikelihoodParameterscLcLDetector = { "OneLikelihoodParameters::Detector" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneLikelihoodParameterscLcLParticle = { "OneLikelihoodParameters::Particle" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneLikelihoodParameterscLcLPostype = { "OneLikelihoodParameters::Postype" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneLikelihoodParameterscLcLDirtype = { "OneLikelihoodParameters::Dirtype" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneLikelihoodParameterscLcLEtype = { "OneLikelihoodParameters::Etype" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneLikelihoodParameterscLcLInforeflectivity = { "OneLikelihoodParameters::Inforeflectivity" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneLikelihoodParameterscLcLReflectspread = { "OneLikelihoodParameters::Reflectspread" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneLikelihoodParameterscLcLGoodnessType = { "OneLikelihoodParameters::GoodnessType" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneLikelihoodParameterscLcLGoodnessSearchRangeType = { "OneLikelihoodParameters::GoodnessSearchRangeType" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneLikelihoodParameterscLcLLikelihoodType = { "OneLikelihoodParameters::LikelihoodType" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneLikelihoodParameterscLcLNoRetroFdirection = { "OneLikelihoodParameters::NoRetroFdirection" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneLikelihoodParameterscLcLOnRetroFdirection = { "OneLikelihoodParameters::OnRetroFdirection" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneLikelihoodParameterscLcLNoRetroAfunction = { "OneLikelihoodParameters::NoRetroAfunction" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneLikelihoodParameterscLcLOnRetroAfunction = { "OneLikelihoodParameters::OnRetroAfunction" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneLikelihoodParameterscLcLLikelihoodSearchRangeType = { "OneLikelihoodParameters::LikelihoodSearchRangeType" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneRunLikelihoodAnalizeManager = { "OneRunLikelihoodAnalizeManager" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_TOption_minimize = { "TOption_minimize" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_OneGoodnessMinimizeParameters = { "OneGoodnessMinimizeParameters" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLDetector = { "OneGoodnessMinimizeParameters::Detector" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLParticle = { "OneGoodnessMinimizeParameters::Particle" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLPostype = { "OneGoodnessMinimizeParameters::Postype" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLDirtype = { "OneGoodnessMinimizeParameters::Dirtype" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLEtype = { "OneGoodnessMinimizeParameters::Etype" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLInforeflectivity = { "OneGoodnessMinimizeParameters::Inforeflectivity" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLReflectspread = { "OneGoodnessMinimizeParameters::Reflectspread" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLGoodnessType = { "OneGoodnessMinimizeParameters::GoodnessType" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLGoodnessSearchRangeType = { "OneGoodnessMinimizeParameters::GoodnessSearchRangeType" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLLikelihoodType = { "OneGoodnessMinimizeParameters::LikelihoodType" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLNoRetroFdirection = { "OneGoodnessMinimizeParameters::NoRetroFdirection" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLOnRetroFdirection = { "OneGoodnessMinimizeParameters::OnRetroFdirection" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLNoRetroAfunction = { "OneGoodnessMinimizeParameters::NoRetroAfunction" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLOnRetroAfunction = { "OneGoodnessMinimizeParameters::OnRetroAfunction" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLLikelihoodSearchRangeType = { "OneGoodnessMinimizeParameters::LikelihoodSearchRangeType" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLGoodnessMinimizeType = { "OneGoodnessMinimizeParameters::GoodnessMinimizeType" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLOnRetroCorrectionType = { "OneGoodnessMinimizeParameters::OnRetroCorrectionType" , 101 , -1 };
G__linked_taginfo G__macroRootDictLN_OneRunGoodnessMinimizeAnalizeManager = { "OneRunGoodnessMinimizeAnalizeManager" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_BiasError = { "BiasError" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_OneRunAnalizeManager = { "OneRunAnalizeManager" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_Tfunction = { "Tfunction" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_Tafunction = { "Tafunction" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_Tafuncprototype = { "Tafuncprototype" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_Tdistance_function = { "Tdistance_function" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_Tdistance_position_pmt = { "Tdistance_position_pmt" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_Tdistance_position_retro = { "Tdistance_position_retro" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_Tdistance_fly_retro = { "Tdistance_fly_retro" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_Tfdirection = { "Tfdirection" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_Tfdirprototypenoretro = { "Tfdirprototypenoretro" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_Tfdirprototypeonretro = { "Tfdirprototypeonretro" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_Tfdirbydatanoretro = { "Tfdirbydatanoretro" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_Tfdirbydataonretro = { "Tfdirbydataonretro" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_Tlikelihood = { "Tlikelihood" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_Tlikelihoodnoretro = { "Tlikelihoodnoretro" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_Tlikelihoodonretro = { "Tlikelihoodonretro" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_Tlikelihoodsum = { "Tlikelihoodsum" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_Ttheta_dir_i = { "Ttheta_dir_i" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_Ttheta_i_func = { "Ttheta_i_func" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_Ttof = { "Ttof" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_MyString = { "MyString" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_MultiRunAnalizeManager = { "MultiRunAnalizeManager" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_vectorlEOneDataParameterscOallocatorlEOneDataParametersgRsPgR = { "vector<OneDataParameters,allocator<OneDataParameters> >" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_reverse_iteratorlEvectorlEOneDataParameterscOallocatorlEOneDataParametersgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<OneDataParameters,allocator<OneDataParameters> >::iterator>" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_vectorlEOneGoodnessParameterscOallocatorlEOneGoodnessParametersgRsPgR = { "vector<OneGoodnessParameters,allocator<OneGoodnessParameters> >" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_reverse_iteratorlEvectorlEOneGoodnessParameterscOallocatorlEOneGoodnessParametersgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<OneGoodnessParameters,allocator<OneGoodnessParameters> >::iterator>" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_vectorlEOneLikelihoodParameterscOallocatorlEOneLikelihoodParametersgRsPgR = { "vector<OneLikelihoodParameters,allocator<OneLikelihoodParameters> >" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_reverse_iteratorlEvectorlEOneLikelihoodParameterscOallocatorlEOneLikelihoodParametersgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<OneLikelihoodParameters,allocator<OneLikelihoodParameters> >::iterator>" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_vectorlEOneGoodnessMinimizeParameterscOallocatorlEOneGoodnessMinimizeParametersgRsPgR = { "vector<OneGoodnessMinimizeParameters,allocator<OneGoodnessMinimizeParameters> >" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_reverse_iteratorlEvectorlEOneGoodnessMinimizeParameterscOallocatorlEOneGoodnessMinimizeParametersgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<OneGoodnessMinimizeParameters,allocator<OneGoodnessMinimizeParameters> >::iterator>" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_vectorlEOneRunAnalizeManagermUcOallocatorlEOneRunAnalizeManagermUgRsPgR = { "vector<OneRunAnalizeManager*,allocator<OneRunAnalizeManager*> >" , 99 , -1 };
G__linked_taginfo G__macroRootDictLN_reverse_iteratorlEvectorlEOneRunAnalizeManagermUcOallocatorlEOneRunAnalizeManagermUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<OneRunAnalizeManager*,allocator<OneRunAnalizeManager*> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablemacroRootDict() {
  G__macroRootDictLN_TClass.tagnum = -1 ;
  G__macroRootDictLN_TBuffer.tagnum = -1 ;
  G__macroRootDictLN_TMemberInspector.tagnum = -1 ;
  G__macroRootDictLN_TObject.tagnum = -1 ;
  G__macroRootDictLN_TNamed.tagnum = -1 ;
  G__macroRootDictLN_TCollection.tagnum = -1 ;
  G__macroRootDictLN_string.tagnum = -1 ;
  G__macroRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__macroRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__macroRootDictLN_TObjArray.tagnum = -1 ;
  G__macroRootDictLN_TClonesArray.tagnum = -1 ;
  G__macroRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__macroRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__macroRootDictLN_TArray.tagnum = -1 ;
  G__macroRootDictLN_TArrayD.tagnum = -1 ;
  G__macroRootDictLN_TAttLine.tagnum = -1 ;
  G__macroRootDictLN_TAttFill.tagnum = -1 ;
  G__macroRootDictLN_TAttMarker.tagnum = -1 ;
  G__macroRootDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__macroRootDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__macroRootDictLN_TF1.tagnum = -1 ;
  G__macroRootDictLN_TH1D.tagnum = -1 ;
  G__macroRootDictLN_TH1.tagnum = -1 ;
  G__macroRootDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__macroRootDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__macroRootDictLN_TH2D.tagnum = -1 ;
  G__macroRootDictLN_TArc.tagnum = -1 ;
  G__macroRootDictLN_TPave.tagnum = -1 ;
  G__macroRootDictLN_Eventdisplay.tagnum = -1 ;
  G__macroRootDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__macroRootDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__macroRootDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__macroRootDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__macroRootDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__macroRootDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__macroRootDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__macroRootDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__macroRootDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__macroRootDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__macroRootDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__macroRootDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__macroRootDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__macroRootDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__macroRootDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__macroRootDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__macroRootDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__macroRootDictLN_TVector3.tagnum = -1 ;
  G__macroRootDictLN_TLorentzVector.tagnum = -1 ;
  G__macroRootDictLN_goodness_data.tagnum = -1 ;
  G__macroRootDictLN_l_dir_data.tagnum = -1 ;
  G__macroRootDictLN_AnalizedData.tagnum = -1 ;
  G__macroRootDictLN_C4Number.tagnum = -1 ;
  G__macroRootDictLN_CSearch_range.tagnum = -1 ;
  G__macroRootDictLN_TSeqCollection.tagnum = -1 ;
  G__macroRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__macroRootDictLN_FileList.tagnum = -1 ;
  G__macroRootDictLN_efficiency.tagnum = -1 ;
  G__macroRootDictLN_TTree.tagnum = -1 ;
  G__macroRootDictLN_TFile.tagnum = -1 ;
  G__macroRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__macroRootDictLN_TH1DByTree.tagnum = -1 ;
  G__macroRootDictLN_TH1DByTreecLcLAxis.tagnum = -1 ;
  G__macroRootDictLN_HistError.tagnum = -1 ;
  G__macroRootDictLN_HistBias.tagnum = -1 ;
  G__macroRootDictLN_WCSimRootCherenkovDigiHit.tagnum = -1 ;
  G__macroRootDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__macroRootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__macroRootDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__macroRootDictLN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__macroRootDictLN_WCSimRootEvent.tagnum = -1 ;
  G__macroRootDictLN_WCSimRootPMT.tagnum = -1 ;
  G__macroRootDictLN_WCSimRootGeom.tagnum = -1 ;
  G__macroRootDictLN_AngleRange.tagnum = -1 ;
  G__macroRootDictLN_TReconstructhit.tagnum = -1 ;
  G__macroRootDictLN_TReconstructdata.tagnum = -1 ;
  G__macroRootDictLN_vectorlETReconstructhitcOallocatorlETReconstructhitgRsPgR.tagnum = -1 ;
  G__macroRootDictLN_reverse_iteratorlEvectorlETReconstructhitcOallocatorlETReconstructhitgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__macroRootDictLN_TReconstructdata_minimize.tagnum = -1 ;
  G__macroRootDictLN_Thitinfo.tagnum = -1 ;
  G__macroRootDictLN_OneDataParameters.tagnum = -1 ;
  G__macroRootDictLN_OneDataParameterscLcLDetector.tagnum = -1 ;
  G__macroRootDictLN_OneDataParameterscLcLParticle.tagnum = -1 ;
  G__macroRootDictLN_OneDataParameterscLcLPostype.tagnum = -1 ;
  G__macroRootDictLN_OneDataParameterscLcLDirtype.tagnum = -1 ;
  G__macroRootDictLN_OneDataParameterscLcLEtype.tagnum = -1 ;
  G__macroRootDictLN_OneDataParameterscLcLInforeflectivity.tagnum = -1 ;
  G__macroRootDictLN_OneDataParameterscLcLReflectspread.tagnum = -1 ;
  G__macroRootDictLN_pairlEstringcOstringgR.tagnum = -1 ;
  G__macroRootDictLN_vectorlEpairlEstringcOstringgRcOallocatorlEpairlEstringcOstringgRsPgRsPgR.tagnum = -1 ;
  G__macroRootDictLN_reverse_iteratorlEvectorlEpairlEstringcOstringgRcOallocatorlEpairlEstringcOstringgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__macroRootDictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__macroRootDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__macroRootDictLN_OneRunDataAnalizeManager.tagnum = -1 ;
  G__macroRootDictLN_vectorlEThitinfocOallocatorlEThitinfogRsPgR.tagnum = -1 ;
  G__macroRootDictLN_reverse_iteratorlEvectorlEThitinfocOallocatorlEThitinfogRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__macroRootDictLN_OneGoodnessParameters.tagnum = -1 ;
  G__macroRootDictLN_OneGoodnessParameterscLcLDetector.tagnum = -1 ;
  G__macroRootDictLN_OneGoodnessParameterscLcLParticle.tagnum = -1 ;
  G__macroRootDictLN_OneGoodnessParameterscLcLPostype.tagnum = -1 ;
  G__macroRootDictLN_OneGoodnessParameterscLcLDirtype.tagnum = -1 ;
  G__macroRootDictLN_OneGoodnessParameterscLcLEtype.tagnum = -1 ;
  G__macroRootDictLN_OneGoodnessParameterscLcLInforeflectivity.tagnum = -1 ;
  G__macroRootDictLN_OneGoodnessParameterscLcLReflectspread.tagnum = -1 ;
  G__macroRootDictLN_OneGoodnessParameterscLcLGoodnessType.tagnum = -1 ;
  G__macroRootDictLN_OneGoodnessParameterscLcLGoodnessSearchRangeType.tagnum = -1 ;
  G__macroRootDictLN_OneRunGoodnessAnalizeManager.tagnum = -1 ;
  G__macroRootDictLN_OneLikelihoodParameters.tagnum = -1 ;
  G__macroRootDictLN_OneLikelihoodParameterscLcLDetector.tagnum = -1 ;
  G__macroRootDictLN_OneLikelihoodParameterscLcLParticle.tagnum = -1 ;
  G__macroRootDictLN_OneLikelihoodParameterscLcLPostype.tagnum = -1 ;
  G__macroRootDictLN_OneLikelihoodParameterscLcLDirtype.tagnum = -1 ;
  G__macroRootDictLN_OneLikelihoodParameterscLcLEtype.tagnum = -1 ;
  G__macroRootDictLN_OneLikelihoodParameterscLcLInforeflectivity.tagnum = -1 ;
  G__macroRootDictLN_OneLikelihoodParameterscLcLReflectspread.tagnum = -1 ;
  G__macroRootDictLN_OneLikelihoodParameterscLcLGoodnessType.tagnum = -1 ;
  G__macroRootDictLN_OneLikelihoodParameterscLcLGoodnessSearchRangeType.tagnum = -1 ;
  G__macroRootDictLN_OneLikelihoodParameterscLcLLikelihoodType.tagnum = -1 ;
  G__macroRootDictLN_OneLikelihoodParameterscLcLNoRetroFdirection.tagnum = -1 ;
  G__macroRootDictLN_OneLikelihoodParameterscLcLOnRetroFdirection.tagnum = -1 ;
  G__macroRootDictLN_OneLikelihoodParameterscLcLNoRetroAfunction.tagnum = -1 ;
  G__macroRootDictLN_OneLikelihoodParameterscLcLOnRetroAfunction.tagnum = -1 ;
  G__macroRootDictLN_OneLikelihoodParameterscLcLLikelihoodSearchRangeType.tagnum = -1 ;
  G__macroRootDictLN_OneRunLikelihoodAnalizeManager.tagnum = -1 ;
  G__macroRootDictLN_TOption_minimize.tagnum = -1 ;
  G__macroRootDictLN_OneGoodnessMinimizeParameters.tagnum = -1 ;
  G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLDetector.tagnum = -1 ;
  G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLParticle.tagnum = -1 ;
  G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLPostype.tagnum = -1 ;
  G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLDirtype.tagnum = -1 ;
  G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLEtype.tagnum = -1 ;
  G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLInforeflectivity.tagnum = -1 ;
  G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLReflectspread.tagnum = -1 ;
  G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLGoodnessType.tagnum = -1 ;
  G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLGoodnessSearchRangeType.tagnum = -1 ;
  G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLLikelihoodType.tagnum = -1 ;
  G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLNoRetroFdirection.tagnum = -1 ;
  G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLOnRetroFdirection.tagnum = -1 ;
  G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLNoRetroAfunction.tagnum = -1 ;
  G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLOnRetroAfunction.tagnum = -1 ;
  G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLLikelihoodSearchRangeType.tagnum = -1 ;
  G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLGoodnessMinimizeType.tagnum = -1 ;
  G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLOnRetroCorrectionType.tagnum = -1 ;
  G__macroRootDictLN_OneRunGoodnessMinimizeAnalizeManager.tagnum = -1 ;
  G__macroRootDictLN_BiasError.tagnum = -1 ;
  G__macroRootDictLN_OneRunAnalizeManager.tagnum = -1 ;
  G__macroRootDictLN_Tfunction.tagnum = -1 ;
  G__macroRootDictLN_Tafunction.tagnum = -1 ;
  G__macroRootDictLN_Tafuncprototype.tagnum = -1 ;
  G__macroRootDictLN_Tdistance_function.tagnum = -1 ;
  G__macroRootDictLN_Tdistance_position_pmt.tagnum = -1 ;
  G__macroRootDictLN_Tdistance_position_retro.tagnum = -1 ;
  G__macroRootDictLN_Tdistance_fly_retro.tagnum = -1 ;
  G__macroRootDictLN_Tfdirection.tagnum = -1 ;
  G__macroRootDictLN_Tfdirprototypenoretro.tagnum = -1 ;
  G__macroRootDictLN_Tfdirprototypeonretro.tagnum = -1 ;
  G__macroRootDictLN_Tfdirbydatanoretro.tagnum = -1 ;
  G__macroRootDictLN_Tfdirbydataonretro.tagnum = -1 ;
  G__macroRootDictLN_Tlikelihood.tagnum = -1 ;
  G__macroRootDictLN_Tlikelihoodnoretro.tagnum = -1 ;
  G__macroRootDictLN_Tlikelihoodonretro.tagnum = -1 ;
  G__macroRootDictLN_Tlikelihoodsum.tagnum = -1 ;
  G__macroRootDictLN_Ttheta_dir_i.tagnum = -1 ;
  G__macroRootDictLN_Ttheta_i_func.tagnum = -1 ;
  G__macroRootDictLN_Ttof.tagnum = -1 ;
  G__macroRootDictLN_MyString.tagnum = -1 ;
  G__macroRootDictLN_MultiRunAnalizeManager.tagnum = -1 ;
  G__macroRootDictLN_vectorlEOneDataParameterscOallocatorlEOneDataParametersgRsPgR.tagnum = -1 ;
  G__macroRootDictLN_reverse_iteratorlEvectorlEOneDataParameterscOallocatorlEOneDataParametersgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__macroRootDictLN_vectorlEOneGoodnessParameterscOallocatorlEOneGoodnessParametersgRsPgR.tagnum = -1 ;
  G__macroRootDictLN_reverse_iteratorlEvectorlEOneGoodnessParameterscOallocatorlEOneGoodnessParametersgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__macroRootDictLN_vectorlEOneLikelihoodParameterscOallocatorlEOneLikelihoodParametersgRsPgR.tagnum = -1 ;
  G__macroRootDictLN_reverse_iteratorlEvectorlEOneLikelihoodParameterscOallocatorlEOneLikelihoodParametersgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__macroRootDictLN_vectorlEOneGoodnessMinimizeParameterscOallocatorlEOneGoodnessMinimizeParametersgRsPgR.tagnum = -1 ;
  G__macroRootDictLN_reverse_iteratorlEvectorlEOneGoodnessMinimizeParameterscOallocatorlEOneGoodnessMinimizeParametersgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__macroRootDictLN_vectorlEOneRunAnalizeManagermUcOallocatorlEOneRunAnalizeManagermUgRsPgR.tagnum = -1 ;
  G__macroRootDictLN_reverse_iteratorlEvectorlEOneRunAnalizeManagermUcOallocatorlEOneRunAnalizeManagermUgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablemacroRootDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TCollection);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_string);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TArray);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TArrayD);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TAttLine);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TAttFill);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TAttMarker);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TF1);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TH1D);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TH1);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TH2D);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TArc);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TPave);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_Eventdisplay),sizeof(Eventdisplay),-1,324864,(char*)NULL,G__setup_memvarEventdisplay,G__setup_memfuncEventdisplay);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TLorentzVector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_goodness_data),sizeof(goodness_data),-1,324864,(char*)NULL,G__setup_memvargoodness_data,G__setup_memfuncgoodness_data);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_l_dir_data),sizeof(l_dir_data),-1,324864,(char*)NULL,G__setup_memvarl_dir_data,G__setup_memfuncl_dir_data);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_AnalizedData),sizeof(AnalizedData),-1,324864,(char*)NULL,G__setup_memvarAnalizedData,G__setup_memfuncAnalizedData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_C4Number),sizeof(C4Number),-1,324864,(char*)NULL,G__setup_memvarC4Number,G__setup_memfuncC4Number);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_CSearch_range),sizeof(CSearch_range),-1,324864,(char*)NULL,G__setup_memvarCSearch_range,G__setup_memfuncCSearch_range);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TSeqCollection);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_FileList),sizeof(FileList),-1,324864,(char*)NULL,G__setup_memvarFileList,G__setup_memfuncFileList);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_efficiency),sizeof(efficiency),-1,324864,(char*)NULL,G__setup_memvarefficiency,G__setup_memfuncefficiency);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TTree);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_TH1DByTree),sizeof(TH1DByTree),-1,324864,(char*)NULL,G__setup_memvarTH1DByTree,G__setup_memfuncTH1DByTree);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_TH1DByTreecLcLAxis);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_HistError),sizeof(HistError),-1,324864,(char*)NULL,G__setup_memvarHistError,G__setup_memfuncHistError);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_HistBias),sizeof(HistBias),-1,324864,(char*)NULL,G__setup_memvarHistBias,G__setup_memfuncHistBias);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_WCSimRootCherenkovDigiHit);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_WCSimRootEvent);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_WCSimRootPMT);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_WCSimRootGeom);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_AngleRange),sizeof(AngleRange),-1,292096,(char*)NULL,G__setup_memvarAngleRange,G__setup_memfuncAngleRange);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_TReconstructhit),sizeof(TReconstructhit),-1,324864,(char*)NULL,G__setup_memvarTReconstructhit,G__setup_memfuncTReconstructhit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_TReconstructdata),sizeof(TReconstructdata),-1,292096,(char*)NULL,G__setup_memvarTReconstructdata,G__setup_memfuncTReconstructdata);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_vectorlETReconstructhitcOallocatorlETReconstructhitgRsPgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_reverse_iteratorlEvectorlETReconstructhitcOallocatorlETReconstructhitgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_TReconstructdata_minimize),sizeof(TReconstructdata_minimize),-1,292096,(char*)NULL,G__setup_memvarTReconstructdata_minimize,G__setup_memfuncTReconstructdata_minimize);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_Thitinfo),sizeof(Thitinfo),-1,292096,(char*)NULL,G__setup_memvarThitinfo,G__setup_memfuncThitinfo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneDataParameters),sizeof(OneDataParameters),-1,292096,(char*)NULL,G__setup_memvarOneDataParameters,G__setup_memfuncOneDataParameters);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneDataParameterscLcLDetector);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneDataParameterscLcLParticle);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneDataParameterscLcLPostype);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneDataParameterscLcLDirtype);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneDataParameterscLcLEtype);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneDataParameterscLcLInforeflectivity);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneDataParameterscLcLReflectspread);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_pairlEstringcOstringgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_vectorlEpairlEstringcOstringgRcOallocatorlEpairlEstringcOstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_reverse_iteratorlEvectorlEpairlEstringcOstringgRcOallocatorlEpairlEstringcOstringgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneRunDataAnalizeManager),sizeof(OneRunDataAnalizeManager),-1,324864,(char*)NULL,G__setup_memvarOneRunDataAnalizeManager,G__setup_memfuncOneRunDataAnalizeManager);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_vectorlEThitinfocOallocatorlEThitinfogRsPgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_reverse_iteratorlEvectorlEThitinfocOallocatorlEThitinfogRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneGoodnessParameters),sizeof(OneGoodnessParameters),-1,263424,(char*)NULL,G__setup_memvarOneGoodnessParameters,G__setup_memfuncOneGoodnessParameters);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneGoodnessParameterscLcLDetector);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneGoodnessParameterscLcLParticle);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneGoodnessParameterscLcLPostype);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneGoodnessParameterscLcLDirtype);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneGoodnessParameterscLcLEtype);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneGoodnessParameterscLcLInforeflectivity);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneGoodnessParameterscLcLReflectspread);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneGoodnessParameterscLcLGoodnessType);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneGoodnessParameterscLcLGoodnessSearchRangeType);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneRunGoodnessAnalizeManager),sizeof(OneRunGoodnessAnalizeManager),-1,324864,(char*)NULL,G__setup_memvarOneRunGoodnessAnalizeManager,G__setup_memfuncOneRunGoodnessAnalizeManager);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneLikelihoodParameters),sizeof(OneLikelihoodParameters),-1,292096,(char*)NULL,G__setup_memvarOneLikelihoodParameters,G__setup_memfuncOneLikelihoodParameters);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneLikelihoodParameterscLcLDetector);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneLikelihoodParameterscLcLParticle);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneLikelihoodParameterscLcLPostype);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneLikelihoodParameterscLcLDirtype);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneLikelihoodParameterscLcLEtype);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneLikelihoodParameterscLcLInforeflectivity);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneLikelihoodParameterscLcLReflectspread);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneLikelihoodParameterscLcLGoodnessType);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneLikelihoodParameterscLcLGoodnessSearchRangeType);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneLikelihoodParameterscLcLLikelihoodType);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneLikelihoodParameterscLcLNoRetroFdirection);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneLikelihoodParameterscLcLOnRetroFdirection);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneLikelihoodParameterscLcLNoRetroAfunction);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneLikelihoodParameterscLcLOnRetroAfunction);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneLikelihoodParameterscLcLLikelihoodSearchRangeType);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneRunLikelihoodAnalizeManager),sizeof(OneRunLikelihoodAnalizeManager),-1,324864,(char*)NULL,G__setup_memvarOneRunLikelihoodAnalizeManager,G__setup_memfuncOneRunLikelihoodAnalizeManager);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_TOption_minimize),sizeof(TOption_minimize),-1,292096,(char*)NULL,G__setup_memvarTOption_minimize,G__setup_memfuncTOption_minimize);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneGoodnessMinimizeParameters),sizeof(OneGoodnessMinimizeParameters),-1,292096,(char*)NULL,G__setup_memvarOneGoodnessMinimizeParameters,G__setup_memfuncOneGoodnessMinimizeParameters);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLDetector);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLParticle);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLPostype);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLDirtype);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLEtype);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLInforeflectivity);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLReflectspread);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLGoodnessType);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLGoodnessSearchRangeType);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLLikelihoodType);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLNoRetroFdirection);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLOnRetroFdirection);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLNoRetroAfunction);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLOnRetroAfunction);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLLikelihoodSearchRangeType);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLGoodnessMinimizeType);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneGoodnessMinimizeParameterscLcLOnRetroCorrectionType);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneRunGoodnessMinimizeAnalizeManager),sizeof(OneRunGoodnessMinimizeAnalizeManager),-1,324864,(char*)NULL,G__setup_memvarOneRunGoodnessMinimizeAnalizeManager,G__setup_memfuncOneRunGoodnessMinimizeAnalizeManager);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_BiasError),sizeof(BiasError),-1,292096,(char*)NULL,G__setup_memvarBiasError,G__setup_memfuncBiasError);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_OneRunAnalizeManager),sizeof(OneRunAnalizeManager),-1,324864,(char*)NULL,G__setup_memvarOneRunAnalizeManager,G__setup_memfuncOneRunAnalizeManager);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_Tfunction),sizeof(Tfunction),-1,292097,(char*)NULL,G__setup_memvarTfunction,G__setup_memfuncTfunction);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_Tafunction),sizeof(Tafunction),-1,292097,(char*)NULL,G__setup_memvarTafunction,G__setup_memfuncTafunction);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_Tafuncprototype),sizeof(Tafuncprototype),-1,292096,(char*)NULL,G__setup_memvarTafuncprototype,G__setup_memfuncTafuncprototype);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_Tdistance_function),sizeof(Tdistance_function),-1,292097,(char*)NULL,G__setup_memvarTdistance_function,G__setup_memfuncTdistance_function);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_Tdistance_position_pmt),sizeof(Tdistance_position_pmt),-1,292096,(char*)NULL,G__setup_memvarTdistance_position_pmt,G__setup_memfuncTdistance_position_pmt);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_Tdistance_position_retro),sizeof(Tdistance_position_retro),-1,292096,(char*)NULL,G__setup_memvarTdistance_position_retro,G__setup_memfuncTdistance_position_retro);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_Tdistance_fly_retro),sizeof(Tdistance_fly_retro),-1,292096,(char*)NULL,G__setup_memvarTdistance_fly_retro,G__setup_memfuncTdistance_fly_retro);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_Tfdirection),sizeof(Tfdirection),-1,292097,(char*)NULL,G__setup_memvarTfdirection,G__setup_memfuncTfdirection);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_Tfdirprototypenoretro),sizeof(Tfdirprototypenoretro),-1,292096,(char*)NULL,G__setup_memvarTfdirprototypenoretro,G__setup_memfuncTfdirprototypenoretro);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_Tfdirprototypeonretro),sizeof(Tfdirprototypeonretro),-1,292096,(char*)NULL,G__setup_memvarTfdirprototypeonretro,G__setup_memfuncTfdirprototypeonretro);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_Tfdirbydatanoretro),sizeof(Tfdirbydatanoretro),-1,292096,(char*)NULL,G__setup_memvarTfdirbydatanoretro,G__setup_memfuncTfdirbydatanoretro);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_Tfdirbydataonretro),sizeof(Tfdirbydataonretro),-1,292096,(char*)NULL,G__setup_memvarTfdirbydataonretro,G__setup_memfuncTfdirbydataonretro);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_Tlikelihood),sizeof(Tlikelihood),-1,292097,(char*)NULL,G__setup_memvarTlikelihood,G__setup_memfuncTlikelihood);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_Tlikelihoodnoretro),sizeof(Tlikelihoodnoretro),-1,292096,(char*)NULL,G__setup_memvarTlikelihoodnoretro,G__setup_memfuncTlikelihoodnoretro);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_Tlikelihoodonretro),sizeof(Tlikelihoodonretro),-1,292096,(char*)NULL,G__setup_memvarTlikelihoodonretro,G__setup_memfuncTlikelihoodonretro);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_Tlikelihoodsum),sizeof(Tlikelihoodsum),-1,292096,(char*)NULL,G__setup_memvarTlikelihoodsum,G__setup_memfuncTlikelihoodsum);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_Ttheta_dir_i),sizeof(Ttheta_dir_i),-1,292096,(char*)NULL,G__setup_memvarTtheta_dir_i,G__setup_memfuncTtheta_dir_i);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_Ttheta_i_func),sizeof(Ttheta_i_func),-1,292096,(char*)NULL,G__setup_memvarTtheta_i_func,G__setup_memfuncTtheta_i_func);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_Ttof),sizeof(Ttof),-1,292096,(char*)NULL,G__setup_memvarTtof,G__setup_memfuncTtof);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_MyString),sizeof(MyString),-1,324864,(char*)NULL,G__setup_memvarMyString,G__setup_memfuncMyString);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__macroRootDictLN_MultiRunAnalizeManager),sizeof(MultiRunAnalizeManager),-1,292096,(char*)NULL,G__setup_memvarMultiRunAnalizeManager,G__setup_memfuncMultiRunAnalizeManager);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_vectorlEOneDataParameterscOallocatorlEOneDataParametersgRsPgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_reverse_iteratorlEvectorlEOneDataParameterscOallocatorlEOneDataParametersgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_vectorlEOneGoodnessParameterscOallocatorlEOneGoodnessParametersgRsPgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_reverse_iteratorlEvectorlEOneGoodnessParameterscOallocatorlEOneGoodnessParametersgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_vectorlEOneLikelihoodParameterscOallocatorlEOneLikelihoodParametersgRsPgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_reverse_iteratorlEvectorlEOneLikelihoodParameterscOallocatorlEOneLikelihoodParametersgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_vectorlEOneGoodnessMinimizeParameterscOallocatorlEOneGoodnessMinimizeParametersgRsPgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_reverse_iteratorlEvectorlEOneGoodnessMinimizeParameterscOallocatorlEOneGoodnessMinimizeParametersgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_vectorlEOneRunAnalizeManagermUcOallocatorlEOneRunAnalizeManagermUgRsPgR);
   G__get_linked_tagnum_fwd(&G__macroRootDictLN_reverse_iteratorlEvectorlEOneRunAnalizeManagermUcOallocatorlEOneRunAnalizeManagermUgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupmacroRootDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupmacroRootDict()");
  G__set_cpp_environmentmacroRootDict();
  G__cpp_setup_tagtablemacroRootDict();

  G__cpp_setup_inheritancemacroRootDict();

  G__cpp_setup_typetablemacroRootDict();

  G__cpp_setup_memvarmacroRootDict();

  G__cpp_setup_memfuncmacroRootDict();
  G__cpp_setup_globalmacroRootDict();
  G__cpp_setup_funcmacroRootDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncmacroRootDict();
  return;
}
class G__cpp_setup_initmacroRootDict {
  public:
    G__cpp_setup_initmacroRootDict() { G__add_setup_func("macroRootDict",(G__incsetup)(&G__cpp_setupmacroRootDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initmacroRootDict() { G__remove_setup_func("macroRootDict"); }
};
G__cpp_setup_initmacroRootDict G__cpp_setup_initializermacroRootDict;

